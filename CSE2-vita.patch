diff --git a/.gitignore b/.gitignore
index 52725edc..e6611e2a 100644
--- a/.gitignore
+++ b/.gitignore
@@ -50,6 +50,7 @@
 
 # Exclude misc. MSVC junk
 /.vs
+/.vscode
 /out
 /CMakeSettings.json
 
diff --git a/CMakeLists.txt b/CMakeLists.txt
index 1d075d49..f8c52cbf 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,9 +1,5 @@
 cmake_minimum_required(VERSION 3.8)
 
-if((${CMAKE_VERSION} VERSION_EQUAL 3.9) OR (${CMAKE_VERSION} VERSION_GREATER 3.9))
-	cmake_policy(SET CMP0069 NEW)
-endif()
-
 
 #############
 # Constants #
@@ -17,31 +13,41 @@ set(ASSETS_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/assets")
 ###########
 
 option(JAPANESE "Enable the Japanese-language build (instead of the unofficial Aeon Genesis English translation)" OFF)
-option(FIX_BUGS "Fix various bugs in the game" OFF)
+option(FIX_BUGS "Fix various bugs in the game" ON)
 option(FIX_MAJOR_BUGS "Fix bugs that invoke undefined behaviour or cause memory leaks" ON)
-option(DEBUG_SAVE "Re-enable the ability to drag-and-drop save files onto the window" OFF)
-option(DOCONFIG "Compile a DoConfig clone tool - not useful for console ports" ON)
-option(LANCZOS_RESAMPLER "Use Lanczos filtering for audio resampling instead of linear-interpolation (Lanczos is more performance-intensive, but higher quality)" OFF)
-option(FREETYPE_FONTS "Use FreeType2 to render the DejaVu Mono (English) or Migu1M (Japanese) fonts, instead of using pre-rendered copies of Courier New (English) and MS Gothic (Japanese)" OFF)
-
-set(BACKEND_RENDERER "SDLTexture" CACHE STRING "Which renderer the game should use: 'OpenGL3' for an OpenGL 3.2 renderer, 'OpenGLES2' for an OpenGL ES 2.0 renderer, 'SDLTexture' for SDL2's hardware-accelerated Texture API, 'SDLSurface' for SDL2's software-rendered Surface API, 'Wii U' for the Wii U's hardware-accelerated GX2 API, '3DS' for the 3DS's hardware accelerated Citro2D/Citro3D API, or 'Software' for a handwritten software renderer")
-set(BACKEND_AUDIO "SDL2" CACHE STRING "Which audio backend the game should use: 'SDL2', 'SDL1', 'miniaudio', 'WiiU-Hardware', 'WiiU-Software', '3DS-Hardware', '3DS-Software', or 'Null'")
-set(BACKEND_PLATFORM "SDL2" CACHE STRING "Which platform backend the game should use: 'SDL2', 'SDL1', 'GLFW3', 'WiiU', '3DS', or 'Null'")
+option(FREETYPE_FONTS "Use FreeType2 to render the DejaVu Mono (English) or Migu1M (Japanese) fonts, instead of using pre-rendered copies of Courier New (English) and MS Gothic (Japanese)" ON)
 
-option(LTO "Enable link-time optimisation" OFF)
-option(PKG_CONFIG_STATIC_LIBS "On platforms with pkg-config, static-link the dependencies (good for Windows builds, so you don't need to bundle DLL files)" OFF)
-option(MSVC_LINK_STATIC_RUNTIME "Link the static MSVC runtime library (Visual Studio only)" OFF)
-
-option(FORCE_LOCAL_LIBS "Compile the built-in versions of SDL2, GLFW3, and FreeType instead of using the system-provided ones" OFF)
 
 
 #########
 # Setup #
 #########
 
-project(CSE2 LANGUAGES C CXX)
+if(NOT DEFINED CMAKE_TOOLCHAIN_FILE)
+  if(DEFINED ENV{VITASDK})
+    set(CMAKE_TOOLCHAIN_FILE "$ENV{VITASDK}/share/vita.toolchain.cmake" CACHE PATH "toolchain file")
+  else()
+    message(FATAL_ERROR "Please define VITASDK to point to your SDK path!")
+  endif()
+endif()
+
+if(JAPANESE)
+	set(VITA_APP_NAME "洞窟物語")
+	set(VITA_TITLEID  "DOKU41221")
+else()
+	set(VITA_APP_NAME "Cave Story")
+	set(VITA_TITLEID  "DOKU41220")
+endif()
+set(VITA_VERSION  "01.06")
+
+
+project(CSE2)
+include("${VITASDK}/share/vita.cmake" REQUIRED)
 
-add_executable(CSE2 WIN32
+set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -std=gnu11")
+set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
+
+add_executable(${PROJECT_NAME}
 	"${ASSETS_DIRECTORY}/resources/CSE2.rc"
 	"${ASSETS_DIRECTORY}/resources/CSE2.manifest"
 	"src/ArmsItem.cpp"
@@ -179,6 +185,16 @@ add_executable(CSE2 WIN32
 	"src/Backends/Controller.h"
 	"src/Backends/Misc.h"
 	"src/Backends/Rendering.h"
+	"src/Backends/Rendering/SDLTexture.cpp"
+	"src/Backends/Audio/SoftwareMixer.cpp"
+	"src/Backends/Audio/SoftwareMixer/Mixer.cpp"
+	"src/Backends/Audio/SoftwareMixer/Mixer.h"
+	"src/Backends/Audio/SoftwareMixer/Backend.h"
+	"src/Backends/Audio/SoftwareMixer/SDL2.cpp"
+	"src/Backends/Controller/SDL.cpp"
+	"src/Backends/Platform/SDL2.cpp"
+	"src/Backends/Shared/SDL.h"
+	"src/Backends/Rendering/Window/Software/SDL2.cpp"
 )
 
 set(RESOURCES
@@ -244,6 +260,7 @@ set(RESOURCES
 	"ORG/XXXX.org"
 	"ORG/Zonbie.org"
 	"WAVE/Wave.dat"
+	"ICON/ICON_MINI.png"
 )
 
 list(APPEND CMAKE_MODULE_PATH
@@ -256,11 +273,9 @@ list(APPEND CMAKE_MODULE_PATH
 ###################
 
 if(JAPANESE)
-	set(BUILD_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/game_japanese")
 	list(APPEND RESOURCES "BITMAP/pixel_jp.bmp")
 	target_compile_definitions(CSE2 PRIVATE JAPANESE)
 else()
-	set(BUILD_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/game_english")
 	list(APPEND RESOURCES "BITMAP/pixel.bmp")
 endif()
 
@@ -272,447 +287,52 @@ if(FIX_BUGS OR FIX_MAJOR_BUGS)
 	target_compile_definitions(CSE2 PRIVATE FIX_MAJOR_BUGS)
 endif()
 
-if(DEBUG_SAVE)
-	target_compile_definitions(CSE2 PRIVATE DEBUG_SAVE)
-endif()
-
-if(LANCZOS_RESAMPLER)
-	target_compile_definitions(CSE2 PRIVATE LANCZOS_RESAMPLER)
-endif()
-
 if(FREETYPE_FONTS)
 	target_compile_definitions(CSE2 PRIVATE FREETYPE_FONTS)
 endif()
 
-if(PKG_CONFIG_STATIC_LIBS)
-	target_link_options(CSE2 PRIVATE "-static")
-endif()
-
-if(LTO)
-	include(CheckIPOSupported)
-
-	check_ipo_supported(RESULT result)
-
-	if(result)
-		set_target_properties(CSE2 PROPERTIES INTERPROCEDURAL_OPTIMIZATION TRUE)
-	endif()
-endif()
-
-# This is messy as hell, and has been replaced by CMAKE_MSVC_RUNTIME_LIBRARY,
-# but that's a very recent CMake addition, so we're still doing it this way for now
-if(MSVC AND MSVC_LINK_STATIC_RUNTIME)
-	# Statically-link the CRT (vcpkg static libs do this)
-	foreach(flag_var CMAKE_C_FLAGS CMAKE_C_FLAGS_DEBUG CMAKE_C_FLAGS_RELEASE CMAKE_C_FLAGS_MINSIZEREL CMAKE_C_FLAGS_RELWITHDEBINFO CMAKE_CXX_FLAGS CMAKE_CXX_FLAGS_DEBUG CMAKE_CXX_FLAGS_RELEASE CMAKE_CXX_FLAGS_MINSIZEREL CMAKE_CXX_FLAGS_RELWITHDEBINFO)
-		if(${flag_var} MATCHES "/MD")
-			string(REGEX REPLACE "/MD" "/MT" ${flag_var} "${${flag_var}}")
-		endif()
-	endforeach()
-endif()
-
-if(BACKEND_RENDERER MATCHES "OpenGL3")
-	target_sources(CSE2 PRIVATE "src/Backends/Rendering/OpenGL3.cpp")
-elseif(BACKEND_RENDERER MATCHES "OpenGLES2")
-	target_sources(CSE2 PRIVATE "src/Backends/Rendering/OpenGLES2.cpp")
-elseif(BACKEND_RENDERER MATCHES "SDLTexture")
-	target_sources(CSE2 PRIVATE "src/Backends/Rendering/SDLTexture.cpp")
-elseif(BACKEND_RENDERER MATCHES "SDLSurface")
-	target_sources(CSE2 PRIVATE "src/Backends/Rendering/SDLSurface.cpp")
-elseif(BACKEND_RENDERER MATCHES "WiiU")
-	target_sources(CSE2 PRIVATE "src/Backends/Rendering/WiiU.cpp")
-elseif(BACKEND_RENDERER MATCHES "3DS")
-	target_sources(CSE2 PRIVATE "src/Backends/Rendering/3DS.cpp")
-	target_link_libraries(CSE2 PRIVATE "${CTRU_ROOT}/lib/libcitro2d.a" "${CTRU_ROOT}/lib/libcitro3d.a")
-elseif(BACKEND_RENDERER MATCHES "Software")
-	target_sources(CSE2 PRIVATE "src/Backends/Rendering/Software.cpp")
-else()
-	message(FATAL_ERROR "Invalid BACKEND_RENDERER selected")
-endif()
-
-if(BACKEND_AUDIO MATCHES "SDL2")
-	target_sources(CSE2 PRIVATE
-		"src/Backends/Audio/SoftwareMixer.cpp"
-		"src/Backends/Audio/SoftwareMixer/Mixer.cpp"
-		"src/Backends/Audio/SoftwareMixer/Mixer.h"
-		"src/Backends/Audio/SoftwareMixer/Backend.h"
-		"src/Backends/Audio/SoftwareMixer/SDL2.cpp"
-	)
-elseif(BACKEND_AUDIO MATCHES "SDL1")
-	target_sources(CSE2 PRIVATE
-		"src/Backends/Audio/SoftwareMixer.cpp"
-		"src/Backends/Audio/SoftwareMixer/Mixer.cpp"
-		"src/Backends/Audio/SoftwareMixer/Mixer.h"
-		"src/Backends/Audio/SoftwareMixer/Backend.h"
-		"src/Backends/Audio/SoftwareMixer/SDL1.cpp"
-	)
-elseif(BACKEND_AUDIO MATCHES "miniaudio")
-	target_sources(CSE2 PRIVATE
-		"src/Backends/Audio/SoftwareMixer.cpp"
-		"src/Backends/Audio/SoftwareMixer/Mixer.cpp"
-		"src/Backends/Audio/SoftwareMixer/Mixer.h"
-		"src/Backends/Audio/SoftwareMixer/Backend.h"
-		"src/Backends/Audio/SoftwareMixer/miniaudio.cpp"
-	)
-
-	# Link libdl, libm, and libpthread
-	include(CheckLibraryExists)
-
-	check_library_exists(m pow "" LIBM)
-	if(LIBM)
-		target_link_libraries(CSE2 PRIVATE m)
-	endif()
-
-	check_library_exists(pthread pthread_create "" LIBPTHREAD)
-	if(LIBPTHREAD)
-		target_link_libraries(CSE2 PRIVATE pthread)
-	endif()
-
-	target_link_libraries(CSE2 PRIVATE ${CMAKE_DL_LIBS})
-elseif(BACKEND_AUDIO MATCHES "WiiU-Hardware")
-	target_sources(CSE2 PRIVATE
-		"src/Backends/Audio/WiiU.cpp"
-	)
-elseif(BACKEND_AUDIO MATCHES "WiiU-Software")
-	target_sources(CSE2 PRIVATE
-		"src/Backends/Audio/SoftwareMixer.cpp"
-		"src/Backends/Audio/SoftwareMixer/Mixer.cpp"
-		"src/Backends/Audio/SoftwareMixer/Mixer.h"
-		"src/Backends/Audio/SoftwareMixer/Backend.h"
-		"src/Backends/Audio/SoftwareMixer/WiiU.cpp"
-	)
-elseif(BACKEND_AUDIO MATCHES "3DS-Hardware")
-	target_sources(CSE2 PRIVATE
-		"src/Backends/Audio/3DS.cpp"
-	)
-elseif(BACKEND_AUDIO MATCHES "3DS-Software")
-	target_sources(CSE2 PRIVATE
-		"src/Backends/Audio/SoftwareMixer.cpp"
-		"src/Backends/Audio/SoftwareMixer/Mixer.cpp"
-		"src/Backends/Audio/SoftwareMixer/Mixer.h"
-		"src/Backends/Audio/SoftwareMixer/Backend.h"
-		"src/Backends/Audio/SoftwareMixer/3DS.cpp"
-	)
-elseif(BACKEND_AUDIO MATCHES "Null")
-	target_sources(CSE2 PRIVATE
-		"src/Backends/Audio/Null.cpp"
-	)
-else()
-	message(FATAL_ERROR "Invalid BACKEND_AUDIO selected")
-endif()
-
-if(BACKEND_PLATFORM MATCHES "SDL2")
-	target_sources(CSE2 PRIVATE
-		"src/Backends/Controller/SDL.cpp"
-		"src/Backends/Platform/SDL2.cpp"
-		"src/Backends/Shared/SDL.h"
-	)
-elseif(BACKEND_PLATFORM MATCHES "SDL1")
-	target_sources(CSE2 PRIVATE
-		"src/Backends/Controller/SDL.cpp"
-		"src/Backends/Platform/SDL1.cpp"
-		"src/Backends/Shared/SDL.h"
-	)
-elseif(BACKEND_PLATFORM MATCHES "GLFW3")
-	target_sources(CSE2 PRIVATE
-		"src/Backends/Controller/GLFW3.cpp"
-		"src/Backends/Platform/GLFW3.cpp"
-		"src/Backends/Shared/GLFW3.h"
-	)
-elseif(BACKEND_PLATFORM MATCHES "WiiU")
-	target_sources(CSE2 PRIVATE
-		"src/Backends/Controller/Null.cpp"
-		"src/Backends/Platform/WiiU.cpp"
-	)
-elseif(BACKEND_PLATFORM MATCHES "3DS")
-	target_sources(CSE2 PRIVATE
-		"src/Backends/Controller/Null.cpp"
-		"src/Backends/Platform/3DS.cpp"
-	)
-elseif(BACKEND_PLATFORM MATCHES "Null")
-	target_sources(CSE2 PRIVATE
-		"src/Backends/Controller/Null.cpp"
-		"src/Backends/Platform/Null.cpp"
-	)
-endif()
-
-if(BACKEND_PLATFORM MATCHES "SDL2" AND BACKEND_RENDERER MATCHES "OpenGL3")
-	target_sources(CSE2 PRIVATE "src/Backends/Rendering/Window/OpenGL3/SDL2.cpp")
-elseif(BACKEND_PLATFORM MATCHES "SDL2" AND BACKEND_RENDERER MATCHES "OpenGLES2")
-	target_sources(CSE2 PRIVATE "src/Backends/Rendering/Window/OpenGLES2/SDL2.cpp")
-elseif(BACKEND_PLATFORM MATCHES "SDL2" AND BACKEND_RENDERER MATCHES "SDLTexture")
-elseif(BACKEND_PLATFORM MATCHES "SDL2" AND BACKEND_RENDERER MATCHES "SDLSurface")
-elseif(BACKEND_PLATFORM MATCHES "SDL2" AND BACKEND_RENDERER MATCHES "Software")
-	target_sources(CSE2 PRIVATE "src/Backends/Rendering/Window/Software/SDL2.cpp")
-elseif(BACKEND_PLATFORM MATCHES "SDL1" AND BACKEND_RENDERER MATCHES "OpenGL3")
-	target_sources(CSE2 PRIVATE "src/Backends/Rendering/Window/OpenGL3/SDL1.cpp")
-elseif(BACKEND_PLATFORM MATCHES "SDL1" AND BACKEND_RENDERER MATCHES "Software")
-	target_sources(CSE2 PRIVATE "src/Backends/Rendering/Window/Software/SDL1.cpp")
-elseif(BACKEND_PLATFORM MATCHES "GLFW3" AND BACKEND_RENDERER MATCHES "OpenGL3")
-	target_sources(CSE2 PRIVATE "src/Backends/Rendering/Window/OpenGL3/GLFW3.cpp")
-elseif(BACKEND_PLATFORM MATCHES "GLFW3" AND BACKEND_RENDERER MATCHES "OpenGLES2")
-	target_sources(CSE2 PRIVATE "src/Backends/Rendering/Window/OpenGLES2/GLFW3.cpp")
-elseif(BACKEND_PLATFORM MATCHES "GLFW3" AND BACKEND_RENDERER MATCHES "Software")
-	target_sources(CSE2 PRIVATE "src/Backends/Rendering/Window/Software/GLFW3.cpp")
-elseif(BACKEND_PLATFORM MATCHES "WiiU" AND BACKEND_RENDERER MATCHES "WiiU")
-elseif(BACKEND_PLATFORM MATCHES "WiiU" AND BACKEND_RENDERER MATCHES "Software")
-	target_sources(CSE2 PRIVATE "src/Backends/Rendering/Window/Software/WiiU.cpp")
-elseif(BACKEND_PLATFORM MATCHES "3DS" AND BACKEND_RENDERER MATCHES "3DS")
-elseif(BACKEND_PLATFORM MATCHES "3DS" AND BACKEND_RENDERER MATCHES "Software")
-	target_sources(CSE2 PRIVATE "src/Backends/Rendering/Window/Software/3DS.cpp")
-elseif(BACKEND_PLATFORM MATCHES "Null" AND BACKEND_RENDERER MATCHES "Software")
-	target_sources(CSE2 PRIVATE "src/Backends/Rendering/Window/Software/Null.cpp")
-else()
-	message(FATAL_ERROR "Invalid BACKEND_PLATFORM/BACKEND_RENDERER combination")
-endif()
-
-
-##########
-# Tweaks #
-##########
-
-# Make some tweaks if we're using MSVC
-if(MSVC)
-	# Disable warnings that normally fire up on MSVC when using "unsafe" functions instead of using MSVC's "safe" _s functions
-	target_compile_definitions(CSE2 PRIVATE _CRT_SECURE_NO_WARNINGS)
-
-	# Make it so source files are recognized as UTF-8 by MSVC
-	target_compile_options(CSE2 PRIVATE "/utf-8")
-
-	# Use `main` instead of `WinMain`
-	set_target_properties(CSE2 PROPERTIES LINK_FLAGS "/ENTRY:mainCRTStartup")
-endif()
-
-# On Windows, we use native icons instead
-if(NOT WIN32)
-	list(APPEND RESOURCES "ICON/ICON_MINI.png")
-endif()
-
-
 ##################
 # Misc. settings #
 ##################
 
-# Force strict C90
-set_target_properties(CSE2 PROPERTIES
-	C_STANDARD 90
-	C_STANDARD_REQUIRED ON
-	C_EXTENSIONS OFF
-)
-
-if(NOT BACKEND_PLATFORM MATCHES "WiiU" AND NOT BACKEND_PLATFORM MATCHES "3DS")
-	# Force strict C++98
-	set_target_properties(CSE2 PROPERTIES
-		CXX_STANDARD 98
-		CXX_STANDARD_REQUIRED ON
-		CXX_EXTENSIONS OFF
-	)
-endif()
 
 # Name debug builds "CSE2_debug", to distinguish them
-set_target_properties(CSE2 PROPERTIES DEBUG_OUTPUT_NAME "CSE2_debug")
-
-# Send executable to the build_en/build_jp directory
-set_target_properties(CSE2 PROPERTIES
-	RUNTIME_OUTPUT_DIRECTORY ${BUILD_DIRECTORY}
-	RUNTIME_OUTPUT_DIRECTORY_RELEASE ${BUILD_DIRECTORY}
-	RUNTIME_OUTPUT_DIRECTORY_MINSIZEREL ${BUILD_DIRECTORY}
-	RUNTIME_OUTPUT_DIRECTORY_RELWITHDEBINFO ${BUILD_DIRECTORY}
-	RUNTIME_OUTPUT_DIRECTORY_DEBUG ${BUILD_DIRECTORY}
-)
+set_target_properties(${PROJECT_NAME} PROPERTIES DEBUG_OUTPUT_NAME "CSE2_debug")
 
 
 ################
 # Dependencies #
 ################
 
-if(NOT FORCE_LOCAL_LIBS)
-	find_package(PkgConfig QUIET)
-endif()
-
-if(BACKEND_PLATFORM MATCHES "GLFW3")
-	if(NOT FORCE_LOCAL_LIBS)
-		find_package(glfw3)
-
-		if (PKG_CONFIG_FOUND)
-			pkg_check_modules(glfw3 QUIET IMPORTED_TARGET glfw3)
-		endif()
-	endif()
-
-	if(TARGET PkgConfig::glfw3)
-		# pkg-config
-		if (PKG_CONFIG_STATIC_LIBS)
-			message(STATUS "Using system GLFW3 (pkg-config, static)")
-			target_compile_options(CSE2 PRIVATE ${glfw3_STATIC_CFLAGS})
-			target_link_libraries(CSE2 PRIVATE ${glfw3_STATIC_LDFLAGS})
-		else()
-			message(STATUS "Using system GLFW3 (pkg-config, dynamic)")
-			target_compile_options(CSE2 PRIVATE ${glfw3_CFLAGS})
-			target_link_libraries(CSE2 PRIVATE ${glfw3_LDFLAGS})
-		endif()
-	elseif(TARGET glfw)
-		# CMake
-		message(STATUS "Using system GLFW3 (CMake)")
-		target_link_libraries(CSE2 PRIVATE glfw)
-	else()
-		# Compile it ourselves
-		message(STATUS "Using local GLFW3")
-		set(GLFW_BUILD_EXAMPLES OFF CACHE INTERNAL "" FORCE)
-		set(GLFW_BUILD_TESTS OFF CACHE INTERNAL "" FORCE)
-		set(GLFW_BUILD_DOCS OFF CACHE INTERNAL "" FORCE)
-		set(GLFW_INSTALL OFF CACHE INTERNAL "" FORCE)
-		add_subdirectory("external/glfw" EXCLUDE_FROM_ALL)
-		target_link_libraries(CSE2 PRIVATE glfw)
-	endif()
-endif()
 
-if(BACKEND_PLATFORM MATCHES "SDL2" OR BACKEND_AUDIO MATCHES "SDL2")
-	if(NOT FORCE_LOCAL_LIBS)
-		find_package(SDL2)
-
-		if (PKG_CONFIG_FOUND)
-			pkg_check_modules(sdl2 QUIET IMPORTED_TARGET sdl2)
-		endif()
-	endif()
-
-	if(TARGET PkgConfig::sdl2)
-		# pkg-config
-		if (PKG_CONFIG_STATIC_LIBS)
-			message(STATUS "Using system SDL2 (pkg-config, static)")
-			# Do not link libSDL2main.a, otherwise we get weird linker errors about SDL_main not being found.
-			# We don't need SDL2's WinMain->main shim anyway, so we can just ignore it.
-			list(REMOVE_ITEM sdl2_STATIC_CFLAGS "-Dmain=SDL_main")
-			list(REMOVE_ITEM sdl2_STATIC_LDFLAGS "-lSDL2main")
-			target_compile_options(CSE2 PRIVATE ${sdl2_STATIC_CFLAGS})
-			target_link_libraries(CSE2 PRIVATE ${sdl2_STATIC_LDFLAGS})
-		else()
-			message(STATUS "Using system SDL2 (pkg-config, dynamic)")
-			# Do not link libSDL2main.a, otherwise we get weird linker errors about SDL_main not being found.
-			# We don't need SDL2's WinMain->main shim anyway, so we can just ignore it.
-			list(REMOVE_ITEM sdl2_CFLAGS "-Dmain=SDL_main")
-			list(REMOVE_ITEM sdl2_LDFLAGS "-lSDL2main")
-			target_compile_options(CSE2 PRIVATE ${sdl2_CFLAGS})
-			target_link_libraries(CSE2 PRIVATE ${sdl2_LDFLAGS})
-		endif()
-	elseif(TARGET SDL2::SDL2)
-		# CMake-generated config (Arch, vcpkg, Raspbian)
-		message(STATUS "Using system SDL2 (CMake, dynamic)")
-		target_link_libraries(CSE2 PRIVATE SDL2::SDL2)
-	elseif(TARGET SDL2::SDL2-static)
-		# CMake-generated config (Arch, vcpkg, Raspbian)
-		message(STATUS "Using system SDL2 (CMake, static)")
-		target_link_libraries(CSE2 PRIVATE SDL2::SDL2-static)
-	elseif(SDL2_FOUND)
-		# Autotools-generated config (MSYS2)
-		message(STATUS "Using system SDL2 (Autotools)")
-		target_include_directories(CSE2 PRIVATE ${SDL2_INCLUDE_DIRS})
-		target_link_libraries(CSE2 PRIVATE ${SDL2_LIBRARIES})
-	else()
-		# Compile it ourselves
-		message(STATUS "Using local SDL2")
-		set(SDL_SHARED_ENABLED_BY_DEFAULT OFF)
-		if(MSVC)
-				set(LIBC ON CACHE INTERNAL "" FORCE)	# Needed to prevent possible 'symbol already defined' errors
-		endif()
-		add_subdirectory("external/SDL2" EXCLUDE_FROM_ALL)
-		target_link_libraries(CSE2 PRIVATE SDL2-static)
-	endif()
-endif()
-
-if(BACKEND_PLATFORM MATCHES "SDL1" OR BACKEND_AUDIO MATCHES "SDL1")
-	if(BACKEND_PLATFORM MATCHES "SDL2" OR BACKEND_AUDIO MATCHES "SDL2")
-		message(FATAL_ERROR "SDL1 and SDL2 cannot be used simultaneously!")
-	endif()
-
-	find_package(SDL 1.2.15)
-
-	if (PKG_CONFIG_FOUND)
-		pkg_check_modules(sdl QUIET IMPORTED_TARGET sdl)
-	endif()
-
-	if(TARGET PkgConfig::sdl)
-		# pkg-config
-		if (PKG_CONFIG_STATIC_LIBS)
-			message(STATUS "Using system SDL1 (pkg-config, static)")
-			# Do not link libSDLmain.a, otherwise we get weird linker errors about SDL_main not being found.
-			# We don't need SDL's WinMain->main shim anyway, so we can just ignore it.
-			list(REMOVE_ITEM sdl_STATIC_CFLAGS "-Dmain=SDL_main")
-			list(REMOVE_ITEM sdl_STATIC_LDFLAGS "-lSDLmain")
-			target_compile_options(CSE2 PRIVATE ${sdl_STATIC_CFLAGS})
-			target_link_libraries(CSE2 PRIVATE ${sdl_STATIC_LDFLAGS})
-		else()
-			message(STATUS "Using system SDL1 (pkg-config, dynamic)")
-			# Do not link libSDLmain.a, otherwise we get weird linker errors about SDL_main not being found.
-			# We don't need SDL's WinMain->main shim anyway, so we can just ignore it.
-			list(REMOVE_ITEM sdl_CFLAGS "-Dmain=SDL_main")
-			list(REMOVE_ITEM sdl_LDFLAGS "-lSDLmain")
-			target_compile_options(CSE2 PRIVATE ${sdl_CFLAGS})
-			target_link_libraries(CSE2 PRIVATE ${sdl_LDFLAGS})
-		endif()
-	elseif(SDL_FOUND)
-		message(STATUS "Using system SDL1 (CMake)")
-		target_include_directories(CSE2 PRIVATE ${SDL_INCLUDE_DIR})
-		target_link_libraries(CSE2 PRIVATE ${SDL_LIBRARY})
-	else()
-		message(FATAL_ERROR "SDL1 not installed!")
-	endif()
-endif()
+find_package(SDL2 REQUIRED)
+
+message(STATUS "Using system SDL2 (CMake, dynamic)")
+target_link_libraries(${PROJECT_NAME} PRIVATE 
+SDL2::SDL2
+SDL2_image
+SDL2
+vita2d
+SceDisplay_stub
+SceCtrl_stub
+SceAudio_stub
+SceSysmodule_stub
+SceGxm_stub
+SceCommonDialog_stub
+SceTouch_stub
+SceHid_stub
+m)
 
 if(FREETYPE_FONTS)
-	if(NOT FORCE_LOCAL_LIBS)
-		find_package(Freetype)
-
-		if (PKG_CONFIG_FOUND)
-			pkg_check_modules(freetype2 QUIET IMPORTED_TARGET freetype2)
-		endif()
-	endif()
-
-	if(TARGET PkgConfig::freetype2)
-		# pkg-config
-		if (PKG_CONFIG_STATIC_LIBS)
-			message(STATUS "Using system FreeType (pkg-config, static)")
-			target_compile_options(CSE2 PRIVATE ${freetype2_STATIC_CFLAGS})
-			target_link_libraries(CSE2 PRIVATE ${freetype2_STATIC_LDFLAGS})
-		else()
-			message(STATUS "Using system FreeType (pkg-config, dynamic)")
-			target_compile_options(CSE2 PRIVATE ${freetype2_CFLAGS})
-			target_link_libraries(CSE2 PRIVATE ${freetype2_LDFLAGS})
-		endif()
-	elseif(FREETYPE_FOUND)
-		message(STATUS "Using system FreeType (CMake)")
-		target_include_directories(CSE2 PRIVATE ${FREETYPE_INCLUDE_DIRS})
-		target_link_libraries(CSE2 PRIVATE ${FREETYPE_LIBRARIES})
-	else()
-		# Compile it ourselves
-		message(STATUS "Using local FreeType")
-		if(FORCE_LOCAL_LIBS)
-			set(CMAKE_DISABLE_FIND_PACKAGE_HarfBuzz ON CACHE INTERNAL "" FORCE)
-			set(CMAKE_DISABLE_FIND_PACKAGE_ZLIB ON CACHE INTERNAL "" FORCE)
-			set(CMAKE_DISABLE_FIND_PACKAGE_PNG ON CACHE INTERNAL "" FORCE)
-			set(CMAKE_DISABLE_FIND_PACKAGE_BZip2 ON CACHE INTERNAL "" FORCE)
-			set(CMAKE_DISABLE_FIND_PACKAGE_BrotliDec ON CACHE INTERNAL "" FORCE)
-		endif()
-		add_subdirectory("external/freetype" EXCLUDE_FROM_ALL)
-		target_link_libraries(CSE2 PRIVATE freetype)
-	endif()
-endif()
-
-if(BACKEND_RENDERER MATCHES "OpenGL3")
-	add_subdirectory("external/glad" EXCLUDE_FROM_ALL)
-	target_link_libraries(CSE2 PRIVATE glad)
-endif()
-
-if(BACKEND_RENDERER MATCHES "OpenGLES2")
-	find_package(OpenGLES2 REQUIRED)
-	target_include_directories(CSE2 PRIVATE ${OPENGLES2_INCLUDE_DIR})
-	target_link_libraries(CSE2 PRIVATE ${OPENGLES2_LIBRARIES})
-endif()
-
-if(BACKEND_RENDERER MATCHES "OpenGL3" OR (BACKEND_PLATFORM MATCHES "GLFW3" AND BACKEND_RENDERER MATCHES "Software"))
-	if (CMAKE_VERSION GREATER_EQUAL 3.11)
-		cmake_policy(SET CMP0072 NEW)
-	endif()
-
-	find_package(OpenGL REQUIRED)
-	target_link_libraries(CSE2 PRIVATE OpenGL::GL)
+	find_package(Freetype REQUIRED)
+
+	message(STATUS "Using system FreeType (CMake)")
+	target_include_directories(CSE2 PRIVATE ${FREETYPE_INCLUDE_DIRS})
+	target_link_libraries(CSE2 PRIVATE ${FREETYPE_LIBRARIES}
+	-lfreetype
+	-lpng
+	-lz
+	-lbz2)
 endif()
 
 
@@ -756,26 +376,28 @@ foreach(FILENAME IN LISTS RESOURCES)
 endforeach()
 
 
-############
-# DoConfig #
-############
+vita_create_self(${PROJECT_NAME}.self ${PROJECT_NAME})
 
-if(DOCONFIG)
-	add_subdirectory("DoConfig")
-
-	# Name debug builds "DoConfig_debug", to distinguish them
-	set_target_properties(DoConfig PROPERTIES DEBUG_OUTPUT_NAME "DoConfig_debug")
-
-	# Send executable to the build_en/build_jp directory
-	set_target_properties(DoConfig PROPERTIES
-		RUNTIME_OUTPUT_DIRECTORY ${BUILD_DIRECTORY}
-		RUNTIME_OUTPUT_DIRECTORY_RELEASE ${BUILD_DIRECTORY}
-		RUNTIME_OUTPUT_DIRECTORY_MINSIZEREL ${BUILD_DIRECTORY}
-		RUNTIME_OUTPUT_DIRECTORY_RELWITHDEBINFO ${BUILD_DIRECTORY}
-		RUNTIME_OUTPUT_DIRECTORY_DEBUG ${BUILD_DIRECTORY}
+if(JAPANESE)
+	vita_create_vpk(${PROJECT_NAME}JP.vpk ${VITA_TITLEID} ${PROJECT_NAME}.self
+	  VERSION ${VITA_VERSION}
+	  NAME ${VITA_APP_NAME}
+	  FILE sce_sys/icon0.png sce_sys/icon0.png
+	  FILE sce_sys/livearea/contents/bg.png sce_sys/livearea/contents/bg.png
+	  FILE sce_sys/livearea/contents/startup_ja.png sce_sys/livearea/contents/startup.png
+	  FILE sce_sys/livearea/contents/template.xml sce_sys/livearea/contents/template.xml
+	  FILE sce_sys/pic0.png sce_sys/pic0.png
+	  FILE game_japanese/data data
 	)
-endif()
-
-if(RISCOS)
-	include(RISCOSApp)
-endif()
+else()
+	vita_create_vpk(${PROJECT_NAME}.vpk ${VITA_TITLEID} ${PROJECT_NAME}.self
+	  VERSION ${VITA_VERSION}
+	  NAME ${VITA_APP_NAME}
+	  FILE sce_sys/icon0.png sce_sys/icon0.png
+	  FILE sce_sys/livearea/contents/bg.png sce_sys/livearea/contents/bg.png
+	  FILE sce_sys/livearea/contents/startup_en.png sce_sys/livearea/contents/startup.png
+	  FILE sce_sys/livearea/contents/template.xml sce_sys/livearea/contents/template.xml
+	  FILE sce_sys/pic0.png sce_sys/pic0.png
+	  FILE game_english/data data
+	)
+endif()
\ No newline at end of file
diff --git a/sce_sys/icon0.png b/sce_sys/icon0.png
new file mode 100644
index 0000000000000000000000000000000000000000..62a4a84cf917aa983f86e3e340bfec98094f8cab
GIT binary patch
literal 9626
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
Ql>h($07*qoM6N<$f{G3cpa1{>

literal 0
HcmV?d00001

diff --git a/sce_sys/livearea/contents/bg.png b/sce_sys/livearea/contents/bg.png
new file mode 100644
index 0000000000000000000000000000000000000000..fb7c543692b7fd37a90579a916e8b5b7763d93bd
GIT binary patch
literal 75692
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

literal 0
HcmV?d00001

diff --git a/sce_sys/livearea/contents/startup.png b/sce_sys/livearea/contents/startup.png
new file mode 100644
index 0000000000000000000000000000000000000000..a9e372818139ec00fc2696e9e9c7f52bc19dc0a1
GIT binary patch
literal 33194
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

literal 0
HcmV?d00001

diff --git a/sce_sys/livearea/contents/startup_en.png b/sce_sys/livearea/contents/startup_en.png
new file mode 100644
index 0000000000000000000000000000000000000000..43803a8ad9685059416529569273f77d50d4e469
GIT binary patch
literal 7850
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

literal 0
HcmV?d00001

diff --git a/sce_sys/livearea/contents/startup_ja.png b/sce_sys/livearea/contents/startup_ja.png
new file mode 100644
index 0000000000000000000000000000000000000000..02db384c4fc5b7e9a167e42e162c1e9fe25672f0
GIT binary patch
literal 6884
zcma)AWl$6j(^pzbIJ%{~y9JI`q&YykyBk43;z;SPJ3_h}LAtxUyYoN}c>RBSKR!D<
zTeJIRXMZ!h3szN;$3iDXfAi)ImZAbs{mq-VH2>@ZG{k=r>1F2bKV>ELS?bN3nm7!&
z3GzSxt(&^M^qb0Y@}oCz5Z|bN(v<xdL_k2u%E}TI6`h-#`|#m|g@pwk9$s{G^xE3m
z+qZ8!IyzQYSLNj7CMPFpX=$CDoMK~Rb8~Z>nwkg*2++{bkdTnj(b4(&`InZK8XFtA
zxw%(XR{s3?<KW<cjEwB->pMO^9uN?)u(0s@`YJ6gje&uIh=}<6_wTBzs+yXb<>h58
zEUc-iDFp=uPEO9?;9yi#)WyZcU%!4~V`G<>mwS48qM)D{85yy#u)Kf&o{5PG2M4FV
zzTVy4eSUr(6B82`7gtzV7z%}&n3w<nfV#T6ckkZe<Kr_jG7=IJ78Vv(R#vjHv2AZ}
zfB*iSgoK2KhUWD2R8UYbA|hgEXD2N!&CAQn+}ymYt7~+0l!}Uqf`WpJi;JF~UPeZS
zl$4a6ot=n?$kEYJLqmg%jO@pcA7Wx+R#sNLyu3j{LB++z2?+^dVPP&VE?_XYqM~Ab
zeSKnLf}ET@Dk>^JKi|^Qvbni=Y;25`mG$GtkDoq$GBh--uC8utYbz)ypr)o45)xuy
zV33lM%E`%5R8$NN4c*$>YHx2J8X7V-HWm>Pp`@hL*VmVjkO&M6<lx{)Pfu@cZIzdo
zH!v{R-QDf$>*M3&D=RDW@bJja&d$utw6?aEm6i4O_Ku8<3<(K2I5^PM)ZEzE7#SJ4
zyu36sGb1J@1_FU8DJcR10&#J1d3kyE_V()P>O4F=dwY8=EiK*M-KnXmrlzK)rKO39
zi4X{cj*ia8#zsp^D=8`I@87>YJw1MYezmo=!^6X0zkb!#)h#M2nx39!W@gsY(`#sG
z7#tiN7#Q&P_ut&y?CtHfv$H!pJKNvi&&bI5{Q0x9vvYWO__uH0Bqb%|<Ksafkei#E
zj*iaN)m2PP%<Sy!&!0b)l$3mYeD3e>A08f*m6abKA7^G})YR0zeEH()>Z+=$dVG9*
zczD>^*$IQeuCK3;j*jl`?vj&}OG-+_#l`#k`)zG)Z*Fe1wY4uUE>u)ho}ZsjPEKxb
zZ(m+s;Bff)`T5h+({}{j=QnSNf)#;Mn%>K2SsozGm4yLRe3UTi<b0G8YNRAmQltVI
zCFxd~f2^tZR#8n&s*AAiU-kKU^BOFh_fu8|$)#`L#J6>;z?aQYuyEZ3ti0}C&+Y;-
z=pVZNcap=T->UYSUGP`a=^E;pLvj<LkZ*YP0_dh4Prx%cMN)djvWTMAZHb!(F%)`f
zS_>sUIa2zbI7)8yzTVL{S8}puLT{*&tZk>Ny6Vg(^<(@I;u_?C%6XMOjJ<u`1#H)1
zlY@${sge}h?EbV^zV$t+cU)dMO>KpW&Se)i8N7DU1J~F%v~z0LW7|R<DXbVbmE+~?
zxYQ$n?0>`sy1G^qQ=6{pcc00)0qPu!6^*W68kwr_>2T>k`thU!pBY=k6IUwMklQ3z
zQGEJ9x((*xtDBBB_bV;YuO;rjdU1IUYt9}gl&c3?{nRUjuY5Nb^!hi63OjVMQ^hck
zjVt`yydyrXU#>@_dC&1>dVzCBKY{+F^@pzdRWt*xMJz_>HmSSvJ{Ft3$q6?IOx12e
z6^jt7P&fOSn~6jK9li2Fac`d28RqD_WI}1d{*vAd=7z@g0umu@ck8Gk<1f3-244{6
z0%bbG`nTj2k<<;*+uz>of62vmnjimYWTrTjuHtPKt>}iqY*EF`GULCYcnRI&V6Rq&
zKzeXJu`}&*CHOYU%Sb;x{e!LAu4gIW_eiQ-qI%q))v8f=2^$z#^I6<wP*AfPR{hm`
zHdJ{ho5*j(pnRVg@MGArhir1cs4B3Oa_U3r58%8srKhG%dk(=5;5VOIiv)a0@|We;
zm2V|nYBCQYo{blr?B~>22NTwqfzxQ5<H;GbumdxmYq~81lZ$$5y{3i+C{Cr*^?Vjw
zmhu6>e5&Gp?~?D|utT8a9wOKUb0R(a;&Sfm$PFz~Ke_ZH8ff?(&LL^8JJqXv1o77m
z*c_YGn!+Y%cB)gZ6n%|w>y3`p|GW||Nx9@VB3oa*ebwT>t4JExVSj;DAYN4^zuwqj
zz;`VXMlseC|BJ<4M?0o?Qb!qB`y0_oy6b{Z&w$YDH@sL>8v@~P_n(Ip?w6<8M_(^~
zh6mbosbBfuBHASc9)SqFl7DS8#~m)zCly0GxEw~)x=$4c;;5WtR~z?TE=1#!x0UN3
zarkdpk!v%fz_aftV1WgeV-!B^oR4@TnZ?nf9oern0=ZbeQxY@k<yGI&+9vZfAIuce
zuD(*u>Go2Jd46gvR&<}pVU6gos(`U8;CBU1;-82X`xm}V9(wuy&O$|L&vu;LfVfnH
z;4@r_RZpX}LL$a2zxSxtm$e{%YN|xInhKpu{gb#m{6T{Dbcia9K>x~hfpJxYAK8aS
zY4<NT$TSPJgEKWno^n}6``Ix`Nx!Vh7zn&c9#Gljtca*?CdO?k8S>dVKFVr749$x3
z6&1@PNN`cj88*n)T{&yKIt|50KwnIhTwDG*s0?Xw)Q2O{|BYqzitbS-QFz)JWk^bW
zq?UK8_mQ>Pd#1{3wyp=1fJZTW1{(6O+$euVD$=$k^m!y#&nJaSRz5{<H1W`h!0~v+
z>_*OvTNm5kG~U)&%pG|-ckVW1y2%`hZ^ZQ-G+WZaMSHF98Xce&Gi;(~q9=BAwdve#
ze&`DdhHO{Dpvc=&X~OKg>hNR2yO>LJuN**y`QL2n7zXR3zy^U(kI$KUGfHMIJ9)8i
zDHTC3aV?Z^>9R9P>y<x#f<qs+be5qN<)b=d@ms9%Is`L&vTRaHyRGf)!eBF*8LA&c
zN>IcEY`+`YNb*{aY?}iQqGkGec%Iq)t%hB`g{|Ypm`${i#?9*yJoBe;G&}E3c?==<
zM9)J#&fnXpfP+)@K<#}wKzB&*Vk~^9`@oT_Cnau>Owp*t@NQKr05GI);1|glFMV{3
zKR&#faC)+Qc#&9c1j{&b<0?G5s=u6uyu~_9tK2wOk{WR)9TSA6e~d5^zl|=cA1RmK
z7$EzLvE^p}khm_Zw-K9+4&{x&=-M&nPZ-P4ps5aUXo`&FWBcniv2wEGnZO>e_yawR
zC^=|+qa+CjQF>6pi@iYE^iI=F3w|2oV#axP>x|t;`bg8R_mX}6B%y)Qk(<Mns-#&P
zq)$RC>J~t#AmA~{!*AdL8*);b<e13{vI;_pE_?`=40QY`N7DX5ua3j=CeqD7TQ1Aa
zZt8dg@B4U<GMqt$FLuAuPsQf<{jz7XyjincI+$1!Hp9X4#XhDcSxXvbT|Tl>-TRos
z)DhGynccOe073s!7F%)(H|@$x_8lVE8&@L8-t3Mj5qK}2lh$g(ZKf<Yo{Net-Nx37
z86aLU1Tqx$=N>hU9a7jnvB=dW(%?SoS*cjHBU4`4sEVyzX3}P5J`yA)L9S*ylFQV5
zf7={uqC}Ta_#>1}MO%HEOsu9GpEW+aVJa&#&Zd5epT)&R&YG~FWNh~@4HU02TBg)F
ziqWpEUVV;OL5ch#D8;t56(3z@GE}w;^)u6CSh~b^zxzJN$*mS^M6`vwN9-wSfGk~)
z!uyop7wo1+qXSl*Pp+J2XD^J|X)g|4Y94o^wr)3k+Gri+xvPUpABo>*oDg_m=HvOA
zQ<l6|bBXl4VO4ulcY8J_jj`NhhxL)8UKCQ3J6ei63kVv;l0Df8rcqk-tH}1r<4Ucl
zUb1ORP3T4unE9cxW?OjPK4JPkimWu)X!qnq;?MPTkT%6B{p$vAXOhNm!FOvTpy81(
z6#`tUhV0$ZA_MmHuYZyw3K-(LfH9^vG)@rKT6_YL<wX^ZSuuO#50vm7DzBj;B@`hh
z8)0X(4$)0JW1L{TCgumhB`V)BzGL5#x$0<+7ZWdfyKi1iPRrGM10r6P-#>A?mOP+)
z`{s+Tdy<m(&36o^){I^pW?&jcaZpQr<qz|72vye~nY}bGs+yf0y*#%dP1~LqA*lqy
zBYw##(zW!C`sdc{-}N;`t&?|_F#m)w62;lrt`GN=uyp99wk+V08AP2fG0x-j`@hp#
za;n5y0k*@O-rGAP@P{rak8M7*7e22wQV<|g;HG{T2eCe}7T+*QFf%D+%o!ONTW?=&
ztE$Zm(gimuESOcEK~55X6~)mI;O~mp_RbKopzU@q-dLccGYAQu<pX6NFUNpN=DTv(
z$yUB(%I_U6xJU-i=fwI4DXN`&;|HsYgCaM-I%k(qZO1nIt*x`5^6t3CcyWtydc)&A
zmKGM21ue^kgdJ`HN9~|(hepo9W(!QWyYd7sHRsN2jfbB!FF9QY*sQt|@0h2KHgsPY
zZJt6<R~BT3%5@%pXNKOeyU-;#Ve^M2Ho}jS>MSltGu?MK8|ym%K=4w(YALQ`3FzMM
zfu6i9w@Ol4t-);K+e<#d2JHwrKmj5KH3~}E<3lc9=TJS{hE8L!3SraOz=qqNpQjoX
z2QG8KWB}_3o=*TZ*-ScC%wpf+1d}%juHt7Y)VHA@b{!EqFQhXIPCG-MC|>}$VzHx4
zx}M*^jx(3I&<*QT47U=Fh>j><(YfXpr>}N{D~_ZzP2zAd?L*&J9H`9;;{+hF#t#$)
zduX%t#AL8ut*6a3YXnAJv5BLxOmSS4<)UnS_(&7nCYJyBhM$0SO4=#>gT75f!%`6$
zp_2S!yed0QI`K4?Ffw|N;Z-ED4JM6ZO-=mU)w?=j(wLX)W|HOf18r;Y?z2&b4q+?r
znQTNe+tVimb0B{4<9ayzt~>*7A9gmMle$PKlQutrG8gKwJGipFJN(GN1J9YRG|%QN
zAw&pY0qQ&AVBNI4LX$1;vAyI<EN$M`>xu5R(DV90M;#&>QNH%YFeZiR@0|U`51|zC
zmQ#Hlq3|PcMlBCV0VwtpB&p9&tp*l-KoG%mxc;JKIpzclomKE}tMl_w+D6lc;30Qn
zM<h}QZ_J!m(s((f9<0!WGIvS-O&BUNYxreOoQ)U<+qm1STrjxSS|$pAZmrbudB*8C
zNcERU7CHT<kR-eQoG<VRO2Ev8c3n%ir9@|r$Bc0BqrCY=Z_t5+p{5aO_OEBf531U%
zauZ~BJXbR9fgO?u$0<KpBbf<3OZvB~KPcQ0wiUS(<`D)?+B;6N#|Pvo5nvK3`yoI`
z{y;?QMUmS=;(Lxpg<h8vnmPeXzLY$ASO2xa$eumK43_>Hx@flL+`h8!doRu*Tv-Mk
z^^63cE0Lt#80<y>%*zHA57bzl5|!a8eSFL5I^HIM!_BK0BDNqfq;_cN1sEYLA#92Z
zWb^_Ufe(kaMe)Iu7?84U@K-Uwv30KJ*ny*SEjTr{ca~%Ix61O$hN)l(ZM;Ep17r5w
zx5`!LM;6|+slo~F88rSa>iDgk02d+QZ-Kw5Wh|!j0jHn4oH(;XsJ5RPtFZO{ySj-s
z@94+O5QU*V&R_u@p+U^R$PMe(tS@Jz^HA>YxX?ZBh`~~u@}pKypg}-aMK0GK4pjBR
zfJlf^N&mu|dM0dG@?fNza@f0O##9b?IBVF%<Hf+Ie{KEKKe~o3%WuePCKy1%Jgn()
zU$lI}&bk?HZs_zbIAwv4Kg73yo2bb0ru7A`CI;5@|D?OqGrf+&&JaxBD#u~G8(gIl
zu1VecKAgs(pl!9RI4<3=q48-JmrSK2N4>;EHjj~ht@#tbho6W&kbBKQXD{6WWARrq
z$pqM)%OxJcMGQfQj1fW$El%*-v#+VU`A#KO&&yX&Ev+mH!SX~if!)KgLRtQ;)+O&Z
zSXSIiYx0f3JVWC&NcjXr$y?(fSYyijQvAAuuZ|=Pl9~K(J)bNIJ$}zCer<AG8;{1k
zlN}uxD4ly0C<9V**T0f(P^UYMiZxwm95HODLe^VP0nNawdTa-|yB4!H1~Z7i4x{7P
zfaTs}ST{bm%T*(--Msfl1I*v<jmM_%EqOgWiY|m4^Y3Hm)pvM-Iw^K<GKX)l=&qp|
zT_M<Ox_bA&`1Dk{>=uM-co$zR=UY8aOA}1w?O-1By6u1&PnC45M+bUzXJL_?iOruS
zBZ4W1AU^*aB-DBW59`aMK^#}CF;{(w->*XF*6Py_TYe{l)%mJ{DJ2(#5;^2$AGc|7
zht_Z<m_xSFyh3eb6(sqh59eJ%1lmz}2C^iY4l<R@Ke2xViig6cI;<@ML81X>S;P6U
z^mZW<ciTaGSxzJZq3%u2VeMsMIdj)kl-i&bD3*RUvmRpEii+}`%&le5uk%-9Nob^e
zm}lWN9M=%w;#VK9u$z{?V<3w&U7+$qRti{EhvJX`M8eDI>=`B0gv$8Udr579b#=Fy
z!&N!&KhK#g{zPUhbIZ*TpGPn(9ml(0`)>bJL;0aGG|MQ;{v9W%s^<me=nyuTW}WtN
zIhQK*>VOazW_hj*`oW1S#=)aN$QEzma2fjs!Nw)Fgq*Fp19lE+ZXynb#L12kTdAU*
z`BY<}yW*KbYg-!Zd}kURC1VBaeByl`)iB}l&U&scWYcj%;BR^jKW^+u)a%*FP?yY>
zrRyZHvjF`#gx)1gCW1Uq9`2^bW*{h4ijw<4DicfQ@(D7<e!WCy27@Y1f<cj#6jBhM
z-N=(MD3XD)`Bj6FL~652){Kib8+nrQSyZ)jm!8j(sVV+>cGY-M6|fSfFvF31KjOCQ
zOOpUTn|?|kwCTA`$=z^E?9O^$Z&fzEc*JbsGCsdRL+rRA>97|Xy<Vz~%6+J{L40@#
z*h<F{)-wi4xPvCu!?p6!5$I@q*oK{MZfFi|v5{K40MEfah+X%CtCH|I-sQt8Kb4?+
zQ1xn1Ba)~*G#75~I9fwJQqTo9*^B539g31HHjvuq6=2uLY!&Vl5QWLa`k=0iGZE@7
zO)btdQdR;N9`OaG5vp2mgS6pEsldj$FC5rbe?27U$6Sd%#4q3e$X+l!=Ax`WkVvR@
zom$m%0RzpEj~e@#M`tNvAnQ0uWRCbs(d_khWq!Umv;EtQUE8se2y?kcsrkg%^6O^H
zie;CO8#@=liKV7EogGlTHu89V5_Ai2_<ciQHoZ$*4iNB{niE{^g|+J|6E1vGrPl!Z
zNx<BE3KAjya~a7z;*_4}%Qw4fccKfidkAOlu{q7q9~u(PPBfWm`ug0>qdxyf<IkGt
z`Yv?D7^r(Ku_%UvF@tcP1Q^C=7tES&Ne*KX$?%xCF?Z&Rma}W_R;GcTlP}p!n&j~B
zj28-{|5RZ7JmQl<8f3bS8<oY^WK%9-E0K|rDrxXpp&HmISfU9Q$7uc%UkLHKk`nD5
zwCg>U(7pY`ah2nZ2BSoy;Jd_rKnH^kTuTm5H%62pV|WymwJ4PS2o^`ds||~Bctkj8
zZo`@Jv`j)%{6RRGLd4V{2r^##??e+>%g5A5%Z6XhT^?qe0`6`RrrX`C>cQAFt5g+0
zq=jqVJ_<2<5uin%EG`)Z9O>4&mC|(gSWIr3lp&K21mS7o6hu-sPcXM5>-uIrXK9G7
zjFCtC7fs2%K|AH7lNr|}piqvM6O4bdLHAyM;cDf1c=u7soX111Kg?Ap7`*7@NFPkk
zg1^vA1EQJz@^uInZxDrk*nl^WjCBkz10)|`r7)GQn6%K3`0NV5yGkB(d3-#^my_G`
zu9z9ns|J=es7O*20+W8tSDWjLxSAQhq+`u+K?ygsAw#94+U<0at26pCTcV^GWhGXp
z6JcU>YiSvdtRNZ*_HF9;p_vc4sCH8WeVG><V2ABj6&k!(G{)({e-m%vJ}f0Mc)1ZD
zfwZK0_AYa40^hUjhe{eU>d=m2eUj)RZPnw2BAxfA+#blgxs|j;&KG*{Je{SAc_-6>
zOJAtL9Ge#BVl|QI2rdN?^Ec+lTqXP#d|F)agTjTYQu}f>a6lEx#v|l#%tYA&q%(+A
z{TgBG`tGC@Y7q`dlOk0VG2)jTmm!*nEcMb@TqK5;AL6LUO%zK(QwJ@nbP4IFMv>~w
zc*D-txR#8~#7be^vr&0TOy!mZfIjS2`y4-kkezTE!VBl~px`N=g|XDl4i|@olND9b
z&=}tpd0|KGeqQ;Vr93r--i&GTY9t5Q%6tGBW1Y0W%wY=kzF66swt7xv4%(VfBr1F9
zTt^Srat2;)n{p?YUE2p><X7AjZq%j>CCNn?uWnR~`sU6^#Nl#)h^M9JPLuZ}d8Qz@
zRd;dr)tRh0ai(BlCb;%n(Ks|~`%~}eqps|PzZax<#t*e=jI0FMXtNR^MdI3Rza%#m
zQWvUo&E-DE-r;+19~o?Ov}$Dp3!Z=WTYP->C*^YmZ_DtfacZcdO5_yM+ACD$h4G?}
zK5Jc~@@(&6gf~3}8ifYXnvL-8CB-Y5Ta$%SuE+jb+UIKQ@)nO1#Q$1%yoyp>o8CmX
zn7I;yHpcZJj`|ddmWvYemBzGG;-(=BQBo3nTQA;kxagLmWHmr%>+hd9gF%=#i)Y#j
zbmL47k{w6l;2v|hHEJDrwkaIRBe84x)*hmfUXJNSnycEq0t>I<B)hUv{hWr+(@I&K
z{GBu2Voq~^!~lHXQC%?T(PG#ov-ksVAVtfU5tlP$OovZBJtRP;JmqifMcer@U;^XO
zvuxnJNKo`@`GmTylwiN$6hgae!W}UU<E^eLzp|Mmz;XfVJ7#UvrUk}XZYQXXf6M$+
zDbGP*Na5P)<~D)0&aYa2xAVjU@{{!I#*<Lg5rlX9Rhh`ku~eyXuNj#e^~IG+@uM<O
zzf?#M|163A-bB5SHMr9cx1ElRc)iIZ^P{mrqV+?cni7ED5BysHve#tPF`P0H*pf%5
z%ei@1MW=AZNElry#nNwD7-75Hh5BCpF;MvhYa4F90C=HY^wy&dCLcIVc<t^)<H^$J
j$@$;^-TyE1HR~18$u+bVbaeXRzp$dL3b0bzIQahnjeu8q

literal 0
HcmV?d00001

diff --git a/sce_sys/livearea/contents/template.xml b/sce_sys/livearea/contents/template.xml
new file mode 100644
index 00000000..06bfdc21
--- /dev/null
+++ b/sce_sys/livearea/contents/template.xml
@@ -0,0 +1,9 @@
+﻿<?xml version="1.0" encoding="UTF-8"?>
+<livearea style="a1" format-ver="01.03">
+  <livearea-background>
+    <image default="on">bg.png</image>
+  </livearea-background>
+  <gate>
+    <startup-image default="on">startup.png</startup-image>
+  </gate>
+</livearea>
\ No newline at end of file
diff --git a/sce_sys/pic0.png b/sce_sys/pic0.png
new file mode 100644
index 0000000000000000000000000000000000000000..27a98d6d3aa9f123cd437b2bb3f6122d26afbd44
GIT binary patch
literal 95470
zcmV)3K+C_0P)<h;3K|Lk000e1NJLTq00Y1P00JNg0{{R3eLL`<00001b5ch_0Itp)
z=>Px#1ZP1_K>z@;j|==^1poj808mU+MFax@000020|f&F1_cEL2?_@T1qcKN3IqoX
z1_%oU2@VVm3keAc4h{|!6b%Lo5eEzs4Gs_p4HF3t6%P;-3J@0z6C4W>84ME}4iy~|
z6BZE>5f&B}8ygc86&M*B9vK-K9UUDYAr~bj8Yw9q4;LU07$OiCArKiN5*sBG948wc
zArl=b6&@-cAS4zbD;FUx7$7ScA}<^!GZ-T<8YMCtCp8-=HXJB69V$5<EIS`9Js~0|
zAt50qCMGT}AtNO!CMhf_D=sQ3DlIK7G&LnWJS!$EGAk`JATB;GFg7nSI5ILaGBi3i
zI6gl>E<r&rLqsu3N;OVSIZseJQ&c@6FF+(SMj<gmBQixKG)E>kOeHo+Cpb+gI!`w_
zKs!A|DLYUqJyI(^R4hMMJwQh+KvyqATrNUdFGO50MP4ySU@}NzGfHGMOJy}oXE#r4
zH&1LgP;59*Y&%tSI#X~vRB}94bv;;jKUsM~L`+v#Kv!5mT3bR!Nm5BoRZLG<PElJ?
zR9#<SMqpq@WoAlgYEEr#QEzZka&uI7cvyUWTvJzIR#{_NU1wWgX+T?hKwEr4U4C9-
zZD3??VrFq=YISRHe1CvmfPr6wgkpz?WQvPsjE-rKkZO{XZI+jCmzZ#yoO7R`cc7tn
zqosPMsC}ucenMY?LtuhLVS`0tg+^qDM`ejfW{XH?j7n*aOKg%$YmrQBlTB`wPH>k`
zaF|eXn^AL|QgxnhbbxSmf^>O?Q+A+KccD~xqgHyQS9_>ee5hD`s#$-nT7a)zgS1<L
zuv~(&UWK(^hqz#exnqpKV2Hb7ioIiuz+{cWWsk&Wkj7_{$Y_(wX_U)qmCkIJ&})~_
zY?;z-o7Hce*KeHIaGlt#u7R(xgS54Vwzr74xrw^Gi@(5*z`>8h#gfLzl*!AN%*~n4
z(VNoLozv8w*4Lod*`eFqq~GAD;^eC5>8<JOuk7xz@A0$r_P6lzwDa}0_4l~<`MLW1
zyZQRM`~AH9{=NVIz|A43PXGV_32;bRa{vGi!vFvd!vV){sAK>D{FzBaK~#8N?EPz-
zWmk3;2%m@yNma^7q$-t4Qbtmh3CN{XNzO!hi+Y}lY}=Vs`!Qvp-S8QI@t*)}b8n38
z?hiD)##{^y#{Z$ae+z!G!FMQM%C5q<c;_7RHs)GupNLFJcD3IgarRnsjydLBYwdG(
zoclhzga3cW(X9*i!IdL7zLjwG={2{W504+a@&Do?JU(;dj~-_?+}OsSxC8jcRW~k)
z-KU;haDaYm-qw#l+%<Rft@vN*TN5`gK8ijrJih71HvYsNz)vq;^E2Y=wLf`#Nv`-q
zH~wE-j6cTf|DvJ)WZg8MeKr3Ny%~SVtL;zLweHxR-E!+s3@&j!eXCrRN4Gwj$8;b0
z0r@R^TmNtq)BUtn;alV3_1Wc~dLDa!aB%JE({esq{4w4L7DHb-aYON~a{D~~kT1$4
zo_Rt4kGv25IIp(dALFYwgqxR|#qra;H6Pyic%H2OaULSe8|RIuG^KBq16c4aG?m0h
zHK*N|KcfFnh3A;sjebmQRru7$bw~Db;N(L-TsV4s@oN7V|HrScqunvRfbp$z)O>{V
z*erEz<A3_z>*u4H*wNWXdjLPztafKl-TIcf+CL<G8MmJMh0EQ+@g)x6j}kA`Lxzt8
ze{9#})$tXFkN@A?jc0v7=%d^@ANh`cj)I46A8+jN1$}&(>*o5C=Un39hdhFI2OsyV
zS0Cj~b9eK@zQWLV^GANWx-4!y@Adt0;6q+R$B&=!&F5#sm3dEntov@<8%LMA)0qAv
zUlup{Dc!Td6Zhml{v&x4_trDKYVZ+Xbsy_3;hFGJ{+oLiZ0>=}@0z2t%iM`P_X3|R
z4~=KP=7tF@3oIvj^0B^Ye00fY7vKIDpJB>@TOY{-){FM_jgR3Wz}dd%1vQ~(zZrZ?
z`1mKX|3>(6-b6nnPUidf=i6J7^>HrqW8Q_|^F#Bp|0u4tKc+)uaR9Go^2ap0Z+(1}
zJLdUrX5afoH`cgtg8eZq&tWrlW1^SX7awMKEpm6ahQ~DD@xwp#<Nx%B{*rqgA7<>2
z27eU)M-qLxfBcJg{1Hqfhv2cu9<PQ!-hH$CJKycr0+*TE#jh$|a)Fn>d49+na(;H>
z@aW0#(D!rS^WA^r$G-c^?gcKffEyqBG4#eDM>qcn4%>@|xa4&>;QGh<qRoICAJGSc
zwwF3bgt<1}hMp78do>^a?eBEUFxI)uHMh|0qR>3AjhS9zpv%l<1Dv}5?V#`ZVK+9g
zp8n&H;_2zC^tC7PAYo&_&A7C11K3x?zJ9)4zkXTexj>6r&*kXpb+<kW*ckIjGxJd#
zz?b+s*b=*g@A&?|{!f1B`+wkjoEY(ZS6iU6FInf}TV50zmCyU~&SJzb;{kM^@x}8W
z6(8ZdzL(s2iI3pZhC1Z4?tv9{&zJUmIQrNJ8wdEv2E4@A!8Y(cKm0@g^zZ)A5C3&{
z7r1begCO0Fqj7^?4|BxF!M>T?8XxsGOqu&i<zt5d8xvpS`d43Y>+;x`l#ja}e)SOb
z=;jr-M%=v2ebjmy`}Wu$5oixQ(-r!Rh+(YcqVO}_5I#=$4FC3bpg*{|xG{X#{Zeba
zY^AO{d*Vi6S?J>GTZ--PGEjyu;~B2G-K8E@O$9e*xw*V+U)^|;xt{8!ALrYEJnZHa
z_CRx<CvPwE|LaFyx#2Qv2QSUXJCl8oU9mg(q3_TM>~>GqkHepBc1typ>zk|z7P-eC
z!HXbOHZ7XPjsD;zC5y>?D6Eet!p0rHlN;%meQ!JP{Hyw?_s28i^W*>W?;QU1eq=MG
zLapXv0HZ#_XZp{BeXreJxKs3owG;(ex4esLUFz&TTI9k>Eg@MOCt>IZ$A)Kv_Ta~X
z<>LPAU;e(o_P2iUZ~nFK`^ukj=6SHO-xh0vvKqxk@*Zf$N4USP;{JuEapT&v&uJgH
zn%Tji9|t4<S<lYXP%lzGAI5nByx*6C4N#t%bLyVGaBz4tKg+qg-h1j?dX1*LfnC*S
z)`lYWb({f-zD4+qxa<TS8}h&MBR};Yf8kfZ_M2b-#y5WFo8SD#H@^NGU;EYn{2%}I
zKl%!y&p5{AAv*=NX@KV)>tmYZ$F}qVJ`NAZx0sJ$8sixXcF+7~*y?Br?42M5t43NL
z<?5@E`Uv~x0zkfZR$JJY)P{w#JI1~Bk-fL5)N>8`Jn(_8{{4UR^Z)JZzklxdL;2GS
z?BD<TfBU(g`oYp(4$rs(lSk4sCOe)lYXwxYa(->8)9Qby!G`2?H?I0ikM+!xI(hmG
zFMrDHVt~zoE}DTpce}(aSCYp0)v|$0jIh8Ws}0lR=1n<7%=M0*3=hj^$t8d!o0;W*
z<tKmsH-6U+R>mKAkI3)*`p^HwU&xG)48DU<l}bO;C{6qk&5w7FVJ`e3hgwb>{i3i@
z(k^1ph*sg~GtXF%<a6eSm|UgSG1HEoz%WMFa8T?sdqn$O(;Ac7K$n==YS7)$#!G+C
zH$}sr`N?1Sy58N+FwPHSJ-UDEKmX{T@~n>xG4tL(*Ls$F^+Md@uj6i%km=}*cvfy-
zZp`7EZ}aLFl@pi$&dpr+LOg2<^!t)7ESRg=tDJ+(OwsnjUPT{Y-#<zNlvkh7D-51{
zaS6VLR4uou%Ux-gn_d6hrR8}2-4FikZ>*2rjz7TBe186Wzy33S%`z{-WgaM%0#>@a
zOXLRT9d-F!;AH(;qgA2m8)Yvy+V~-OgXdbut)SPnc?^;T_QlqC=8Wxx-OcTX<3m>M
z*R)o3B}g<Y#Af&A>cyi~#fz}_EQYP%qPnkTXSb<ZW57~+VtR{uf%VzI^kYju`b*#3
zd-UpaVTL{}{>Cr<$eyvD8+{?qH^Q9tOm*fxPS8qKEv&sMi8hPHl%k6DTk1t(!$t8z
z&H8flFKo>Xz(@Trm<7VASq`t!Ik2p|AO}j^W#)vHN;#PcLLSeFZC2e3OxUBmx%o-4
zNYef%e(m=!ap&tO;rZ|X%0HF@m!IecxB&Lc?%?T7CqG>A%)a$qZfs*5DSb2QmNW>v
zd$Rwfpv~MY9|l4eM>`2%4D}d$LK}G2jGW0cr&1;Z^jxYKip_%;bM1NGU(5O%Ga1p>
z(LKT($kNL(h+Loh@)&1mIPs?oKl-bAQ0_U3hmg7FzxT^OVnsHgleutDumJW=nIMb{
zQ!fX5H}@iJ4@MC+!}Y$RyQkX&QH}1jfB_WolVp+ete~6K=1mWX8%jY&j})GW+1K(N
zloi^<;p`cF2&vohH_(1;MiXSaOx{Jv8bh%@O$2Mi2o5;}j&#-5t~tUvl5Rd$`49fW
z@9jBkSKy=l{QP%+{;%dhZS<3ie$&SxNyks}vot87&8p-A`O98SSk6WH+dHXpwU_PU
zYeH~z!P9mM4!S76xo~5c-=6w&Vjff>H<V{Ve}iP5yl>{~NhB(qR?86QXzN4ym%vzy
zIzfxFYbTo@mQ`U6Ohw14f|&tk`cMDIZ_v}*<&k{B;VsXFe|mX^9OoB`_4tgTm)G15
zFBo_zCkbO?C5gw6w-m)+RKqZ;+($R=e~V>C8i|>4Xr;|yp(JMYl#2>nVgSbSI_cP~
zNb3pBRXcp#?RVc<$Bc9r@K{K=ce~BoIHN-A0Ll4#z~L^HDn>ZnMn8BmJ=E=Ss%3#5
z?xjh*gy+hA#gBZg4&Mt7)IgW1cYgj~|KZ+2kIuI5i!;rQT9*+Qt>r3x4wkeq%^&vE
zHdKBY@i<K2as#y#bAxIH1|5N9CfYi6@OFu9Trx*xCgp_Z7;xBW=Jv{G+pmXg4~R&H
zw{;tc1nt|``1^dzyY@_10qFgc+8<Ty4*t~7{&yUXmppVETF&`5{=<626*pXE0PEC-
zU(Ivj*)m5p`8r{Bjl%Q?^_aYc)zS^Ef;i!imDA@pt@oe%dn}RIp3MN7&n4i}RYq{p
zUpNB@&OQ&@fK)V`yc*0AvP!%Vrpo#_t1~=G=h4X%h1$|x=NCgNvF8Cst!fijDDr>)
zHGb*&*^gq&@b;JgvR7STIS+s$ZYJZa*v{RHN>l4uiqIY&)7-aiaZM;L9Ih1^!ED&*
z>CJQ)yK8c{urY;a!d!#rKv)d6pq9yd=UKtZovJu-ZSk^-hn52;G<qpvVbX!1LW(`b
z{Drjj+Jmk9z5A#GNuvMBug5Vv_LqhyXm|db`i>F?DCn#fYiyH6T$^c88F^+rR}!NY
z7*?U?FaWtCHgAv!W~NXv+YRCG%L!br?u2$N?17e;w2Qh<)%-`z=x<Gcbv@_!mi;5s
zt+K-!>jO!qu{CUms-}V<wBg9f<EprIQV!r!183!Fa3ENz_0zw*|9E}Yqxt-I{_WPN
zTWD%`a+U5sXT@hpgSHYjQu$g+wCm(jSJ1^%^D-$Ljow{y(0!On<cNE~vnu^o=3x)O
z+g+dUPGc(QTh3PHfR%&^)S{I1fOfZ@u<Rn3be@hwxoc;LEW(vG1tl~FV#Y*GX@T9r
z3;(4bp_e^eCtVTefB2t<A@!7Lm{!cKFfc8xtz>fzff6jGL|(d7{~-ggm5bR8rMf!=
z9gTHoq4dRj=bypfht+5|{UikInLHB~Gv(`!?ZVzWqQEEhW8qP^>B-rh*=I6(y<s-f
z967E~Ke*#doZhJy+*->x3J4WPpHN~_CrY}lF@$n=@aKNnUwyXYZ*lluf+F9`{K8S2
z!==u7c<A4c=T_m9y=YAnJYgzy5on;JC!cbw=T1{vOb*n7PaID{C#2&TO#E^VESd>S
zQjXXiT$8l1)ILnRsAnwmFOm$*G=%KtRbAsUa`d>~fmC`ZbE|)TfRRd#aEWU7gNO1O
znHGlii?taju+U^RvH)_YG$nQifBC=G!6%k}&1gJ2_aek&()lm{xjvb2h8Z$&?gEX+
zTvH2UPo`iyy4YcRuz!>}KKR{DkLWZHae5YWrEMSkKgy4B?Vml>ZT7R_GJEKP>K+c2
z-MFHev0bgrg=B7eI8{pPb~yYr*w&Ile@S#{_fBvJE(0Y^gF1KNP%fCJ%ZY0DLLomo
z_{x7f|HD7H#1XqKvF{`m)Wh~G!x1c4?^Rbx=MPtnC~*lc#Gsi|)>9bJ(#mPMQ=y5l
zL{Fb*5+5{-kbk{U%Lt>f$eD7T;BL}5wsN<zcVWn$6oidfA2mfvhcizM5zyLH+^nW&
zCv2LEn;J>w_PBum!Z@PZP&Fs}_klvlI)zXO87w+#3~P2Db_ZYiT08o-57QYJY0uAp
z?a%PkCmda0MjIJx0=cKy5LzimZcjDFUYQ05L0$`uC#Oua2H)MbaK&`(RvtrT$McEZ
zQoPKXYR~YzIh}LYbuKyc0f#4-(rpyqy;S?4mr?Ih6OaRV*3oeEDN)yra}mE)(D-oP
zPK%F;l*OT>gWMhb*<a<u@L3Mu1w6gF^Ix)22<*g(Ta4p~+M{3HC6Vee?HS6nfzeX(
zu-oUd12YR8Rd|$)*Q_B~$lasVTY2(Kjg2)ggFW+Dmvgpv0$9}qsvhWYS#$D~AC5(Y
zCPJn{+z@Gh3qSBb$~6)yjuyATBB<1jtK$^buyikSh_B`-RznuYQ5|KaR{WA4ZG7Ca
zomi3ugyn(wtULcNZD4hH&Ewbm#gi~|X~XF1!oaU&&P8bNo)^&t*GwB>7|vWGVGbhr
zK1hX98N++16ac$Z4MqDY0zl&ZeVU<U!@k&vwxh<q_AG@2C5Lr9=i2}iy%=Y=oA!Yt
z#EYbkE`Uc1Y-?>&IE`^_rc`jO3bb58@TK4Vd>(Qa9HaXY=hvY&oS)TUY&3??K_eFJ
z8u!K(chQU~zQ~iBKk)r-@5N%UaZe9EyJpWd7FC_B#$aaD6mN=kthmB1@6axdsbCR(
z;q$r+>}S3i+@`F?0F(!n{4fCP=OSS=VyF<{N`XmAA~#(k9f(zxE$r9!=z7xs4hLBs
zy>%3qbs<tJhw)VC{P%u}W^(cBQ~^~?IC_xF{ELcm-0UB(Uyj=yeR=QgdQSFU8uzV>
zpkdzKJ<cF4M6<Fn<Y=b5Q&JLPT;UfSCix0AF_mWu&39gAL1OzynWFOu`wIw2Flfu=
zfL1o&+2-s8G}^E@>}3I4#!jEi1F<acbCqdWmDT&^RKJ3|gMa?t&vD<WkAC-J|KaQh
z?pk#Ijeo?$3wB=~USb(mukJv_tVjCNKw@Uo0etYn<9M6bL1WCrO}mzfK^~#G%0$5*
znpxF|Dd^*IfqmGLOe>sGL%a}Q-R7*Jg1VIv!;&Z{M&r_nB#w$rwZcq_VuGU=kZSo{
zWkx3UUrnL>5t%_@aMNR-5bU496dwG;gTL~d_5lt&cin%CZeh$?_~*a=XMIFp&(UN4
zMA2d~ZlX)Ndx@EGi~+tT`2gOASI9!GqB`Rc1`ISLt(6W6!bHQ<Wt+kLz7fX!Sv!x=
zm~n=HDh_d0zGZkdOhIFa&mv-4&}I~r_4B+3bos%z>x+A8kIPd(v;)rkn_ihlI+)sU
zuG>U?Qnqm8WTKp5aAvh8gyxK2v3uTj&<#i6ctCET%itAt{tGtrIDzKVw3YW*vhI&1
zE(^;0AHVl|zx$v3_;>%s@BXeMFTW~kTtryW)#7Q9P6ifiqsoC*&DaSrRdb7k9s4M0
zjyrNcG8Q@owDp2lsjl(=UB&fw#xEb^>SO&(RSt;sVR+@*;Bd4lVOZK{7-*U4CX2*D
zlQ_Dnk%(@o_Q7+Osr-^`uB4VkpmdHCJq}<#vxf&ioyS-h{WyFcOcj(k|2KX7<(i0A
z*|Y<Y%L@<;?xpZ!|MZ{!@BjDz`M>{ffA?>1e+;%wkO!%NS{2E61f7Zq6&mJBLW;no
zP$HZxD8xKVN@>}^%p_VR#b>^HW3J_QMJ86xSKSLAKlX!v7;kU|Gvk=1Q^*`OO1H>p
z0;GkfPSy!bgrj&^i(FEih|N>!N*v#9rb8tS66IzxVOYOA_y^x;N894yeb(c7OMm|L
zzsA$a85!D=1PBir%3fhjZ`2U{Sbqq;QI%)5B~gfse^_jmjw_sjoN5x{?M=S?SjNx#
zHIBv;R%>FONj`c#Qn_OA!PQ*m(P1ayN)`}|j$l;<DrcE3WF;(1I5}hwqa;GsvfQ~=
z&vk`~3JAI)Ft`UtXD_+6g)u|$Ys=&9Sr1x5J{+HF*ylMIZFS?`^2vhDiNoM!usy?n
zol8Zn4tjnLJd7<cCd+S(vq3jR?XG1{ZSrB7&nkmfn^^~CvIyq9M8dLSd&_vK5O`U1
zrRnO8T+l}`FYiINgn8o0Y!n8D8I8yYN#>D&pj8QV8j3JdHGefl(QDsqui$Ee#E<QV
zAL_@^+c*yRMgIFd0S6s#Yx82bxaF9G_WTd?y`*VRbt3nL_W}1ux-drSvq%&P^T+@8
zFpZwQF$(3Z6~%IVrB!ayWK#oy8s^H_6Yp<EKuA4X3$!z_HXv<xU_ZA<uyWPH${851
zNNczGgT^HmXbB^NZeaoWWzK5{<8&2Oghhq6u_5B|6e?qB#qqqOe<Ru**(3ei7zT^B
z1g-a1ers{GJwJN>RPFpX>Xm50FdG3e!@dX?ij>V21{{Az+YQ<Ge~%m6g=#oyZr)nT
zPVCFuf(q9!78!?jmN96-O+8^O!+UCf=Cff(=R$8Kb3p!4C!R$*joiRVzJg7In5pSv
zwZS_)<Q)&UWheGjZLv%?60J6|Iln*~b|^y-VylGm7Au8WQSLtt2N~StrX%n|<i{wb
zt8BBB`WYEhW>8COiwq2lt)sz>T8*O-Q<SiyANWAALA=b3;cpFJOL6seJBe+jmW5Pv
ziEI!)mj_KX)@GDp@j&+i&h~C}0dc<E&wx6H=R6p72ONCHo9T<7rFhV~<q{{flvbU9
zQWZ-}47RgN(yj6vMtYL9C1iA}IZUr(izf_{-9Px9I^Gl)e30Wp)G@op`8VbtKg%`Q
zKBy_0#jOCw!0mx*TJCQBLt={Y6WJYmVl9MKw5v05121@Q6(Sy{`CiGHMcqzOrlJR@
z>=F(?ai^eQI98wqfMC2I#+mdLA4282W!+SuDtKsGnPE;8xOR~uR2vr<b?`Nwnm$VE
zI}I$Tsz(F0(v$?#ed~UKkGQb4kL{zz`OoRVHCLK7A<sF1S<Wl-ZXYJeKv1QvYU>!!
zIHKT2Y58XD);}YszakYiA*{y1c1oo$9u`lG(fBRV-U=)D;KLjmwwT5*r~s2XwJsV{
zL{U_%q>+iB=Awdy-oX*rmypIpI<^y+Ai0`U^B>|A(9dw7UQXInJ>~oxe^UpZR=~vW
z;1=!<l*8$F6)|fFt6@w8Q|mp+C`B)1-k9&2fnKOC{Qcf1eu{D$6{h<|bD?A@OF@}r
z4vu4R2fuml^reJitg~EjiXu8@wZM9y1QAnAn9R<gGU~8;&YVH>NO{z0M7qf;$bqR%
zaj<NJB4eh-SIofvFAfK!x|cgfFGkkMhvi_-f6m7iOz$Wve17N-56*738FSD;=75ak
zz6eHo<&3YfH%s+^dpzfL?lR3`9@-oAm>zyLK13f$V9A0ol2A+wYEc7IY)?aNU>ajJ
z$kxPD>IS8@D$Nm?AFTGIfJuIh-5>XWr-@MtFqAc1X1UX1otTx1#!jgOi>18s)cObC
zq@(qtIdIoi!1}L%f8(#(1PX^wZeTiXQ3Lu4_9-1*cZmc*b!~SF5xL766WNLKh+h_J
zENmwxH3z4weo`0WYqiUp%bZtCT5gO5B0kqJEcs57XJ!k}1%@dsm*jand3HY+5IEU#
zOE{)jt!Q|&#^5F~j>a6$FT+&4DaS(U6ZdmCqV(W0q)A-IW?&yAi9Tz6{xdcOdZg3e
zxCX?KFwNEAMCT`!!RQRaSV#w1fUnnlyKa#l&`{)f-_^_9AUUI&24$R`f*@jai;~;|
z^!XqK*HC+ydjrKS&7Ro6<~pLv--Wi`_FUEM>cLIV4UTFF^Mlo1wyf<&jim^WOKqW-
z-++&5vSTSfz7alx=978XpY{{Ah8=xhgTZ4>`j!43Z~)|U9jSt?yx`CO;QTlK45rW#
z6Pw|yX;;Nky&#K1dbw(Wn)X#AkPumwT_WNJSY$gMv1tMdgj#$Y5#1u!!wVdq;Alcl
zQ*ERq4Wo<j%U(_3Q?ZAueO^6v6P^V1u&_&3P&8><Yeke6Pl;imLaKRMRnWHYx^-~;
zw4dQNTS!~^a*n2V&np%dm7-pu_D%dU)4#Q&3a6s<0}S2blsK11f5yASzrZ{;fCc1y
zdEyFRp3!5_k#y}9Mdl1?8&!IG+N7p<n^t18@)BAD8P!a1b_zCvoViLeyt<ASf!>pr
zDH^l5wkLdZ1|o@)kFI4&g+yA;HTyi_zzWQl_Hn$j2_`GMeoVU%En$^SbJuWedcM%Z
z;j?I~bOy&)TI05>c;xf=M@i>_X6*f1|AmM4QUEd{=f5mtk5i<5WFSJ#)Wg_bV4^1s
z8Qa`IDuT(#G}po~>&ltSI;QFhINBJ?1G-MT)jT{5Tp(pEG+e2BW3h_$oY4h@yZN+d
zG}-Rp=q8Q{8fC0=b9&F(HJRfXRGlZ?wGFNY*d|2LDQv`0*U05N_ymhi6`e}HJZ=8r
zfA=FQj;%WOmPg^`u}XJNI{Gljw5pt{Lw)Al9%XBYiiGKLE9er%)y2=<ZGe&oM=<zX
z+R@BrzE+)O3IGv1bK0o`diF|PoM|hAa@|D7MM$F1P*P?rUc*_=nJZNpX1yL-<`Yxh
zMr@DTi;<^hY$KmIwA;`2;BGX5S3u_hF3MrI|DzpKi=*v=&tt8Q&&1xK;r!p}@I1Tb
z@f;26#A4@Y!Rb}Ba~t^z8Rr;3Jsz6qb8pvfZ*TF!&cYUn6JGBhZwB;J5(xixMg_ZU
zN&+>_vtf}V2-bS{Dw&c>LFC{F++UU;Ebgo}Dy{PgC`79MmV5@*b!OJHH4vL(7S=at
z6022n;#_1CAwB%{;aE#|-!XWJ<8v=G|NPf{3Kv5st6Qw!CvRP><lx|jKPf6k64WWe
zP3Ns(?Nz|Vlrso8Waxy-8*}nh&!SQo^TTg_H8e?A><+G8H^&J>b1sRNGcL4)#<LDB
znT%eli@awE=M%5ySh})@dc8B4lT?e*K*i75rRw_FMu5}Ce=5zgR!TwAww#;(X`aAF
zmhl$+2k{8{QU~scP3<~htjGMV;5J8^7|?=@Q3&ua(@&_3Oj~%iyOWzSg_4-Q{+Xrl
zZR9;Q1y|znq{)t->i;6xMjX+@`MMohko>?nnEEAKeJX6s2y|Y(g|etzvw^f`O1pRP
zoEl{Y7L;RAQo#vn&xWCkvtrSMrA=&OLwmtm2l3kFt8j_4__Rr1k$O}Jrun;rpFVG|
zHmeyAo!1B97JV_0SOc8rxpjQDG(~}sNzek&u}yu#h>2EYh@ztq^J%2dFtM2N3*YUp
zsTeudT*5`t-F(^xIXctxv83RzKOC#H4iH|2zLF6J>8Dgj<9X2<hz%$utQHf9-S^p8
z3;@Y#36gVMY4^1&Rrd&861BMZnpYR!z8&RRPKnr-sDN6164?!}!u4Y271zFFL*}o{
z$D=bBJO$p1Dms@>?)(>Q3b&r--HT5w=SLIe-Qa;14RlgHVo;(hxatIwhPj{soC0Ys
zw<5u{<bxN6bL#@6!_OPFT4ND1w|T-P^)+=3#0E%cc&2L3P=Sf2o-t*%j4_%a3q&|&
z&6wCE9P>FJ(2p{KQQF34fQ3oH(x&f_l14;YCLIfkVPS8-@>_N;Xg!|1_d}PCywyQ?
z0k+>nF8=&C{uE|$17D=ASz~RsKtjbc$P`e-)%;YKVW_ScvuVU>@Suh=;*M1WCLL-l
zbP0=TTb6;c$Ryd;|78WcF&pOwrC??nG#s15e@byPbJzh2mo6e)1*T|%TJFizv%4zX
z$jky+k>op+R+08`K3OCw5u3vM-2uL54r_!BHuDY%kFgjzQBGMu^83pp%{Y%d^Ih?x
zqEbO;|KI<f&m!kT^MzSWi}gT&xjYL@X}a3H;P$;i*Ygr<dMdM#Jz|n60Wysd)AdUL
zkGYg$(5?b%tz_AhV22+wHhaXHUGHKdDQ#I{nO}6vsVmfJ?O-lS2T!3KD>?mPbcP0E
z17IBDH=SW-V1coG`e7vDn2R~{@5ZBQzy^H*=#U=^s4roo|Fum*Fiv<v+b7;H4?Cld
zhV%Mq1|qG_fV?}?ZV;L^kTm`{6A>*YH^3`VK}V!&#G^)`<uoNCKZ$_b5iiWl0$fQG
zVsjkF6CZHWu-+g{B#b?ws2+5WNgcv{sx5%2%{XZRQIV0EZltf+NMnuKu^D(=0RoG;
zP)4@{12>cnsLGV>tNaS~_k0*@OnVNT>vsz0b+;94%->Z_YHm_ppmhed!l-?BznfT8
zOO6YI>-D!&p%YU*?>sWX*$fV<Iq3?W+8I{3B*pN<zEIaB+VTdZK`?Hpvmg{qRvuR^
z#cC{K*I`Em!&>AmDl90Ukw#)O3|6@lT4>J#gW$astjE3<KZjIpV)+Z9f=eB|o1zN*
z0lyPGPQK6C{SbLyIYV}H;S{5Vh>8IE7&JA6HUUR30i-kL?*XLCD%#7|Vu^_ziS)(L
zZy{BDN?kA$RI-v47yEAup}a_E2=y?gxo9i0tx2fYnVN?4hmY;#^yVAsw*}KizV@+E
zGZiGGt=ZU&DHgfgaLMlA`@W9j$sW_j-L06)KL3{)kWI;Dx)t4T{SPt=nR!mRFKo|B
z5L(28(%k_Y`z6(FFB*>8FM=$KGNMArN}g7$FqE4n;Bj<g5M&kLQhq0|)SxnqzO2*x
zfGcKUW5SVM&Di#U!){9_vo&W=b`MQ^YELR6*(`NQhO867?&yiV4_nj{Q6e{>CTvs&
z0Qd4*GfayNLM6Sx+WkkrE5{NYY8$v%(ZP?rH*!IL^9M1D4cHW8-r9%l%M4e+b^>HJ
zB`Ka>?ov=;-nZgc@+Hv|mgzxq(1zs*Y$r6DY8b;bqj%c7RFYzVGaTU33XOG{DI$k+
z*=F>4&1iWg4q6$rt<5@cTXKO08x-NL&tq7eS!k`8nz1qZe7ZNQ6`@(h6dKRiZ2T)6
zOxv)dZ+<5HtVgt?rHS)<KWa0{`S@~j<(ta`F|ZIbmy7S}Fs%4-J+w?kA!j1!RTkqZ
zgj6c?TD+=_Y0Y=XI*RaQ3=wSUT{wgi%6rT@pZNfk0v`!1n(P?4(h}sQ8OElPu|Wq`
z;o{VS7gX+}MIKQ-dR2ew$tZ1O>neJ51ms9$xvJ$cHUo}pb`Il%f8UQp^<t~Tt!ple
z3$i3EkJ0O8XhqDr&7Pgu0m>a+-MdP}h9>vlD$zKTRLUAX<ldm)?>1;m2QE!m+Q$|U
zyJm^N-gN<~aBK<}5ir`s76_ZU1$uaUu1;t-PL~-!FG{4dw55ii0pu#eT$C_Qy^O|h
zwJ8ysLVp)NMT+J$4>l7%oOC^D_7%=u`?480p}QSwIHD4M_-Qxa|6UAFPoz%)G0*>l
z%prHVz-D!PO~^L;#ZqoPU9nD~ChVaJ0Rt4zqL6AebPHMZP2gT~3Uf?e0kLl7XRkEK
zIcdWPj}-|en`(wddOXtx1eY=1E0M&BYy+0SX$r_Dtuw(_QYyuuQgeZZA>8LM6<>_j
zbKLG_087v|HaW24gF{peSmYZZ9My{C!dREk=&s&HlAd0}YJJC=eJ;p7@PD$&7;@(E
zp%;MH7`FCD*Onj3Pf88wvx)377)-+M#cwXZD6!tRz&J>k?hd}Q-q#W1=&_zzDG{N?
zM2u8Udk8`;NOM(9;HGzD<s~Y6_o?`?P@vap*b`bHrUAL<(A35%7D~31LA8W*)G)^>
zl95>`GA!*eoEotu;P`CBrWi+nmRIiBE8>Omga%W<pM-w4L-Sb=WY)WVj!#4HZXV0p
zd`7lNeD#JG(I=f~%=(20Bdehu?0`i(clEBYXim;5M+C5|NZ3y6m;D^92`so59uH@g
zRd}^M(4cO8%IvY-O0DV!7kw)$q<%#@^EBvAa)Mo*A2(?jeU9pa=3K{2Z7Bm1T1AOV
zbJW?id~y{WW;;Wru}xLOT~vt>dQO8)v+>xiye+Xf@HIJ>#zS$>p}8ltz{TqGUy-Br
ziO;ajuN<|mFHW8!(9mKR)sMZwsAj^NEq*G#N?36E!T5P%i>X?6Rw#v28BK{G><l&}
zQ=vT~1v`s5E(#jfWp_{UnZpQ<1-tJmCaWr{nK^;^%ubS`WvXQ!h4%tFtsV*5V>C5l
zOR&=d?n!3Q6#mQ^uYSx_j0_hUzs=upi38C42^tumJ2$a8=l|8FQj_Av)I^`^<JSy<
z*Cqr4G9CO{U^Q8!@3q8S2UwNwsKKPIe<7fFEXv~&VzX-i!!#Gl0b^6JxMP}wNqa&o
z!x@51;uNzpBq{U&hK1Lj%qP&vI1AM_f12?yp+IDF6+x*b;Er}<sq(V`RU#qN0`+3!
zm|9Wpus&~^2qk)HPW<&`fuyDFW{pn~g}K-A03Q2<5)*kTw5)ZB^Z!<JX)`Pv*3l6M
z6I0@-f?v%D+dCO5O{Od!mupfdC&?B@VO%@J`+&hrrFnGiVb`@hg8q{<3^cjhwWb)d
zrU6F6{Nr16OU^p0=`ppOOpqDW3}h{;5q3BCy>DTWjd;)*RwK4KDhS&@84`1yrE0Zh
z4r|tUsRJSU)4$;dmfl+~4>;|g`DJLX)T$2NAD(~BCt`E-iH`FP-)CLnChQB(5R7UR
zW~3`%dw~iMdlx{ID>Tuvv??;NQ~*`EB@mP=74=KB;7YlwvX3KjAuDsW+nUtjjCMT*
zfmyFuvcpwiE`CgV)Uykj6KbnTZosGrx?lzZb`Q*&u+g`9DoDvm&9Nk9c5wg?$CVOt
z)PjAk4^&=w$ZJj6>>gMUyQ|L{m>I_op=lR5z*kAD61Ac)1CX3fD8LN#n7^FFdS<PX
zON<+fDw;YFr1r3@aSTJxuggstBbJlb1WGb9hzzt;b|`fZR7J|=M2w7(_LQ-27{sQM
zJmhjb1q7jrjENLb1qyRpeL(%pyZR|NHs_M~Q;X-o&SbZJFwVJ-7T8n?@&IltA{(YO
zZ7CU_l9+H5Z^4kHRE=~Teb1RUY6PH|-_jT^G#NT5LKa8crUgf7-TH(ZEMJg@S>-A|
z-(Gp@F#|XnC&w2AEq$d@kyX9S%9^R#$Xr!n?iPOiNXzvCHbA`R$Qc=|NsLhW7=*8Z
z*d|l}t!vnxdV_jjp5L)tOwTAjfcG6~f(ybk_8z(3{ntIaZXICO)-LT<4G5}%OdCra
z(~R{P84a0Z;f1@-OL#_883!s00wZ<8KW3tRl~Ie%l7^&;4j2Nv)!Ecs(?{S;HT!fO
z{M2?KaEe5X9L3{Zwj>2g_&cVE4T5mJU(LF`+%cpFl2#)&u4aN>-jmR|?R|Iyj@nNq
z^%RCO`Zf~5Jm%8A<P+gly)`se-zW6x>C%Up3S|uQGm|J1`w?z6bB+>ykFz((Gt@J9
z00m|B0-na?kjkh~#K-e)Do=u&^NHC!Glhxn8Ip5j+7lz+iVXXN&}0K5W<A<TPO$<F
zHzuTCfyI==l75`J`u4=5<c9Rsh|OR{n!vr%l<hr-M$b!*lVjM=s>E?N9B=6k{9ZiM
zD_-ZnG)+0+vtF;y`*rZ}aehb<R5gXcHOwUMx-q&e0mOr~w&TfJEv;z<9wbefVQCM$
z8bulcl<i@_ym8PCWUA_^&SqUhk1VhjOzcDq(~dQUuJ=7VJ*z>LG%^%6M0tZt)aR`u
z7!$iEUDY3R)Th!Um<=ey`=xU^I_;RN*R6ny586u|)@xC)=l>bA(5cIebW$|8HfM#c
zFi1}rRl9?uI)DX;W`hz|C-Qo_!s7vVwKFY<&9vRY=jca&W*vx8z$&xbB%0&MS#a)!
zs7kA};P%BDjMSnPHmf3nMecUQ!9}?wV~Y=1q}Ht1RwpcBS^Nl}d5*d97C6@Lmy3Y8
zmCf9K49Z-N@P|L2hf==YJRWkR@7SOf`cJ|7O?c@1XMHXc`lL4&Td%I>q6)E-tC^~J
z7V~CL$^nR{XjC6B&M>T4OtP>Zl37VNH%RSaqi|V@1;vOGj&gf}0V<<RnBgynQEUbT
z5wjxP2KHqWkmOpiTManQlx>8zW$gzPH=kmZ$fGPXck~jJFe;W#KO0O^c8F$$+P0n?
zkD%NU-dX>dIM|*Oo5}mC)+^iR|A$RdFideo>JpL=IUF48z|V%GZYSl&Fw)_{we|`A
z)l@u}izfy(4dP}?rEqoYApzA#?jD$=53-#`k(+1fz=(-N-;3-HZux6r!F%6jg3Sf3
zfqX6^wwJI@+Gz}>`Z!c(P^Vi7i+X|`{|NonI9WGqU+|BdF-IqjNZO5@dA2%*Q3b$G
z;wpZA_22XZtvs<PG#-wl-?2Xmgybh}GHpkz{es+ywS^>d!Gabg2c|Y@Sc6ftf#Ku|
zl_I!$c4hoPR>ZxIA_ZOfY@m8x$E%&-R^d*JpnYtG?j=BHtb2-Zx+H#W3IH=MnWroV
zJn4JH(a9WaSUC1Kf-fw7ykJ?_kOgNTWN}xuI+>Yl7!gT@!0gBMDM&%teS*U4kuF{F
zs_m+02l9Vn`I^%uj=*QbR>9x@UoaJgE~$3GjVEOrMqi1ZW1!sv6Y**Yqc5<RpExk>
z<&iLPuf^VClo=2;<xo)1!EBcIw7S@;GuTXxY5~JuidGpUdQMWC{l(65bkzh-Qz`p5
z^z{VGUse|~s(U{((o=4b0+`j5iZqT0RUy$_(T8TLO+6*LNlXGoDzK6O%SR9abAIrf
zau~(oH6CX0=f~JvN8^l(l;^+wKVcROpEA$2twIA4w7z?aOaL`Bq!Y`eW3(g!byQX)
zDHHG-6|)GkmLW_}7DTjEuw2(Z3m&%i#8+m(gVr@Qj5$HTWXl&wENy|?z06c}BqqTU
zIn;}28^&o}4kU*;q?@~YVVYpNoDg;^GJgvexz1SE90e?M?Qvd(3^9K4B@pX>_|2_@
ztn-&YXfKwQ;QZGyk9nDnaH4O!R>&p>L{TKH-ed)FKqgvkM^^}n7_3Pd<u*!udwgy}
z{S8eaip_IWCAJD7Io;hA`=R?8!yvPJt-jQ(Xo7hr1Ntns_0VPMHb!Bj_21cC(N!#l
zJ!B8AA;=r{8dYLF?^afOv!B!p27)d7;E;af0f81RY|uU>?{<sdHgi1pgX_zGdOCjH
zY{p{pye~bhozT)PcC=E^Wdox@nM|b`jR(@JBCxv35R#G_;NSY9wm0cRLqJ(k(U`G@
zf)%R@K!~nB^_N{*d{uVj&Yp~`gMzq4l~v&pTH!LfrU^&-7oXY_W19)hXKe<m9D>6P
z%stYVr6jCg2%;1xgw5Q+HGQE%nH(Hp*OXL0jgwx}3)mKfj_Il-_*psF#^Y`9;VzHK
z%aKbJaQ@Ra37uV=Rbs_DCtZscolqNoHZWwkv@ZeDmARGd{8sqz;8wlN1Ccb8vy~T+
zc)Nx#%2~(2u2R#-AUz7N4IUVts<pJ;wJ}U^Wro#nj$_E*-B>)RNI8kYnZGJqU~<bg
zRP~5yKkK&Yn8j`O+L5_Nj30`_e-VclA7=iEj^W7LJ`mT~qxaAs{9~U6V|>NeG0t3}
zwr{m#6(K@jO&2AUjtsT}#IUrda2k!n^b9IhIc`}j^A|O>hix%w)pH@~4N!7wfbB|C
zqear)_|R|{i-%GtPv<Z43#Qp^A*%L-@I1Ov%|CZ)qW1IaY%jAR$bcCw$w6EXQ&A68
z++y>vrWkdJK0x4a>Z@4Wc&3Av#oLJ$Isf`!mKjXz1JY&Q>`LGm&<X4SP}Klt`TprS
z0cX8)>AcSebV09?=)QQPK+vfwOFT&RlY_yTuvIsa)H9r0t`o7IWZqb)`&Z{`AxI$%
z^Gw`JjLN{MGL#nI`~Y?bSHBt`&!eny*8ooVtk+{G9TDxj$~|;uGc$p7E36~6Q-7Tf
zsXd2lg!V`_o;Ghozsk^lc^+sJ9%tWg42bUA(;$b25PmN)swS`wsjw)m&(a}eNyJiz
zas)liVl5@$rgm=j)aCe;Z_ZN1wL_AbnW2WWt18ZAo`7w}Dt(QmvX>>vsNP+JbU6(p
zxt*ZpRw3ft?44p{(vYGg6PQ<Ak4|ecA0MXdhb4a$vLaoxfrV(5XPkbJ^4k0cXQC$D
zg6>FXRt3AC-ZeXInEGjy>>{wP?5*rY?P0$Uu1Hng>vc~tGr*L})z>+}R<tZ+M~NYQ
zU5(&*O&880xu_`!0*%!)0k<QF)f95q`ZX`l)}Qz*#1@`Kv2!Y>ed#LByTjup8!?yN
zrxsN3C*x>BdjT#M;Z9g(OKBVG{P%vu=g_gagyE`5r&iBq;kw+*t2DM$iQ^@*7r04`
zAW~?662M9qhU%7+F`0`qCs9ljDw<fG*bFV~gBzD^O^5@6G&)9_7qm**UuKRLLzUM>
zjJ0;$ucNP+t4yjv0vG4RUDXrJB^wv!By*y8sh>_)kGZ9EYZQq8mwyY#)BNanc?3H4
z#P+3iod4#Z_Gu`_sSN~qZb~=gm}_lb38hghHbqEMQBt<W%3=l9GG@N6geAsUjKyPC
z3G1qjE!se3cU}<06c98HjxpMfdY)j9svS}1$7J?<AwmYi7?kFsRMl&4B+zgbZ&h2G
zVi;>emQaHe73y;VkB4lOD_U$N2-I{Pzi5XX9e8{UUjBI8Kopn@o&UVgfMBcU>9w;H
z3`?`KVr^m!s_&e2A&Bc?MCalf2^M|r&J_17LTIITjdrnReRoY_t$`VBb-RgAgm`LI
zXnEK1u#lN@8mov&239qb6DDj8hQNCcCCu5b+QbH>jP@X91EVjfG8s&&<fR%$0EYKN
zn&W8PG>v7t_Fg#>Qb!472FCjC|4TiV?2sxb@yy3=CWvuy^7-%mC{HOS+!wRE{?y;|
zTkW02B8{BtDj^nl&&uR962d6ihwQRxI*wBLkcD1A0Agg_->Oeg<?cp)q>EC_lDHYG
zA5fhJhC6VAVvvZM<7q)$wN+W6)Pi1eMrLG|><I~E8cTjJa_)hx#l&6!(isPYZzLy-
zGDEVhwjk%ASm!GJ7xXc-J%XN&IwHc{cVuo<S(Op%*N0!$UgGF_pLz4t38Kpcx%??5
zQO=ZYm}>|V_K=-!@xaQBx)HP9+UxPM9z+}&TUh2!nCZrBWCeP76kpYQbdW<N+&Cvz
z?*iuLt`!V|F;Tme3|hFWpqtVW8K}W~22ZNsY^&qWP<zfVL0ITRXk?0Dq$gk-XbSIt
zP7bO)2i+XnhM(WVzVN%1==}N5VDwl@U($q`7G@%q7<OW5BEguFxuWM)nt;+S!djIq
z1_^IncD{e}sf|kYlUtm|$6`H;#_s_GxCpGi3)7OqaaqR9aCiQK7ZAh{XyQKn<cDi=
z4sI2gh6{I~DUVCc<rJDb<il6BerQ`BK}Oj7?K;Dm?whj&O8qatYX=ls$NJ#gdn_ZE
zuZ5L#O!BYupYQ#3eoPGW?~Aat2RARUG43R%$tyvJlOZ;jm0_c=iTd0GVI;xuY>RPO
z!6LCKC|AuPJAmwph1JwUI+->$&46Gm7Ycih5I|Eb&Gje-7imYSg0<&;Rty9DYMdr`
zR%kL3Dcejgw>x}#<KX7g@VqyK*V%)|^^C|P=-ghdLt$sOE0{~<cnm%tdX@8EYLoLR
zk}+VKya-jhrFT>sgsTkmMM!}*nmIkKPv?5>_u{((a0->8ocF!@3R#ac_hlPNDgg;s
zIZNS63Cj5?Y=pJE<XLHml|^_%)=|56PFocyPBPu;I(Su9ef36~09NC@Q28fE2gmxw
z3-@~$#dW)OW-s+z+w*yo1$+Yk+K(v(j<UQTRjiKQJx4S`+wqG0b4-D-p7q2ML0_U%
zdN=>}4g654V*+Pz{;>&EgX%kki8$$Q@WbBZ7eaTI5rU1Yttm<e%O^2p-*`gP)z~4v
zhZHLBO*4>%BB)rvgDuHq3vt2p(@^^n6}3ld8db?CS|vT|7ehJMCQTTn(XO-!uNPo9
z?I_T->TQ+Yji+rA^z6#a*%tovujjY+?W=%`<4>rK$Udx7z}jyzU|wxLi#0~PPhHIP
z%((IN3i<$v6<S#-r=_z8EFl}@Z7LF*!V^T{DGM!8VOISNR*8$DNl3Kp!)y6HCnI+8
zMFOh$f_)QD8505d{kEYon3+Xjj2cC{W@wv9O{z|8rRiRvB@&81d3r>1GHhiD#sOB$
zvQ|-QnHN^YR>hKZS<hgz*-NmX%Kjg6OxeAz99w?(yFT`S4H{U-7VN*AChLCDYUK_Y
z)ruy-mpPSbN_IGiw5$G28LA<u6t#K`aLRNMudL)Mm4YzC*Pat+cyyXY&xEB->JYcb
zV+!F-bL-eb>KJwhyX&8KyJH&ELCFGA@o)sEt?S7PgdnEuoitUItwa1vQjM~a9Uwo=
zFjx!Q%SQEx*Ju;CL}AHJB)>?=!Ll`uH~QDZ6#guJVI_~UOCN;Kf}UPKOW5~M&a_Xt
zyk>P#M~kJS#+Vg;i!~9P#ylr%soRy-H<e`jJk+RCy{M)nGge*9!W~3lM|AAnD9sR1
zkR;F?!YGZYZs~!IAkkqq<+vLR#!8E?<1;*Y9&Hz=?#tb^98WOt){UYfdc-{Yq>exb
z3xQ3V^5W!_=k3|A!9sETUFI~jrI@wB{0kk}=An?e#B|WtY;%?i%&~oHRCR%MH9kXQ
z6oHv_X#kkgkierP3S>c#nXgW4GiVas5j(TSRM*WF8#9Mj@LD;vXH~LUV>}SN(Ggtr
zVGjVE)yX2Wr=~|*!dQWm{g-?N!IpZccI#F!RA6Hw2{65oQlLpa40TET>E&-EWj`K=
zqd(veHsVE}|C&$v>Mb>D(zy~C$s4V13KZ(ZHo&L|G{Hix*q{><zueCCLM0Y!J%M@1
ziP<AjV+c352?;*2Vu$^z=DgC*lx8R{aHa)j6$8<ds5MNW2S-dZF;iNJ1RWJu1(d`o
z=>(&$>t`>vM3*S`4o&d*QbuHy3r_u?_&q(kE;ukRiQ#U1RWwg0dy=od-PCjJ>Qr*3
z%XPH9u_K9@MdT_88g;&PR5IIvB&-ACMIbQ|f|jL@6QYHM#uM2dicw~uxjm-2b9l(V
z7@kmhZpGXaea>5HOid*eEj%EYAuEM*H4U~2wW>`&57!~$UWpOO6jPI2SAbbnP&9t8
z((p@moY9@6_YIA_Sh0pY3jZ%{Hfry#<9P*WU7yE$SBCZ4W{6Q?Lt1ssEP@TeX0*x1
zoT?ikVhTp?Qz)qTLX%N7no~W}Iz=!d=$exch5#kOtcg_ZQRr}{1twJzYK&1IEXS<D
z4O2CRk|BhEvtVC~^ZU)9ieXwGMZBL18)e$E0F$xU1U;QmWlTfG65vWGQ0?yE@BQ|C
z=oNE`!!ocX1#iLg-}*iq8Z#Kzle1Q1vDl1@Nwx(V!LU_Yvo4w})rbs38YU&(0FUH#
z#Y)&gXkWn=S|DdAM$a@{ds45%Xe{-BsXeE6gEFvYJ*yfA+Xbyrkxl)D5}3W1O^@{}
zQ2g*l9X&?V3O7#0CJ5g8QmNH*x{@$SF))}(8=yd%G+%;+|2>Ya@c?{=BUe$sdNe}#
zs`XQS+V1G=k`IFbZa|U0r!01lYm>%4%yDI`cH1dyA@?lt)T~fNm*}OajsmVF50Sx7
zPmLD(q@M!Xr!bZYIN$0V9DMti(FxRVODYUGGmvM&wj-2^9Q0X$BW{iJZ<W>%3FMx$
z?8ul9ky2pLapbXp#+9237eleN6aXEuVc4O9!%UL?svcnb57>xabXZSuBIE(|FHU2R
zKxjR0vUmL+7!W2%?`aq{=M)3+_0M=qtk@H4D>GfH-7twdy950MMy4R{-h8i+pV(oU
zt41wgqzXM;16Qa05Bv=?b0P(&LTpC&3WKXyP!ni|f^|l+VQ3P~SLt+#7gWLEhar?6
zs6wk{j#ES3bU%-mv@=h6#F9}1OjQ^_`mRwg>jZ@S``?JK8Q?&pgN~2Ku$kMBQF;FL
z|Jer2X~6bLdY8Q*O)-cTsMnbdsHm?w(|8w!WL2{(%rZ{f$f)?LMjNbf@;E*dS_L<7
z^{jqmWhpBXRy7lh&1J*^TmT&l${On>0R8D*NWi6DjLKCjw!qa-nb%b;VKsqednW17
zn8l&RPcRjH9mZ9pX%tGtR*>wQx14K{aJsxeyqXuUg0VaJ*IRG@02SM#y5O+Z@cHlh
zhoF5Y@dVp`+nRaOJAV$$awY_2B^FfQQ7nKx5i=bK4i&}GzB*u(B;gob6*^_pREPzx
zYss662wIgvAg&z1MGoO12S&}NtH+>Vs3wR7B;cVrYu~1{LRBuT%BDKKWPrzVV-Sk_
zg8qyQ(L)B+kpEKGYCbeI2Nmhl%}NO{(u_4)iGYZ}lX%Rt6I2GwzTk+w5Sd@b&+-Iq
z4%19(aoGyQpj3f+omti@j>Kc$fT@h=gUi%35V@eDz!fAsdJ?BAR#bd<?1N47sPx{4
zx4=47EG)YRo}?RPlMZ988)fM78zk_wNkeetpJ#WM5&I(dNz+gfYeUvOz#I(}Z8C*(
zMRXkbFT0Q;hk&8YGTF&xOi=-nw22GvUz{0=!2MIh_X@)sj>0Z_M(DQ)8GRn^Sw|sW
zgwmlS31P)%1q4H3ta~ou>_w%dVC)k(b_d5dY5tWa<nHKJJR}Z@x%rDmhCw5!G70hG
z-ns`Yu|?2@>U;m0;Q#!;r1|mB7|SXJ1{Ti<v>6k0`}l15P$Fdsj`Q|Eg3HiSi|^y`
zvVfo%7S@)8TUbbn+UZyGL0pwB#+gzUHH<`nqHY#5PCY}d-<|j;#wszeJNUj!{#N1k
zK^**M{MY|NjO<-r3Dqdl=$zW{vw`6lcfqtv8a&Dcnp5^LPMT)4QQ&|t`s7J`TE#%6
z9I1`;Lw_dNYC9r*F0+BDNQ~n6)OUQxcYN`Oe)x;u@#Sw{jn_vq#m3kO9^>7t9Ag;l
z;P6Bo_|+(8!(k&@+oD|v&#2HEN+uT1rUlX~mQBIU={E>spqe2v#%ehoC*dC+o_#7+
zA>k}Xi$o=g8)wAs;2(XX9eM5~XU5jSxeuBn+xgf3o{hybC^*|!GfK&yKZ#Y}zbQ0o
zjO$p*`M|4Jp<~w-#g)WPLEwd_^60o&v5>)OitxwY!8sY?S|!MEpiilV$#L`h`-@m$
zwZQJ+q@C+r0K+}&ObDc^Fj6m!UmFlm1;?Tgb74-DwXyc@2}o~9f<#F=C!IX9z|XBl
z#Cz?sf}%NrR8e&IIKM_^SY`q(!qXhFJNW0nbLqo#Q)q!z`23qcB4gAHVq(@SpHrnd
zGY7kg+|lmv;5dH)N70wMZ{Z7g-Bnf_zdSQzJ2+hZFfV0Ts~E?~5(L)>o$66C0O1Xd
z(iRHAPM-spn)A+Z&(kN#@$NKa1V(sxol5F85*YV{z~VjNUQ0EyQ#=A%OH5Hymot@b
zI)d@`6HHWEn>3=D!t@J7U@a&%Yb_|pPyO!tzy!N}Xa@FvS?T<D{y9$(L(fxAMvV$z
zlgFX(f|7oG4!k?Kszr-!2^xNqKT>B4H?I;Ls~^PoJ(ZCuiFf4`Ojv~DZu|XyMsC{u
z6jwcbEYDF5T?=&2Vd>gN7|g8w>pvh3(`xhJ6-6JRN-=BZ%_RS*p9qB_j%51y4RaQ#
zF~ekN$yA5|aS~(+yb#yRIFZ8jvk+F1VJZlCR6=;?ut`|pM#Pf^sz{*}|7PO|Uf_~K
z$fP;{oqy?L2ryubYQ45Ok2JzOzNL3)u%$6h+t?<w^*N4l>Y?M4_6Z5jwxpw{{m1DC
z<dCazGngRH%pfYzEo{3dH>M@*&g20`YQwNTX+SekMjZ-K#g?!;_@w;52&#pEX(rx}
zaNQIx0+z{OW@Io(5}meX4M7egS4^tm6Wc}!qTUuNJ{Ltyn_k2{?~qpCUL>&@60h{K
zF1v((yL|*(VEee`NK>iPj^9MhPk<Q=t5LM62QB@^tI$KLI#$8xoxK{tlp-wU@e9&5
zDu*&5j3i25w)JS8GC3!u4XeCF`*)*=Brlm5eMP2*0TG;`>Jo#d+_0jLu~RWfr732_
zIs$fDlM_Qw-BlIhIB|_O)>0l`DxK&PNq}|+UFlA)8f8)CTc*JM!?QTmo3>RTZK0Vx
zIQUoJ^n-8vNG(jqDTDp<-~I_JZ-dor#fMYP9)!qr+Fq2g!j(uGlP^~+RU~g*I23na
z@iTpP<|N1awW8>Wa~X#xYFxLu4iM=QcGHA-kpj$^7#S2v<8l5LFC&MK)K(Wx6%|Ot
z{YC@Cum(*|L%noZfhJ)R<J4BGE6iJQfo-ov+(Fk<5(Dk?e+eHE*d4t1m|xc!aab=1
zR+*pZ-%Ns2&2*SLl3vEof9oH4^^P|AO~-6*(XZ}-efboDSxus@Xy=PaL`G$%rAEsr
z4Z%nXC6SyMH|pk3QbK1vJ2t{%34x{zXY5z7mmO0vNa5}dZl1{CYRfiG!X<*O=?#2$
z*GZ^X@S$U@%rTj|L&83|)Qi9yClNkXH4|+$)gRreSwyH+HS(Ij=C7wO3t8#~X6A#k
z_zWm11pff%$hsshB|ZPz57um9@Q5*~Xc8o%c}i0r@rA)1(ZWk@n}$0Os+}2WlpL1w
zX*iNw<r^dnCTQ=atNLUP*&Pzp_^7dLu!~SqV=NJ)ZwfjtE|`(lqmi-B;?}Ill^@oL
zqKH*AM^MGknpM3386+EOl+rEjicBb_i3qj0m)jj&|7v`IWjV_rzo;j+$a(~GTW!IW
zPr1SJ-N9FWMGi|pGU)(q$Let4Y65>3LSg3lAD*B8!k>$w`?SXSBzl0ou%++!!0hCI
zs9`UxcSDJKU`$q|0tV}cqJe=ncg_oD><yC#Vm0sef(0Q#AI_+*Is$U$J<-Y$MqdDG
z&{M&P%wrrq%`@c&Oq|~pP#|w8l2J2C-0cmlC0;tGnd62W{m@ju)6dprGB7I2^nO@P
z^aU_Uv+=Y4U5~!uAYBj!qV3Gm4d>td>1pt`8!V<REHr(ofrz6=YZjw2J(d#ILNyE$
zaihDpDicN$hQVb5R*$Qf%p6x|n5H9SO%52N?Hp5p&Cuce=@$^|Q4OAPv+f~{ah`V>
zZ085OaO;XiDBOI!*OEa}t;y~P;G^*wjcYQ0k_9MyIaDP_6dY@iKh9~;!fP74cbd`^
z`b)AJl<g<&hrbut;t`;ro9E}h@uNAZaa5-r7VVmPKI2xTNWb|iv|^08KhSdpFf*;t
z@iXE^DLKb%W?~r}X)2D3?QB7b(k#P(YZ4J?0(a1zeD%1J!f-+InOzX-@t0SD5s;u6
zhQ5jqU8<GQfU67~*qTxBMrUwP3Bb(sfD~9=(u>)>WVkuIX%-yrrQR++;S-U0kVGz5
zu@We>CX5|_m+Sj}@ek@_8Jh=fMEI+SO?>`)|M@Fkv4LlX(R~VKPVb%wB5V<DC(W9O
z;d0nzF2jN(NpmpTK30cv3adf_vy*`_#~sZvuMOUz@t)D-5!%rUnE}KycXx1fBh{@-
z^l3Eli9QVO`stb_7bco<Y3@sG$S$b|GE<Dh$Mw@IV_sGCHWL-DrX>H`wzZR90kJl>
z^0CQW=GGJQBAY^h`6HX)L8l2Al$QK|^_%DYz%{RP?IZvb<nH$;Q47<VhwHQ4oHK{Q
zl76@ccF#Ne>FXLYwS5*<!YvAi$r(^-Q;7~&#Z{N_Fs!e(^MRRdaSS31$QDVLXDbL%
ziq+suvp2E~pLzOHOE-Df2qr>t^9kr>4D32$7-Qtep6Kvp6n}Ik2QXL<d3PzG3?&?$
z`76U&UyX3kyQAGW7c+MDduKqERx5>$@bmv2Iy6WWD<q1F8pQmce(oE?A-qB;2Bo^^
zzx}g+!OLx-W{yeul5!sIhYGwj7H4L{=lK(EUWR~_i7ui_9v<0URAywzjgl(PKA%Fs
zqOJkU`WAJA<9iUYF7KXwPS;>F(pzB8qKh3ug7+Z0@j+kohQ2BoU2yP16d<ijw2RHd
zHdBgM=O8ak?YpR94z*E6!6XN9{J1?@u?h|dD6Iu8QhTA*XIp^8;P@Hj#TYc={{3I3
z6Gr<HIvl7IGJgKMzxcPj=&%|ir5Q$?F$;px>?t}D?2mIO^vI;MPxCvnA`I3JV{@Ej
zredwy<wqJT7+OkVA?t{w44i$nZZnGA;S(IvS$!(uZ~?+*FO?QLx)tAE?jkQD9sTZY
zgDPCL2c>{jjiD8=yQ`3RC@Ja{Y!g<}L?_kj@`{V4`=bc{_@tsDz?eVAmwGg{+rzS6
zga7zfaR_f<aZLMpDbLS;_m|seH~MwkU=!0e{^1w{7~$FArQwV~St?Gi=!T?gUMr<W
zkL>2DVTdm(%@`zbiE}fVUO!QDBn+~ZX6LV$93J?ih=YTx<DDs?KUM=srKY<+Rs^qo
z^=6pS53@Oz;SuV*dP+xD!2L#xHhr$bqOnfFGa``-c-A6URiG`FNoKSf4llB(rIhY_
z3pK$)o$#1+tP*=Q`hwG}fBeh8D-Wa>M{!UTO6vS~e(^`LLUn-KIvmqEfliKysPuLZ
zyiZO7ZOw{xt`nVI2Z?vXiovO7+>=CF8moGS#SKcb9}v#z7Tu9M%wR{4B2)xnOCB)B
z!q2*4p!a_Yi>m4^YZ;m0avf>5m5_ko5>l=Txxr$gC@Ia#rYI0u3AJSd#k|7(k<RBM
z6|rGhU(GZxX9Z<lfPeV&za@vHADY%BMqeP(-~3O1U-JARZcJd@8-S9K<!o*|je7#8
zGE&NlQ_wLC1HnAB()Bi`S8-X@%-K=DFgl1%lP55z6{D7UvueO7xcb$_uY{^d$M#1N
zgi5!$Nt@JYK%sUeT?A43nlH#%l=VcyLKJ?Z%^@mg4r;DTXmu`!IYpU1O7m<MPwZxw
zk$odqY;*D@35%p^D*csz^J~9zzCMQOlN)M?>YKmvul1#?ee;Szx<)-cg_L<68beN`
zNFUFEgPINW$tu{%?+{!B+9R3J4fCYEGXH;d@QNu1U9qreyp$1yNm)e?Z`r5bXT2iW
znnllc<j8FbP3VzetVf$7QY$2bRDv8@n=}aG4vb?M+~6KM7kKB$@e<~BE|Wl4BbbI|
zX|NgXYL{g6;CeirDGC_enJ~ZDvSK>XvlaNk|L|+ykfYO19$m*U{}_WtfBRSe{ofRI
z*6x$&Ucgu$(im;~M8Hc^akKV71zuzxK`}4YV<Dj-piMswDslE0v@w-QHJWWuX009T
z5SC=ayfQ+hQ<*ed>8LV~w^6?fQ)Kj1MTsKE^}^rC1dR1T78BAqZ`FzVjP5If9grpc
z^VcS$Y5}+#MI02Jg>CK`7Q+H#!eXh5qQ$`aYd`g$zxItk(8ILd3Hu%I`5*lD*M9zA
z=~>%n48ut^D?Jan4X+U?S|ihmY$%^1tF;@cqGfbZ#|%=Nc{M*>uAoufc1Fc+mPRe}
zrb(1YAP)SItfuA9vT998ayMJf#jvbQQlo0BXQ2=@Asm`P`l;$5siEu0OC=BC9jIG!
z0QYk6vIGqG>~jSQuBLX#qYt?6k}XxiA{2KsXK049hj^T~EEVd^61WiEU;XF*;g^2>
zx4!xNIAj4ifPe2BzxB0W{OO<I-z*!8FJ4~;lr^p*!zXokDhdf!MpG(45L;%Gnp2}I
z)M_Fdx}=7bvDR#6+_OB-u6j+W4v8l;abQ7e`cm83nng!aVTjO8=_mo?)LhFNp*fLf
z{ZOS#*087#0w?sD=Z0%&J}FOWN72(FYI@uoR@GEb{5+RwF!R+e73noBn`d#MgPTwD
znHr-82(&B!ny>t=ANd#m_Gf<fKmFX#{oMceXaB>${TDy-H~)g=Mun`T1;(=QyWW7&
zidy9sAqKw>ycSmDOBrQTno$edkr5b8SI)fK5|rk8beW-E3ojrM1ZPDuJv7b7!Ympk
zbM5_T3z)O}fEiW;4#ktZa5qN3&_$fenJNR~nmuP%@)T1d!eNJBX$JRQvZX5cU?oV)
z4ePW$$}?Jeh$fn5$wLK9#1;mPx-<-9t7K5p^PRF-=4e~AV<g;fv^Z0q&kp<|Xk<wg
zX|#0(>wSs<^*W<Sri>Fie;rjGc3%G%TtSpLc`U?`00`$}#8A?QutxX3;WA`%eJtH{
z1d9y`CE1IfyIL3k0Y}Xin#l`B+o+zjrq3mEB<q$%hAeSY&mAMFFrx71+GoNHbAFo@
zoSImut>?CS80jRGX{8<P)j&*llkb7oP=QpE?!-@OS-=S3mSsAb-e}M~M@%72L0UD@
zhm*$BdgC_haEAWC$2@i@uAOB;!yvWjpc!B(>pE2KTApZ+q*LXt$gmo4l4(A%%@&wj
zb6n0=-JnVYc<A%rt`6~vNGYR%SuX<&YNmDbLB!1Ac-%#{Q>)os{pzhs8B#4{_jvD_
z84aA-s|<q*EI#oVE3F<^p2~(Py_rMY;6(Cf96gQqd_6Eugr3sXS4r@nbZdkKqDWVa
z`Z+(DGOi6@qM7E46Ym8mI#(}Pj9Wz{SCNQCk4Pmn%%74Zp_o~9hZ6@;&>~7CX@&)A
zIvt{cjN@dN36(aH;b6PYXCG|jb9v4HuLP3<xXw|C%Upy?ODhelQ;Mth8&XtWVr{Ve
z<p;WH3lSy8UPZ8j7{Ikf;_imH)G3&hLeM?%Mj@lM%~L(|L^kpsPbY$a4w;!i^_E3|
zh?K%CEhQFCDGVkBr5tAJ@XQIuc_aiR>^V(MvBR@r=`n|v-m;JMABovD;U<qMe=#2x
zq)-WvmAXWfSi%Av4qJQOR@H@*P#nNbQKiZvTa9o=o8f*)$d%#TtA%MhJS=w2fF(Pw
za1hlnGlI`}31MaFtpXA8ILUf`Lg>mMxq%3nlYmgQ!z#5{PVTKZ1{E+oxlP{`l@cej
zOD5DUYY9_SDFwWuvWQdK2}j-lq3pwH9`gc2!kS$}qoJ^V(zC>|!$%!J<{BJS#6s43
z0g5seo3|bTzW;Bu5jeDksy0J-uQyKIv7k{4{8jxmo+`c?sQd1XqDD+XKv)^_#J|{R
z-U!Q_@<mx(k8T!mjLyb$U@B7rkmaUj#<EZ&!zq%(YnG5SjB29KIR|@qrauDa7<Nnr
zMr=nqOqXTV*hqDHj1DsbZVZq58Ab%1VKv}XqwsTKg`fN|ZtzNaz$xlt8z9v8{I5U$
zWB=@*{rHdnz$n<~2|!@H-F3Bj1I$pxBHX)z5QiuImB~p1fUS^O+$zM{9b7wWzttMi
zQa#@IQHg|6xziVlTxJGIq-Jbc<>Uo%O_VXlNT{DPP=sJtPv3Z7H+5+Z2!%7$U7(bJ
zy8|morVRh>tDAoIhE<kh2$)Nxnq9MZ6)caQ6NWXDo2Q_w(q)BBjHN2UGQlC9?+hdl
zRiR-v3Zo*xmAnu4<u88m`rr8B&wSB;ucnFuhmUW8Sth%4^0ZF<3Up6F6O<=Ro6{|9
z6ofIy76nU&_aX#n`9+=y6f-eQpv)_If@<MBgM@<a0W%dh6N$8YV4k1ah-uSGgbL&h
zIYum+x^jCPo%P`a#HZnTCZk9BQKUJe{+d0=E>f)_gY4~ync+rHgK-u?6*sPLMI9EU
zHsvuu#WJKwqOpN5w>yY{O7%3<iO8kJIJi8bAr+W8J_jb1-a3}huouETW)zK{EkVlt
zXC5usBsyv%DytS1f?{yK2BVV<RrH2M?kLfqG11<-W@fx8cJkGumS3=p3{I0tXoUVd
zm&F*EO~FD3iYGZH!zZ%+3Yuc$9l!vBV-7L1@hm`6WztN7Tu>ua5;5<;j7KW!M7{+!
zR-=>)IcT;s6;La^qSe0P?*=H_M&3PMeDSJ-Z;f14!0z||kTg+y2?|ysRqYd#%|=ca
zhJnn$f@(m#Kd?^7A;$mV#!`Nl>vUUVO6TE=@o!B9v9lB70wtOYIQOZ?c5G;~Ikw*e
zb3DTaq|d5e#@nO<AcF0^wzBQ;D`*iagFki>a0Xq@MLjU7PotTNa>LRxT?CJ*4ZC#f
zox2yM8uV3lg0Yi8ZTK|}zq+<zaaPrSXse;})(=s|cl|{-xE|XHkf<<*!zZ3cQd%~O
zl1V5wvW?lDw9ieB$)j({!rrn^67)rP&ru{SsyG&3Fq&edwi&*5CV@FUhMF^u&!&4r
zi%o1)(LmG_sLR?)Cbs*ByX&!QgCnhhm*Ga&sFzI4hvuc|8Hpu5)e@}A&B?{Im^!gF
zfGBohwG?xRvRNt7bO9!Ztfq&f@BGayzfo6E*Q-b;7mwR~0>e1HhIyAsAWfG8A~Lqe
zkekiX=hPB}$V+<{5Vuvi+Mfap>g9A6FcsG}!`)t$N=9HBHX#vy4s7QbPWVIF%`!=t
zp>0{fS-fj$vkE@rBSf|tBS2G4^ttp_qnwPZG1FWtrHWQg;C|9$ykm%ZWo0e0$_}o_
zNY4SabvtfPCIf@-Zm_h@!-E^~0*gc`u)8*%5cdK=RZ>n$dklw9Vwmo0H%Kfze;6`k
zjv;G}7Tl|JObJ0`V5l;<4L6?VJANjsoi9G|1B}$REMQhoOb`{opz0<i2L0+l0fK52
zW`wJ~$E9kD4vuf;AjF0`nb{D~4U&*7O9jgkgRQwm)y$$Q$;%{CVaibtD_r!Z5Exrh
z4=AyF+)u3ln~8Lm<2hOadxJ<WIjMqBy?|qsLZpqWJ)W}BucAZw>reN;CIpmeTKFRg
zjJ3uh<`Wy}iS8viB#ikd_{HtOqI##;6Wi{Ai&QH->p9jYssRwCgT<ms7KD>zi#pm6
zgx$gQC;o5&Z7-rtGDD5x74CJCVG)X#*^)ZlLL+oOT|nN>K8VHKx|p$O$6c)3)%o6t
zP$fe@U_m7ilQA!o=2KgiQ_=!xO$syRX&9)QY_aSR?RNSQ*F234$(}{yob=b^L*Mhd
zCt!kXnBm9NW+0-nOjTymTU6=P!GtF?v7T#;wiF9Q{Su9UVhC_C4mBB^WN2zlHMxqS
zIA6S*-w6j;<SjYESeNC#Ct`;P%3PI=sK>+|tCz<6CyUb(fiSklb7FV&0(wR2ETkyQ
zu)CR`?etd$U4M9sf8Y#IH^<``*&63i=m$x4T^?TN7!etJ#YWaZ-*`f==1{B-;B}p3
zZRTB+t0{9_r&*Rp$!jxgrUH#y2@Dcx?*j{HmJSF^#jX9`hr)gB+{`{LTA24GY4BL-
zQ&$PFa-!<ttzK5n%OFk-6I<Kf5jBoq124;A)8h(`Nf~HEE1L3J-FFT}7X_7SpZ-x|
z)R`abtut1TUIQ_w5)hn>*ixgI1I|coim7RCSvEY00=}y<+$6y+@-+5>f4-IlUXKvW
zsz?I~M(sv@b((Y@eSoRaR-#y~O1P+Irnadev70685Jq2|i~y-;?EnadL|~N(PNr+I
zQgo|4!L%a<B;c^y(-$vN-U=He=jvmB(h}kNgickL7!L(3${Ce~ykA;kxP3f-cnL&j
zS1^UPgVyItY!?i2ceR_|?;G41CP3SEkvWt;SDJPyCy6;{7{__gxUlI%G!`*`WM?8U
z1#0vNP4fwS<_Fv`KnFpoNH6C292lINl<oss#N#P5s2h~@3lT*XRuc}bCt2cvsst<D
z*)WXx9fMd9%v4YMu0F=A4xJla$C?$$>^5T-*$4}rD>I3@?UyfHq0xMKq^hY^UcxD>
zO>vel(j18RywJHFu*|B3)=YrREo@09{+d0YGQLHJNi9}u2wep#)2&&us6&LBRb<d=
zz=_ZOT{qhRoM{loGPLzvM$agzf?}Z1fK)3~ii%KQIRpBbhAytGv~t{z&UAGLVncxy
zryz<X3!z}ej=N$I@$6b;Lr?IJ7y=~1aZSD#QYKk7rild>BZCrm5dsERU`+9ApW%!T
zF~ybW5=EH&`=E+UcLQCLmqgPqlAVg3vkzmK{G;n%{;|(}?vw5XI6(#=SIm44?0xQ#
zly$vBE!}9sK`GE{EC`@QTf~vv-k@9Q=ad5xnI>SMId@Q9)=+)UGP{B#Yv7y|HFBRj
znP{87IUU#Xj1nbME4@W7rq~w)l~4<HL4%d%(!O48%i=+JJWq9Gq|*v##z6jdutI}e
zyrWXX^1fc})8w!V>7>yIX=24hj11iG`nx~=|M{^W`yLLdZT^rz>=+S%O1`9oT$!R2
zgDQwxAN-LNgwqPBV}UkYSgnAu7Aa-g(hc(UkOK0@PyneJtioljGMO9V`(4M(Hin(y
zJwJyjv<<DOD2*$?3!(?gCCQ97gOZuGofcRq`fSTVk7gdT8bkQw{uzDFF*_8gG-F7t
zG`A@3X3J>K=YGr$17cc+=F-jfD)eZ>-x841hY>GrMiM<T=>*Evx=c|zSceBEk71a$
zqNI!x9CU}<4&@dJ6F^67qYoD|Nk;&iiH06fukyJCns{>NU7!}rLJ_^7RS|^W`9*@i
zP1AMi#m22!sA8r<UGb`RhDwuRnn8he;gJw0q7RMrEu)7FZfh5GRAgB>5^VwVIz`Z8
zuK3*F3EMFwk!z;5uqu+)Y$$lIX@Gonn|2}u(1Xl~7`cWHmassrlj%%SK-G7!J)=j>
z(^j@&PHxW3UeNAI@D#msSyrUdRAFO4qgNvhP|0U*K))`P>=+(=a(UQxl~|xxtcFV{
zC=%ex^WvITompZCq4j4s@;eFy*R-1ENkfGff`oa*xk=r6ij;D2^c~u|&N`gh%`~M<
ze|#S}$4DMVSDDupXoEtZvvp(83&coK0Krr^R8?G$!fRz#C0J0^xD5=61}7t?z1dQ$
z#hL@83B%{%WX_880(hPBacVe4ml%x8NEjv6Td#XX7II1+)i!i1eE_jaHe^C&nzgUe
zMle{4>ToQ^@JYZ}WE~t_m4n!bakW4tIw@TZHLTHG4fTMhI_chVeF8^-m`A)1kI_$g
zD2i57+eH?rY*J9lnzv!r20HQBetf@^?gh!gCM?G+ZF#qiaqA|wVT)Vw3g_F-AH>a5
zCkURapj@{ou~(G;%pgW~YxyHmRgx2YgkFGOR2?S}26}BW5<o_V8;q!#nN?bgYpW6I
zz3V7~LiJo}(i;YPtlYvi!*#U<=@h!fCyN2FIdIZy__5gXHW8V0%EJ-Dj`zUof=a##
z*dbX=H^MASfV_1wMps(rTBsaYxf7ZQ--K<<228V3Ca1=HJ><wE-5`8S5R#m&!}Bt|
z*C{WpC;X|$UQPMKgR8?Sj9uMkp)g{1@KXMuxMQ3m0ZNH4G6u>}WLP7!OcQ|b!D$7G
zKH28=Z1Xy|#3+F;4QjV4#0b(bbbe6n^hesw^1dur$kx{;j1!sTMrCA#ph-gp$;5<5
zltSHs8m6NNMJn}aNywC}l(HbM+HMWSjZIY;-X|YG_Q1l`rt##snL0(E#+=DHiecbL
z=S0p^!3nN<CHi2A#RuaY<juKV>L^kZ;BA)dkbsSmiM^|aO+{KoZ7r1{YEQ7Pr5Gix
zu&$brnnE}|1(liVVRIM53wkQ$%{dn%<l0OAGu{L9Xcq7~h9~|RR3n^@6u8wC^Z*8`
zI4Qy`YDiaPrp9EO#7&SL+R_4p+ow<Hx!Xm|3?iyoKV${gbg<IrY6^?9a4=IDi`*Gq
zL?aszhF8rJQKuAUQCbd_ni4xgT>-Z)UQ4UBUR46O!!~363Y?ym(xjeX-Mlh~5Xyni
zpd0B6*cO=E$OQ#BQ{h=+RPuwM2Oa9~Zstk%9J0(&=)^!zsufBEYsvv}!Ie6OR|6~8
zMkrBZ+!;!K*YrvH=+{#VHdFvPVvdCru#4bOLD?w@NDIR+=imU>0_k+QdR}PGA<Fng
z6bLJKRu_`XWA$YiTD(`G900!Ek(5xa<Ni7MUWL(z2D&)B-NDWF^SO(fo3%!%_?Nr~
zb}vbwyf&gZUFTsV7n5tqI1KkRwQ6?HVc)C)5Q{oJEjw;I!0{|YwDaG$r8&(7gczRY
z!{mC3o;Oy3KaxpIfi0+TDkb(f8H2L^3*3&>MSj+yf?V4%)K^8R%tE_J1(>f|i<D)7
zP06Cb!Qp28=337!CZ?vl=-dV-qTr8HX*Y>!(oCS>h|p9<W)(nX69Vh4c5pmaafBsl
zG|e(pslL(A?}I><3acvUmtMhElgN{OcN$QN=tZ`VBINbDeFp^``}YyUr~IZ11gSmj
z2B>>Vc+7@f1$wD0L&>GcXhVH-n1Z8pZJNVV@L*`rSChO$-FRI$s+5H4PT3hNPA#Ru
z7(G=0<1Y&nW1z(70JEJr!uc419Lxbb3Do6q1I=uKp5~r*KIEmJ16!A@AO~jB0EQ>#
zqggxa3HU64DC7V(U6iS;efc#|^;e$W;K{(W*s2n^Xjq^&`5_V9%2US+hzH2*`$SN&
zqci${H57A%-3kIT1Az7shk+BS=`k+mktkH5OmT{n1Q`ya;%1>8Nrp2N=qWjZLY=t;
z&}byJ%o92f7<B@*QfhPrb2$BRJSV+F25ckRV2YBv6);y@$_aDO8Y*KE29>-SR?TaU
zrM0J#30Wl|GW}(Uu6C6?OdY;U5>P>vf;Ek2@lu6dr)S`p73hp1xENqdlREnNe5>h3
zXuX~tswo1F9=G508KU7aYj!eyXN(Ej$EK~T(S@d?SXeBop~lpVXkZ9d84C<yg;EnO
zL|YpKteP?udcJmt#<jwryRd|@8Cvcuo>_}c1FB={qQ`0jxVS=m&xl0n_ud1i5n!9p
zXd1T9psF3_50y@nG<d;Qx1220;)?nbNrLQ|E@rUOrTI}nTUcW_`jO{l9zT^w+(jTB
z$p-ey4oiEkw+SS8mUd=3k-g%Aa(hyQQmZ1YDQAqMm8SSa%w-Hk3P(bF{5f#+k@#Eo
zL3t;R^Y-RME_g5yt)|b#+Cu4?VlZ<A2Yk~oDC;74#mZP@flA&Cnu!p~b%qkyB+?+n
z@C#Iejb%9}QSB?9R!h0|^aWmCPOpg+<HQSaNBxxV82Ko>KmU+^a*ZIQ=6j4KHQQjd
zF9mA_?5fSPLX1}5K#42?U9qif2B%1el;SMlVMhj-PLh#6{gU*_llB?Kl6Z6DNl@$A
zXF|h*-6&HFG?>}*7b8Q^RfeWzRf%KBXL}!5vxbBPwLq!b+$MN*Rj@c%bDiD6k^Lhk
zJdO`Ajngz6?U1wL0Og!dGj(YUeEH*qS3APfxP*6tu!<@3&`%2;KtLN#O0~j<-`(`j
z_1A1T!&#;hZT>Anm@~~n>tw|e3yM+}(bdibT)R~;`AG*WT<a?+kP+4I3Id2~3d!|3
zn<}*y-1nVO%E+t&sN`3o!B;m2<Jg$jP{C2g6Gu#&g`DytCFO$Y*R|RXQHKg7oLjEP
z9mJgPonW-sx1z-;e4s_mL@%U02{jQvSQqgG3Cs53fIKxJz|sUyYrw>M>1h}NxN0&t
zdO?_x8R}MPDGGp8#-dTcv9bVnYn&l5F$o1Bv))76aX!uG!(b>N?z4Upi%@|rNn59@
ztj%XDUE-MPDN!V>Wun8S)(v@{ImQa$th(H((J+IUbc(dVlXmp?!DXy2JFIoB&rHus
zOz87cdq^~QU9BTD(ogaujIde70~I$5?PgNj?SV?6yrxrrtf@XkVL*^f7Vtdp1ZFk5
zf(G-g0&G@KL|}>vq=q>$omQ5W0LQc)!U|ByF9bOfzRWTv2x=-LR*^P>3WzXM+al9S
zBdcx=T*(as4cED=PyM&#7A09H=!)c>c3(X=TRK!xfdmmRi~EW?jL4b5Wzixj#R8h0
zVlan9^QAeqU&ME`MGPs$Ss=neNv=~-<rW?tgf5Ui1;Rw;$df-H1}dW=60OhLByM>;
z4s0eAqwkmp-zqyPC3fjop{<(-Q*gqd@N8vM<+x_|8I_PR5*d^z64p}V@RG(5?`BR0
zEyV%&*7T>;?!<gc*8!>)wW%AS5|^#j!E!Y1RSG!T7p8F~C$KH3$%|Eq9_Zqo{cuu{
z=v784HOn;%tu}*}usb-LAKq63h*gsX1_7IfPLyYL$~Viao6}R%g$7Q{MSD)^i4iT8
z0+zc+XZD(0Mx!w4!`7Br2PkdM{BsqGER(3rp+>oVnhN!Fd%E!hwHPK-!iX%x6sEbA
zY6XsBZYNLT!RJ&ou;q_@OoMosqtBp;Bj|$CiItjQNhsK}cK46;t>>Q9M|O<qg%%kz
zx6=eMEJW3K>nLiPm5_}y>9Kytpum|Bn1dIpEy0MYR1t+)?uRJCC1X?3+;DP?LA)Rq
zP|fk<)u(zWTTF~1{YB4#Z;W3X-Nd9D3G-_g*6XHgB|(WIVNIH1+|X{^nS-zG@vZ*s
z5fPX3bdz%mZiY*j`JbZ`L`AM4DW=IELd0_4FwRq(*z}`fVMAx6o|hs(=?POsVs!x3
zQE&(#Ld|fmxP>+X5!{bVK@+E`7;~3ClY?MbctxAe9JG`mW~!Q8!9?3x=+U&XrvmFJ
z$;{Mt%5^GZCTP=0IKez@A0PIVG(+Voi)oK3L!Gpsk0b!jn7)lvQcACG-CkY5^~Rs%
zPac&nts&K1Z9Oo=od}kM4)Z!EaN;F>qB<shKF<tg)0UWq;rK!T*q#{qT&Iv(gDflD
ze5$Rnp`r3YvBf4}KK&exp=J!hP(Y)t5RF>7RRi!a=d~IMW3`R<rn!9NSO_Xui8d@^
zDG-CiA#7oaE7S$WBJ$c`MGM?k!K^OUsfeV40i_qQ?)nq`zUx(c#ROC)Ud#9JAAi{m
zf@r-^hmot0a?4o}s}^#rNsJWCb-|XYw);ho0`9kpCLnaRb})NV)><O8REW}HdV#Dn
z7~!Jd>9;<JZ@~*uDK-bnTARS=&xFBgTHa1>Yi$Qud+aZ420W3<l9<>I4@7<GH>E33
zacvj5q!5&Vq%ivm35}Sd18BDipdM0=@X^+zoAJyi!#h3Mj9Vx6rmw~j=dzJ7)OBKD
z%}sJ80gCI_z^H9LW(6i`F_LvMV~VUEED8HE4V4Vb1ue<Iu7{^;yMv=!$Dy>2(*zf~
zV2swbtn9;a3~rkh$JCy*Aclkx8681qrzPXv@vBci#hIqs+3!BMofv(?L<Bg%ww4j!
z=i`yyr4d8!zXwjwYi_|uMk6*%fb&9NSXOk>MO8+v?v?w=_8JtLWo?1;+F5!QA@mAV
zs_FxSn;3aD7czi((v9*bc)2gwF=_zY7tTVp-G?Y**7v-EMUS571D`Do5akvIP@Y+6
zwb80X=@)d(P|P#crV&6{rE<WmL0XK_!#Cw9J)B-h(suWf-Q2Q_8`2#mnY+q~?x!ax
zJ8}s{aY{NC)^;m5`Pt~WsK69&D}qCkmTC}*5=ExvMwb_a@9SlZ11CmKg`KlcR4I4U
zz7yKQ;qcHspItLU<AI8cb@Q6KSFR_iMky36Gy&w86tg3ExYaP(Dx%)JYtr@l;({qv
zt7u54pF>rkkxAMJT8HpQ^wOLm#Vt#r1ZAfk{geP^W`R7-Col=)i;G3B>r5;WJXi3t
zJ;Nul%ozFZlO_WS9a?VmXV;3h*_4X(Ej2JGr=3jov=O&54D6ddDiqt1K4aJEZ<99h
zn7I*z#WA(rw=Px)2!*d|nCWP8Aaj)CF!={ZW93W1bXlxVFFg&ZJyb2%EVSCh21sIl
zLAT(gGbK<qO~pRkU7;z9#e`soX#0BGvP_V>BmGZK5*3j9B>yvkoYK8Fc(juYjaam-
z22dGu!LYbJ<9w=pJ0#<~$Kywn4ZT1PIn^y9Ei+g-&9Y-G+6xTjtQOkJJ38v0Xs(E$
zv@{R(Q^lzT_@v`_RI&$e>Xop`Z`GGz587)j2xn5>mOR;DqtL8jx+IjD!Kr1#>RN3Z
z%>e}uLug@!2AC|{Ql{VL&jc}gwNO?Dp-8thmrOxPdR@Ut<hgqmV>xBrBJQvXEiTUG
z?tytal~9%nC~J3g%bpO7%TVx>96?G#zdKsL^;{&ZaCr!}H7=WX7K$8!nP|yWm@(=F
z;rWZ*6l^*;TfqUW)s9R<S!FZVQI9_lPo91<lxVeyM7@^_n|Ik3Oye0XA*w|0mS~Cr
z27$FfHm8h$5ISgADZ-gDQoe{arWTXzL{%|vSE$qgF_orPY~IQ-(LanZDLUv}@1<)1
zmHa}$*dMOwxWJ9P&*+nh77M4yu;zWXRdt2BZaOwOZR+gYv(5?PD@_f@EUUT9v4vSe
zYc)A`#kb>bc-PK+2vsEk!>&t7AmUAz0+NqO;a3z^$ts{7>Q@jbcbKI>V}qQDDO3p@
z;!%^I2OGg9!jrbs3#6baX}q)Vl*W8+6Y5qjzIrCmp@*^61=S1z7j&wF#fmZqtIwrP
zH0WXWz)+>!ZU>ZOzK`l=Pb97aHI?K@S8VE(;71v-T9g3ZIBh+OZlwf<zzBOBts+m!
zYMIz8u#7Pf>2B$PV7HRpLW}0?F?ucPB2oZMYf};4E5P6iAO;;VPA`@-Ta_F(GZF4p
z5}cZnR&Pvo@7ny_Uod1QaGHP1)V5ayKqbEr5cWrN5{t<!m%9h0X=*K##Inww;;WEx
zXfxbB!<IYngP*IO_K50STPZ^^B$ZIwwtNG-sZC=s@=zs=BqAXRf^ik;$ys+4xNpBf
zUO^wJ2t&<yk_tw35Kv6PeMm73PF>WRD)($)(3Gq7rUH#xL=zU1_VTYn4?;yzG8@i{
z$%UYViVzppy1~aDRDk7B*r^aG*U|;%qa|~|B#Nr=VrAqG=t)f-xc)geg4I5@>NYS%
zi>TQN!a%Q0>3~T%DVF8pMQmQW#k7SbA@rFtSwmPM9>oMPfcv}SCs$#^4-rozIRc42
zJgYVWTG_u4MFmRbBadldXjZ8h)-%xd!f4BbLN~CHmM|hT13+an3MzUrVoKKI+r#*c
z<-%B~FCx%Y>_J}-LB{mqMKgv<5xf?!j+4~t^oWJibhUTcm*FP)06xu=s0pjiwPXfF
z7feM-Gb}vZ)P_O2<c)(ni3A=n<7r-fMrY6we(|sdmwZ8U8fqf?%BUcueTIS{q;Df=
zN3jt>@f7lRYHkhhD!0OhDrt1DHx8Kom^LH%NuasNm&hgWfkVE6(>-fbEjY8Em}a<N
zt4c*F(}F=#Wu88DGoT{Ms0CP}g`&j~73$1Vi;gwp5ACdyDQojkjAbG%(DFhgP}ALF
zVUb8NxPm^1h__ywIWZs+Kd1XjGfefwPuNW;A}sXNq6KCRVTDq`lw1&w2Gw2$w=l<d
zpE~OUH_^JDC0OjD5og6kzE4MJyCg<o-(wclcG5YOd>62{NL?Xh@dj!D-X&^~g!iQ&
zjQmZ3K7inY@(54A45mIf|9XkXjneaZm!h!KUkE(7;U_dDj0F2W-`o=(n`*?mM&XF~
zK1?FDizIUG^cMy$(aW`bcZh=-zV+HRngf80P%$7}qIDWWUPsYmw)UKK&95M=tS=8>
zt%CiqZO%>UP87UUb#;hvIj2hWs+ld(A>96Z;Pe9FG}4d>jx-mm7_p~pA%id`=|HGE
zX$(3c3$b7^O@xzoarl*+7S1M)pO!EnP|X%BsIAM$%znkVJv7m|QxV<9)d*^LYynC8
zBo%`tdSe!&nWb%UfV<gct{FpKMk7J7H5~W|PUkty5LHsH7ZHsSO*ME1=N3YvyfnpQ
zZY#c@w8*8}noe8F2#l407=|I-BE8Ua(qnpe^Q`%1bJbn`*9=T!8qr5{AXEuuK|NIh
zuWU~l#OZ>vaVrY@iv8GvIoS$K-B1cwrC7kWL716D-MO|3Ax>jIQoBO(VuVfF+$-F>
zHMnS#tKhJN!y`LqkD~HMG>#mY928qW`#NMaNF--aDz`S%JTUKmL-A1|cU6^yRZT!|
zMV8-ab!5BLb70btxpJJ*@mjEXYO`-Y`lrm+`VX#snI7fB${o;36_n-3FeNj`)M5M{
z9>nU7`3*;BIDk#FQVM4S=2~1eiG5x)y=zbXk(GjY2NknE3A$%VV^P2my!NGbP*TOh
zLSJ{IqoDl6NV$LgseMMN^33weW0s+&hIr*x2hb7}y%?n$+}`u5sKd)jHz=FCr~<0^
zl_hY;I&E9j0IJ1kt<EjdMtIVsjAB%@gEE#TSF9q_I9r$(GeFrzT{pCgP2o!GQaqvp
zZqY0ZRCBY6iw^USsaFBpl1<OX452q7Lu_GvF3%}8?0`W#rfOT<2Bac1s9br8MG@K`
zmC$z*kW}O^Gzf8hvcr_#Gg-I-;x4kT7^g=Mm}aT~Da7U92M*LaBVtU?n)3!GoPk6w
z`aC)#Mn<$tYEl7>$A(5EltXh)xT-LR3F;1%Lu*i!L~Ffaoe_xHxA{3VVEl6S=(P!g
zt$=4vfvV`CaRR$zdE!5)#5Hx6tGYt~5YH=2!zC)u9*cRrWMwJ32hhwj>IQ|%o?=Fz
z)yCru8LUpwONPf<M^aAnyd10PxS9bf`Gvr-7-50RS8JSt0#>^8p?vQJ5e1dfDj{gj
zB{AlhFYPdNA9ghhN|>O6RJ)Knvq_cWB{E7GTS&>I-AvqGNu|IFVbJKC12j4;ZHr@!
zZ1|NI!1zi8In7)G9G?|~4`HcCPy{AtN6h-wOsKPXID*iF8nk1d5aN=rLeq5Mck~2@
znL$t>;5CPpio2W6SY~LohJw>LYM7$~?DT!67)ggP3tgr(Q_<b<yhk@oewE)PP0{7M
zqxi-?I<rXva~N=dN-`r1^ck@NlPD_}VaTKk43g&JTd@KsW4dE9+8*>5If7hQ7&Jz>
zavP*qjBjQNmd|UGa=H8J!IZ|RMF6N_oQVJsQdf=H-g(qL4w_k31E}N|f(>#+EddGX
zR&rRZ47Rw`59_%+{C&=8;E6Ew=>$lkX1Fag&`4GTtL5I%*K1tW#DmxUtkg@Ur&{RK
z==lzcG6t%-(>@a7+S99{DJ_KMn#HB2N)c^=DQ_;+-~o!y<E$v=hT?FI8zKb_3{_1F
zQq4?V)BxptgooaWt0UWoc@9i5AvsGmZc4`)E4#R?2b|m(83VWsn4vA#29cUTQwS>8
z0E@ClJ);$G|G_VvH6Xte3Q?~jp0X`{uGMlPjGmIMOKHdw8<Fy+3?5k5;FBfgn2c7M
z<%A6_)ba$&IVuT1u8pBY!|vetmc%PREU&NtA||tz^2gqgo*U?5ns8DvQ5D&M2{Nq%
zlswcZk$_fJDU0MakiAzOL0{n^KG@U|Q`kE`&C@Vw>>-qsi+sVzimz1V%oADIIT3gq
zW;8w=BCqm!`hmVclM>elQV&e09Z9CF0nA3}u!(C02EJUgSeteX)mP|(Ax{j*l5nhi
z2)(Gq4-c;Aj|L|?!CuP+%5*D;!5x;;=pjV`(|zx<g8AzDvj8FX-vjH(S76XAhJ?gU
zpZ{=hLrA4cvQ<<u#XxYG1W)t$Qz~r9>q?3+vcMFXunLTv`hB9Nm?z&ddzs@ixmUZH
zXNhM7g?@}rLEU)du!qEXa-c{Bb0HIi%KJ#HWV6tsnaY$DX1LaK3&6}8v!Nh)vw<Sq
z>J!?~qn%;`aMPNUR<flv$1J8QvH=rhS_i1z!HJz&X-_Q<-N1SG8?Y2*#puDcRFHu|
z5ia^EThYn0ulAqMDVWaHdn%!gY2`{BB<T*?$Vvqn4UJXD2{HjWfT=1+YA7JxFtQRS
zErE<wWgZU@(LSiNPKG9WN4aJVVW5{C-JX}hRUyJqWDBEgS(QoH)ojg2=_yU2MwbGh
zoFBvLw_#+v_&Kmx?IGL{HP|#4XU1KjC5L0Z=aFJzq9+~*KS!=do~0kBMMX+fa5vbV
zJ!lQ90>(vhDoQ%es#j^whIT3r93DT(GdF0XTm6(<p=SxEK@_EO%T@4thIpot)*@pv
z+8`@v7<|fzkaRn{cDojX73G#a5gaE{2yPXNydi2%gcKguj+J3skG4@-qGBBPF8c`<
z&~_mK75s^x&y?pIC~i^35CImLJrrD3FiAx`C5SORVi_^gL!&}`6dmR^Afs!Uuu-=S
zb}^z}OBk~E6+?aq@C{mZK%luwFUI>XSqOa8$V*&I0G$nQ(3Wdf`LwsfYE*#p4sSdS
zO=dKBx_4w4+#R!wcUHS04X|)U#JWLWIM9FvxfLKUyyg%<IX{NOPmOGQ?}6Reoy3w9
zLjs{kwo;rgj-qb%LIvh0O%gG15HyhyCYeelBDIxpd1Rr7V6Nkgr)#%6`;0k?Olb9;
z@72^Jx=iwc*|Hvk!%D1vOUf}Q6+|tfBTRx;o66{c;swoF?h|T{?2zd>0!b?_YB<xo
zLL17Wq^W3;u(a{u6a5~V`jj`!MFFo(s^V%fRS^Qu)C8H<0cu$yu|FCJ)v%VD2(c_M
zn;D+`tTZ$|Lj#%bD)TAD2x*5h;TC;09-Y&inp4uj+I{&XnH<mI0n@>Bv{8mw0-`xI
zS4$|%5x0p_vklI2gM>j=6MboishL&2pg9dBp7Vk}igR#supw6Az3V196JyZ)+#M~<
z<ux$Xk$`a?Im69>We!lzXL$70QfGJT#s$xTV`8Mr6$pxsnFrKn<pLDmr_@Sbc^n`y
z<eQrc${vKH<g(DudJZWxNNlB9%r8QQ^kA4bBspAJ!Cpw<p+!k;WE%>nkRqRN54sdL
zo`A4)ODV;m6__GR*BBH)lhqXU?uepQ9rHYDM0{nbkhxxK6H|OKYJ-iKO>3(UbYDGV
z9{X8oDxNW?v}<!Q^n}Mahk9`dP$R!6_n|S3&4X}|c%kDr9{QA~vr!PHkQW~&pf?0i
zqSrn?cGuJEx5-T$84Q<Lk;EXPNV7KrO#;jeL4y#iR6Q^lkL|oyly~ixdPI<!@YPvp
z(3U%e2M6FUw75xm%xL3h`9Vv&nBMW1#%;TJV@PwjdK4DRfVyM4!<jMAef5%|&`p09
z4a#{611-<D{rA8T<aI3)9A=VMh&`E!C12#cQ-wLp7hq`A#R;qwQ~j(M5hr#BpK8BQ
zWiZhT{vqFjB=ySSp+_aPNK<CaAZOwrv7rPJ@?l%1#X>O@*~vXr`|Qdnn4yBJw=R@P
zQPRL1a$=T6n<edyvmhx)Oi!`vvO;E&)Bs{)H?XB^`_jO>OEIL@u&aRYmZ%}Ut3r$c
zQv={vazPE+k~lOF8(R&a7W{<EXcmYy<>dUH4vp6=LXiV)j<`FxT4zhiyip%_sRAC%
zQD3tSg!-2Kp8axkA*b=8lD4o);c%gM1J>*_K!=O5uPy#98GIPb%_f)w-_Q>#r6*9k
ze2T0{vEZOV<xyp)aS+5zJMwg(6(o_()tIEs@Q{G>f^{xJB^ER%!PyREM+vr|E7#C{
z^^!@W1_0%Jh7EA9#vO@zvR&{TIHIH?(~v|O!+L31L&ULNQm|#OkqS3x?3O%I!^E1_
zg7uiLa=T1G!zl)h55ieW!FQ5l3XTC{=Uj<bGx?UF;CGV<mN2q~Dp(>IQ$Pt=p*z%%
z0A<o-HEjmXpyC9|1Fn9t)Wt4<a$|O(aYrxI@Y6I{Y4&2K2oMiH8%uLkDAA~@!lJXU
z#<M(Q%W42s3PYc-@x?7xGn7sR3<+uP3h4mMKr_EWn>lF=s1(M&C%^)WW{$XKw<_Ui
zkA(d-TkZfZwNJ-zUChngm;(B$)M}>FSa^-e<;?3c-F1B+r$KRN%~*eehb1%a^o`NB
zQj3%JMf77(p;mbUa(40nLAuox1FGIyro)|5`ok<i>RN*9zzu;K%mNwK6CPNsas#~v
zylR%%>Dy<ik?j(n#8SlM1VaLWB4*yg3m+FFL^KLeekg`=%j%vr$D&+CSThbjR|tQc
z79N$8xJ<R+xnQ1wqI;VtSz2mPc22Bjm<XBma|`VBr|BCOl`KIU4OTYQk&r$DHb&b~
zmA<}y45t*pv=om^*QQjtCfK#}<0?E+)5uH&r>LVt(WcM_b&)hw)X+Tzze3)kQG;mq
zw95clKn2UH_a_CgOK}kfO=Q=;3`P*U!gIV6j6_8YeINE{KC>NZ1E;2K!EqG9K&dN9
z7YhZ>=ooHlH|WY80)TND!F1I-;~xp&1-ZCW0Qju57o}S2mtT0FVWN;~UumOdt^c6@
z5RA3tnsP5V$Q)reIup$MWHpdjqi~QVOb4z7IDd?mnN}F23V<4TceRTNTO*s_1Md!w
zpW-7zPLmM`C!^Gl>nF4t8*mLCzZtxs1TsI2%ZydaWc08C4C#j2;!Z_C^#W99D4>)}
z1Z9!!W4O<f0gpfLhG7^9ph6Rt{HlndBBaS0+tF6h^xD?w#ih1_YamW}4O&Fmts>5&
zTWNYgj1tvaro^7*P(K4Lm=3eB7yCd>r7gr61!XN#R{OyW*i0yDL2HCwdXZX7FmEi9
zgB%`AkKY*EgWFh}pqHH$>3B}14o{-jLLP~2!@#H;Tb3K^?nj@KgEC<*Dq%6ZLwoeL
zEYfH<Q3$qJyO-23)Ch~Q1kPp<2Bx3}Fk0cG9~y-ked5IQ&Y|&}_)Jz5(f%yo4$JvS
z!<oS;f{&as2$n!^^e5EO&CB%UnOwv{86Q#aOPm_n{2n;h<1`s)GalrGK}A@yA}?NZ
ztt=O3J3w43JB^`4BXf+!5ZZkvK8{XV!l!x|q4N}U)8g8uGR;)GUs`6|92{Vni@=z!
z65Oosth+Hv#<>udKM4S|TA2u=l_^2d#R-<v?yC!rL~6Dia_qG2jGOkE6h$A%yv`~5
z_<<?cUZztqhtzgox+;~LflA(tDwhFZ<kTvz_ynj@I3}SIIis2y&7&tx1v2Y`2!*?n
z23_ISjkThRgjHw4RPZ2uz`bzkn7yoK^D=j16`ZGlY$W$F$Mt5aq75@;Wz-{w*Ynkv
zN~|oJOp<A2u=Jx9KKhl6aCk$HO9{n9R3+O=%v{*3`5V*+hbDC{lg=y);I}mcS5D>^
z2H<Nm1`LhWl4}|9`fKehig|b=TfGWxhSS_A(g;)9`JdgSPe1ld5|f!O@eLb%(DMjt
zeYyVq3S48Iwp25A1W{_2TUXa&F+mB;w3xQAD1K=mhsGc{%RyDI#Q=xIZu6m7@pG+U
z<_L|xD6DPe6qkTQjG3*{P5aoEMYK(Mj@;0a72`Vv0@Em0R&|?zI7MR;43b2^hESx1
zP$m{Q(SM(KlBr)hSY5K9coM+PdZ)l*u>1Ua5!g&9%pcitu&FL#W)!`^S|jkl5a;A|
zs<Ep<`f2Ia2_ge9O2%>74)ODc1rDz;>?(FIyN(tk2c{O;kTqg-yI{1?#tRf<Fy>vn
zpd5t7ZD9q7S~T4DB8V{RWuh9cV#ENQ54&p}nKDIb_#v8(7_I^}l`x2;!rI7YcRYQ*
zX;>rRDFhe2Bi*VMAZJH!hE!1q&?wg{O}a$!0gHE)U}q<!S%4Fy+?XkTqcEZ}#46WC
zcrb30V=ek&&Xh>z3tyE-X940B=?;~E&Y5&QqIFzbbnIRLR8@U!kzP&q+6Kd1BAsEb
z4J~7<z#gb(r6bPFAofj0MTj?%W+FREBto8n%v+3NBB~*pv7-8=8>0eH3x4F>rD>$V
zjMAItEI({)J=miY(gBNg1qS5?sDPOG^<Wy%{wcdzZGnBtD-5m!(rb1iF^5uPbwjXo
zl<t6Yob`YTjcAQjRKZ?)d%#w`jig%A!!!ZR2%S8^Nn1!c2xcq%wM@I%+K9zUV@!un
zKO}uQV@9exkYaJ=R%u2;?btdZFQV{6*5vHW0=HU510vbTmd}A{-5Iwg;7;EmGb)jk
z>T@x&#k~1l&ai}0mHO!F&57xRIEYfY)zVx}BS^R_W<<QtD|l^TNjU8eN<3*VDui~*
zsf?bmEU(xeb)0ob*M&y4s$6+=gT8^2y#+}oC@#t7Fqj)eQ%J$&3SDSZopPLzhiy;I
z8bM3z>1xL&XuC@|@kvdlAqg{D_M}$dxUw2RF+XWA9UFzlBGWV4M8=99^taRyO^F$M
z(`Pif!Gs})0FE<k7no>4b!3w=Nmo2AnuaF;N;h?%?hSh%+!UObXnMJc(HrL#T3LcV
z){Lt-1Kt44fTlq{>WLXWbu?BmvlTx2Nmhhl;$Q{a7sk_}j8w<u#t``e)!3Wp%&X0Q
zA6XF!RxM-=i?FA+Dgsf0%0{+&71}B}%}t;=7huu~5nLN4VcuW*OWO7&HC<0~X;ch&
zzEUv9q-3;PBnBj8QRj!Sg0mIr!_X#}jPxo_FFMj?ZZq93hGUKe1<YlRzNj}?p4?)&
z4MS~n=K+-|mQ_B02RDXe(OAaOoWTQ}TIrID;iI>}Vp0f1n#8k$8gM+R=e9Jq3_~Pb
z?^kN$%4z_$;0-jhrU^c?=><R-tR}nOq50qbjvIy=2!i9YxRan69Gt`}R9t<8#$>a+
zLw!!{Y7YR>v(@btqQY87kzp5*o|ofvMoG3d6@wcfT83Dpx4emTgF2X_pYUZ^XQ2{|
zR`|=k5<8@LK{=7r!V73TN|`t_%&5ULKo~joS2`f8tg<#BA)8)m%&<0RPCz6Z+3X$|
z4d664!!97GzZ%6NuFfRRhRuW*`tiRlP3HwM#_{9hX}sOR^~XqPfv(bcD|*Y1c@9KR
zsY10h^Qxgfv)afS4aMSzVi+cKF}h><Z^Z=?eQ|(ObA*$x<~cAH(@gXli?M*5Sj$Z?
zn^M56mbIV+!^lGzuAiq%p}sq&yqVt&ENEn?Gy39AOCAaJIW27MVGju&57v4vVBj(n
z79~wr77#j6!~=srYTOJ)`;2;B_u-}d$X|3l`mXQ&>;LSZ{PiEOlbwntv&nikXr2wN
zmTz9Hx>z)UDHAH=DT0W1ws_@?59?5Ws?BWxMrpElXLoRB|CkhMjJRw-=CwOGk=r}-
zX^*RL1Vtg3qi>5=Q#T9+l%*)stnkr~K_bdD1FbeY`>O4LP+!wnrmAHh4^IyUIyV)z
zlmG=_4q{S=H7deR?(_B8xW0RUCZ}MT712gEeh#c~nj4@jS|iBO2Pl%H8=tDTbgX-d
z*HU)}pZeh+`zQbR|MgG)>G!L<fQqx2qB%SdLEAf1W_X>PAmL2~RnU>wI%PL23^Rt#
z#mGD2dteKASkQ7gSQ1!$48SOBOI^}AvVevclAydtsV+4OZ4Aib#FeEeHR^g^8Qv%F
z=sGQNc%>Brc%Y1~fQ%{4q5N1OwPM+6BpXIz5*XS*sxe(xrwH`AlC!;QTC<r6D2G!i
z06y9Yz3qvI(7;@930l@3l?A)NJtEcgdMr(QkcODG9U9kYYzprwiA)6vU`7!~ACm%#
z!6j@*92*rA#-laU_Y_ahDZ^Mue0>UJR<@p0Vz+Qct^%CKOfHZ!u%Na<S-*Srt#|L-
ze{lc)-S^&kz5n>;j4>cSEs;z>)x0?%TX6!RxJoKW3PpV^9g%EgYoE_{bkU3)vxldt
zI1#EvF{MbgJNRGa0OmS^OfzGMDync<f=<IjqZK^XyMs?^Ljx$kJ9u&<s5Z7GMXE_1
z%?PKGGwiSkvzeF1N)>3+YG~?w{JdC3hYE^cDS(AU4+%Jj^-U=4%+v$eEDssrG)AQ3
zNkE6ZE|&>6qVJJP`oy<=@bJ;;qtnxe(w#oMfBRL=qpV(_`^ad+k<)n3QqFlYH-Wf`
zV%X!S{aYzihuTnU55i&wwgV}wT)?=N;ql$)uPrMje&~DMSj%XbX^@t{4w95;itwn@
z@6Wl*>$&Nltg7^~6wRY&nN~yH*c43-r!nbjr<>1&Csdf&tVKns3Xq{GTM0^B08x{W
zFj?Z_J~RfQ!Auoe^p#jvnvt3zBX%!-;u9}X*+ehqo(Nxh=K&7gN3!7}-utguxWjX*
zkb%k(SiDxOIRU3~?j(=T*Zaz&k!_L+GVamZNkl5jax)1vC<>^L-;hy|p3VL$3y{PV
z;h6<klu;!;u<RT=`Uo;0VOK<eKNt@yD)dSUWnu$*aZWIsn3fmDq$*VDDZD*upeq7R
zxg2zFH41f=dD`Z<E?6vrQr-0K${V-ueDL6bJ`}$FW}bLJDp=gwVPS7RIMw4e58sEU
zkM2Euc<(li;*Y8K1DY*i@@AA4lQFW-D>DL4th5OYngFe*j7ECR1hTFM+&OxzcU9t;
zSX;Ad5?-cvz{W%uI9t5*2yi(;uh?gzeVfEE#i7(TRM^DsSQk-Nz_#Ix_Mvw#z5L3{
za)+X1OfR-XI7BYvTcCB1;_lV{n2W}QtxM%78&Pqy!bd*_X?&Pn^yzmWJUqprD0iar
zNcg?iseqYPz}?+#Ns#+rK7{Xqy7LL>2wsdPk@cBV(6|b9i`s7)w4idW@F*I5xZ21T
z&w(R9>QQ4L6Hvc%b^sejwW4$O9-eSMGDUL^9Zu;1Oi?$jioMs$xn7+}81At$ktqld
z$}v%l-ILD|kx(W!su|#f!`I$<|AYJY9z48%|IRzFi#GFsw0f0K)z2|E1ew86HBUw{
zKKLnBSmPJKx9TXkR?}I)S`RR_i3-2+ejL5}7+4SC(?@qc?ZK2?t5<ilzj8+pUV8Mb
zp8Uyu@acVe7#(x9+!~bD05c;c0R|UPj(9P7;T8!~B1UBITJ0iYmU+cBfTmcPYApi=
z<?I{Sh|+>XE&Wx#BMp9m2>CiDH2zcZWyPsr5^B(lNC|5>jA<ei8PXedlTRl`ChXW8
zT;J)J-u~d8+y?blX)mq3^Rfpix6ez-D^K|}l>#C6%zhcpP>+z8rfB#_a5Gns);v5h
zqdt5{7RAc!{X6$?KWay#9m3kaOEZ<CSL1v@M&tO!F>iT#(Ny(L+Yzk5K=We2$7IGh
z_zY5%1HzW1U>rqOA_BtN$hLYF8l$IZ0}?vHCk=QZW$O=Ta72J&3(l!=tn@jM_E0C0
z{G@F4-3hM67Aae!jTN|#+OaXb7HF{#-?=Xb?<09SW_JqunDD`Ed0LlwG`N^mPX2Ac
z83!O_Xw(b~$~W>#C)St*UmMPL5or-!NDSsIs7z@O1+tEFFWte>hh1gRC$fUmyDzIY
zQuPP?(>^$O&yQa}cJ(4@*30q#0iD0EV>J~)(ab6+A!4A2SF_SM0Uij%EwqxVWnOYG
zz4GbTUw`$JqRxcUn@K)!ayEPu#G$%TYjAcQtP_a%H%zWhzj3*RvEVd-6H-nscuq~y
z8G}-LxshGhJ~n_S3z8L!l_>q%2YUaZH!piosL=a_H$tG>rI121!X4=HX+|ecUn;sR
z!8mIQHr>UrN@y+9^P3~c5$F2CynG-3=CG@BhnaDD-ycRtqE}M)+i+*AuVD%N9ys##
zf%NISrZv=}=Q$WuF~{~#-NCW2(buR=#QFd@ZDhlL@hfk<d*{K!d$OPhAH4t8%Ne(3
zy`r*sXkyJl%vf$6&6!@GsvjGqDh<L<tP>+olN69B0-$=9c%2{|Kb=ls>TOWh9$!^6
z+~s87#v?hs2lgA2T=XvC(ZhFGOE%N>qG=j^nF-Dc6z6AG--H)M0#%~1rut0mjz3kt
z8P;B0w}AL3<=>s{DcfV#z}E*ZubM3K#kQ)iJ|L}K93b@{=-UtyXg+454VIz+N!s))
zi85H+0s`@jn5rB;rjN3#WuCMzzjHrd6_95Hj~?E6-O@`xVY!bJt0;<bMcAoy!vyB+
z4#(G3fSD@Btx>|h+Ni&wHKeMLLN^u<J3CJBG)$v|0xqiG)_tze;jruBXpehjxl>SK
z%%aU^V@TDEq4dqD@UT3E26vC?b%dtr)fd*$t=K1#=Y9R;5MT+B22E8<Q+wTN4!grU
zvTx*m#&4^>w`$Mb$0K2?r4aWH9^-@#DX<J`pWeUXavE<F7$Jtif9Z?h8mYZf3)e>_
zk(nC4o*(9bSOc={uH1fb>JQ&yWnX%D=QT^LLSYrdL#AEf#F#Ni;)jj7oS;-<xzo4?
z_9t<GM~LXrO}ou$Y|c<-WTT4kkpv1l7pEOtjqM77SnudQKfNbAJ#Jg_hr?OiFU7;U
zDo=H?5c;YLn9C%q1~DL9l)j~pELIvS655)M@>ieG$%LwcJjk0qL0M6OJG+CI;)B9e
zH=vQ*`dXjEZ?a*aKYhOnAAaJ~ufO%#H$E-L^y~I4S#_$nOJvExtFJ_#zT<g-jL$QK
z9dp7BmZDGbu#x4E64BBH6;i8Zsu#qt6Pm6PcOTe)r`$8><q=#efR;VE9dmFY&)MOl
z9WJnLn7DyT^tgB$yWywEB;5iofC!D<=B6Yec$6vLrZ7blD${5xN~)o^{H|A<x=9K2
zCM90GO%;aMjNMtzB7`xKf<=sLk*vKeIFl<`))+C38f!6X@$>3j>WzE)wypkq^Bbu*
zwdWrBBjFd{c=rQ+*eu}(AKbnh38vEyY4EhyBjElOUrAq3_Z0D2q=@84`4_9s>?#u$
ztA$f~78xLIRH$X!;qbM^$jY!r*-59Tcl6;%FT~IY&tWn930u`Xx0Uee1&g-j4^F*D
z>46rXKq5D7oSsEqnyio<xXYkI{T?L6r{kGfY`7Za>d>3$slH0epHB$u@GQ@;*>>0r
zJt<pcjbqQ4gUQ4=RD{*B7Zk<Q(;pbE2<ZgPAp~!!yTiMBU!(g9yGmPY)YV>&#QXYc
z+$Z!oVd!L6y1=!5F*3W;(>HR80Iv#AFBvns03fP~S=!U!-FV{v2E?N<D|2>A#wM*y
zUk_nli5YS^J^cV5?Pnlk{laqt4eKW5sOkTAYZe{E&4V%HLawo@XG4;aqdU^9;>}tW
z6*wKyN>L`*uqzsn+oRu_Y^STCw(flG9-V&RPt1IuTgj6+E`0>*a;j)Q_tZm%baEyw
z?C_vhY6=YzQA&rzRuu~owZ3W738Ts;KC62N@3z^V!Vbgcdrt7^_QB!X55DA*3YgYh
z?ckb+R&e+2x8Hj6wNGr!3zlq{7uco)W=4@>3lAcX>NlGy;-+-l&#*Nh+fI*OUK-ka
za?{c`$1HoXGgmNK4LA<n{ql}(#Q>yW@mNSOPHB`|e0$;>BXy6`TP0{*h)$yBa<)SK
z<WQq@@&Gz^xop1c_2Lhp<tUaXW@E*TH7!`VRalp8)?#&#(?A5*_aY6%&Zc!-#M)32
zHJ~l)E*|S*7x})*y$8U#|5|=z!*;2{WN6~zQP)^Z@2Vf%edkplZ$O)EPIjKPF*0*8
zZ2s{xXaQAJUaugY6Uens>x9J1(I&0^zmJuOp_}X~;qO4P2T_<UN89y2aGnynBYw<1
zip(m@_mUJg(}`MLAAEocAgadODetPk>=$82x^4_%fz}CD`%$6(mHWE4{l=zyKdu4k
zaE)m9057Y?wB~_kYN2rqk!_&?aoQnf4p~YbzWT=7-*)>8Z@pn}KPqVbR3TxZCU8eO
z_(tB~celR%J8jqaF49&z-gC-NFHsv(>s`46sZU=1{F^=|%^nk!#wRK$3up`NvE!%L
zlrVBtpvwhCTpJGlf@);j4ZB1QJ$ThQrS~HDj4_}G%tL$isl7<quCfuiAKDH{w5&;j
zs7t&n4XmRxdtyLJ7ZQRw<99zaouzJjH%w)B@cDdg5(<f%()9-iZ=RmwMx#4CdKhtq
z=qCmry`6eT_#<Ca7^Y%U$kUiLf|%keX8Xc&1!)`{z4`9_2lAih^h+}14{qz{xD_Q(
zw2B_$v!<gRhE>jgZ_XmO{zu(AzKgU^4~E)dG=&0|HF5E%YeFi$ekAVn&g&SnL1&bc
z^i>R#4%%RjNOso`o3d<`WDaQYj7ZwxZltQ~I{$wkONhnY!&Cp)pqatdd1?WV`w-F6
zKNBjz+Obxw>EP^4OiC)`YqAz)4cTGZ7cSsArP(n1*r0==LJqFbJ1?Za6Q808c@M#z
z*vGo(V^esC|DumRK*ESVlp>ihwj%_mxa;!t4nAY|hDvy8>0bPTeu5xoEE9h8!CN`7
zK-FG?J8f<}ZFemmo<O`jG|pXwKARk0jJ6lU>8^Had6go)keH_rzhHx2`ShD#xPANf
zJ8ykjUyjh(<cw-+^W=kR5pz~)O{OR*?@ouSwUf>6fq50W4!>#ngJ>(_dD#n{rXdDH
z@3BDwa2z1}$Ul{ul!<TH2^wOA4IpXK5Rp}3n3txXb#4Tyyan7$rVmR|$`OS334FKQ
zc6n^N=W%t=GrjnhO`?}m%uJvnu*@ZM16zA}O#1A7o8zNXJX%mk?uPOBb5+7PFS5h=
zMa{tjOhMFNj{o8VAHera?l9j`#)Pdfg`#Qg5*%9VjL<iQwZ9|xns2=)&vWGAg<e(n
z@4R)zW~fa}b?h0%sYQ$GV)AT{^l-Sr)?PG5?}2sV@mjkt?vWkB4;K$51Uv-WfzJ6r
zXa{ss=Y|jMT%;{?+AXA_*Z@SPdVJnjQBb_0c(<Bx8P!e4bn5!q?%)mCz51b|*x|M*
zw9^9uR=lw(h(ZCgnGx`s5vn*TUB$U>S3U(7rs!UL&;AA3RMqyw;C2*IaUaS$s;4+<
z@BV5+3CjAk*0uq#i^|JAS0V2+&|K}*GM7mw@c-ybcl6-}7N?zXr}x`;Ou~rXR_b2w
z7)g<Sk~ty&Ltd6g0Pnqb`}SL}iavCiB-{8L*jqb%ADzCh(qVE83lt!^NvAJGAF4%x
z!c{y&&Yz^#oYjEDO<@q7O|Q?ClxPtplHts_RD%ZR6vm(sQ_n>Ij(v#3_PlJq>v5@r
z;q>%9OQixe51!FDJ0w)r;0l_v4V6XhR^;Um>V~7ACi5A~_N6=Y)rbieijvyzaK#S`
zfXp~+-^c-cSHW`%P{(a_rc*SnT_Wl&7+7(=s0E<YMj{X5|7qJ51A?}`dqB^dJSB{L
z_4WsNfk7Vv+`Iqo8y*ytM(=_10gyrsTZ*<1rn40Ykm;2cI6ThBqFc(M%6e?)gP!46
zttuC#f+SVqrk5Pj%(Z_NNV~W!!Nt;*6(-PU5>ej}yz<%i?Cea~&%UqY8qnSj2qoi5
z@H`K|2C;T2La3S*JkY02wRQ))CvlBtkyq}Y+R5Sk5YYelzJf=O?&DU&vvJ$Hy))Up
z^5#45zJKTa+wZ)gUyDw>g~}Mfd$ia|PU}=sf+hl`^$xCiXpMkvuOjN^1XdYcoxUSi
zG3+>n*kF^ZV7E4Q2#7cC`28pz!s{-MR~Qi1Mz-~HU^nG9^p<KpB|C!8-q0L#heYow
zVuoySe)oikQbQn)6zHol+!#(FLD<QIbyHHi!%NgupkY{@fyL`Yu$=pv9lf!OZHL>g
zSHo^9;or}P9IZMz!>BgWK$>5q?YQNF2%$eb_&n|;)z=*9KXG3UU->VC+ltNBSE6@Z
zr*~ge{Sqi@m7~5xOTY5Y2eNbIKZD+AAKZDT?mynL5A4V0mNd4f6zZha0%}FNT_S3&
zF);8EI1O3^_ioywm50|K;8lrX>J1U=8uHXEw=BOtEc}UgeaskHCiLjxU4KqnB{rS|
zM|1ifREiiV2TWs$x^;}Y@)s4H+KwC?edqLR!g;%DiE55Q(FH|suN$RjLWN-fN&7TV
zytCS+fRzgPL2Ca>Jav>d_j7CtbO@;Nzz+qkJC0!(J|gWXZCOp%iiM*Jv!!K)+lO~B
z{Zs$UiB48JUx9uuv2He+5(9eA1sgv79(Ieqzh?LDrw?w&-SB5?0PnL2TAh@jiGW$|
zYFDmtjc8YmT~p}MK6>!!K7aRu^xl@LPFMGx?@^MNxjT46|H=EnGPM4$)ag9Br*G|M
zlG>)SWvId(U%;aetYSyIBKnMm`I%-Uw~`<p1|+3LcDM314<VWw&NP@yQmFz`QiXT|
zPSoHS^mHRmFQQ6G>4>0D+1vN<uQKnwbU()ihDmAkqa3lK#aJu!0nO-~f*lO78BNbR
zZEwr1OYVVvx;$aMo$KH9{aOL?y_T&hRt8+TeGf05Y8@OjYJKU!+a`KF2e2{Wm8-oN
zZd)t@U2B)%&|0dSxXV>vJ-M3fD8d^9s(EyJU;d|H6*2qheQDmI54$Zj0!Ed@O>N(f
ze;c+VFtXwFeNBrJ(h4;{2gYRK#yx;wn6D4)-2i7H9TZWfiv(~>taNE7^^8S6`-&?!
z@k8=pDI#X~_6(y@J%HWxF4FrC3WTk_7Tg`a@4MBWXyty+o$huK*#A^>D6g(jK4Fi?
z^hv%p$HZabn6;T?e_C$Wdf$ut2%9#o0C!;zaL>t)3Xs}H?$C3SXbCB*g>?VGf23cl
z`Ocd!n`dmb+61jmlLQ~G`P!+KX^J2fde9&!ja>XtvInUui;t))YC*QrzQDzDnYx9u
zx)^8azPs#u;<gWLczowndYR7q_N+=9*%r@%WA11lEKhvBA9bbWe7yt84r{A7P&o~h
z3z;;@1QGB+Wxep^Q|7uzS<(yUY;;{jK){s(I#nMcp6A_5ckx<}?%3MJwxt8Vh!2KS
z73WZ$Zm>`jsN*j(IKQ1=s}ZowY-#0LfIK)`KL?iElk%tUMy8gtlExg}9N#q(;4!2A
zN04-_gBvZXihcjn2RE-B-nU)j1Nm@H0WOD$CIXRRn_V($CD6dnpu2wf<~^_wr?>ll
z+3>W3*`pMAOkbrf><-@2J!t#DhL>?M9ZXB#8p;wEJqLbxZ~P>Ik0(3+=y86vIj-|z
zGCl-a1KDmaQv!2pjI;m*k+INOC{>{pn8}M+qzg4fyaKu&+S#vXxd6RvSMJKL#;&z%
z0=5zA!1Er2_ID$HKXT|nYA)K{chV_YCU}9aFcKWcU$dJGjyJ#g@Cx)fusn2VuOSB{
z|LBQ7QOP+g{aJhLEZaTY7R8VvauMT^9KpMT_rGM1u5%#s(p9HybQvhEcjUUGn-OR&
zL9Mz6)&`Uu6h8S{1Fc43Ztc#riZZCMIHbMi!`r}q2<s+|UU2e(6a8qDB<_6<tfqfA
zLn`;7<<ZfZpG*U&Xw#)r3sfpR?{~+K^|39)XuwxWL;nOASF3!&R7C|O>h72=m?*A@
zU{k#E*6lkV+`oVS?wxmDe=#CRc~9@Re78z(Hg+~S@RN{#_9)>)_Nj=cd?y7)v~??W
z%|425(cP67uMBtYQym3JkA&b|+@>zL2bNnIW?%*I(PyreF#ok!w;#v!TJSx&%hRWw
zZ`Tc3jYzO@6(%oaz-YK8N!J*6%+dy(9Se4{P+e7pPrsC3^Et7nWR9cugHF1#S}k22
zJy4e8$_F|ffBD-FU(5&4?%wNq!Z=Hup9AZL#@zR&&qGfmCNk0_`nxVpY^Gj)?5_#W
z3TLL9uv$$GXJ!)ctc;o#tQ%RPyzzxy(uo-!dT*}0bywedmpzF4p$G5j%l<BW8~02a
zvppO8*$t;V`S7!v86yF3WL}L_OoYP7zKj?3cS-I)c<{lUci+|z_)M85k0g(x)8@td
za(L<O%3dk9Y10a1<=VE7ao>1q)oLWKZp0_<>sNSDLcdG^LyM!JnsUUvqNe)FWE&eG
zhR-1~VGB%au6A(YISV3~uuX|o3ecJ4o*xv4Pwb6KU)GKK2DTZs+=E;GR(kAJ2NcpI
zy*s$A3)gXMU>_b+@$OXiEfOSg@B6^|A_dNISHOV%${3~uXe?A%B+W7M1SJC~B2cd}
zOC>8{JJB*5G(u6BxL4Qu@F)t<z$2Re@NIpfW{0T0kty~g+k2vTC0^bPU>9o>8=_1;
zJbjQ~Ft<6hndPvu!CuZ25i0WfyZRA98%DYhzVM02+uh<b)El_2+ppilv9<ReSfj66
zo+az^Ud>l;8sy-PBx(t%OZUK_a3jRi&i7;g>1M-~tGyU*TPy-TH8gR_C_1EqRnK}e
zZI!wzgpEAS)6m9`ju{S*Vpk~;%6OhK8653~P(<d-4|EtARhR3BZ_dxAl^@R#T=X1R
z{{h|ePq*e|2#s3_hKCu)`R*$%6|iKq+N{H?Azaz#IHn6IRZZPo)r*?fxk|APiRBvi
z+Fjk@dXvLG)wfynFn$l8EIib6i_0;b&r<Z_CJeuVYUj(wXK5Rd{Jhc#>73jI)OqcW
z&Pk`|<2`!#;2nFXVYhqY&#O9^Q2U)P+1;bw1M9JBWo*J`N>mm)zLTW6QH$+^!#A~>
zmC#*B_rO{akD?#ELT@B#=PelXDHOr*nyZ~!<T_~t0NWa@Rp9^hVC$O$^7!n^OP_ej
zpC%1ggSolHG{{nzN8FVc-^H%gfoxzOUdGk2{c_)uWE-CYM{5nTrM>@ZjA6ac)=Bqr
z31Mg-d11-jaZv!dY2wKQyewLfdrSSjV~ez6oUtlvW^5hKSf^hGya22>`z^ig+4YPI
zcBWnd_w}v+PjkfXZ&cv>*?NnbV*z>uUb`ZmyGB5fwj0BKbN0%+_RPx53-tcw^nQMW
zJrVgllsE6=xYhe6pRQH22}?E9%(H5G0fm}yhshm$5PJqUI5qMfSnKJO^`+PMQ>8I$
zeN$i(ZlZ}m*V=`m3XcI^2X3m`J+QQI9K8DWdv_l^c=+J{2Y0^hHCj<Fm{#7Qfl4UZ
z%WuDX_dZUPrh`m}FAP|+d*p^;iF@7$HpXt0_xWM8!$;mbPws&@!+<ZKVy)WE{%uhO
zC*%*`fZZMJu2~<=!Bsw=SM4i66|pIH$NaX2$rlH(k1!NdppZOuk$tOo7P`x9Z^vGI
z^xzGB<wq$Ef{u$dxzpV?;^D*lufFm!z3HfkX*c*+-wREZ&ZqUQRy{;w2<wEAN2rFE
zUX~$WY^&s2YRmK0d$?W6?I@ON6AsgEb@IH`Q&A4hSWBD3H{|&Bbh)(Wz*<ozDE}(t
zF8F<Uq72wT7KBz^b;?GUf#xD5T-K*tdJFm{kpEe%e{|>Wy;J`;qYt|DiAXF-;YRq$
zH&YRN<?!&0JNNMJ9O`3O+l|)7oa_=mB_WA>p99NY#D7z%@gNR)p8&eWtvLiP%U(d{
zfLR>JuQD>qvAuvA7(NAg7$@aHzBYP;u3`$Bss<2r?um#OD@kgId0p<bxvl$6cedY~
z0J+QGdPV-T#x1h9wxt8#iPL)z1b5$k>k~Q50H5296N`zPqCRb<U-QpkV<fcd=v91*
z&-c9i_WO4q+>^iiGNix%k8)nh$B^gwC}a1-R>dc*uHOScdU!vl;!r;}2A<q%s@9F?
zz)o33!RhT+i3&@aSP2-n(NRDxYvPhFFgdssDf<l)cRhet67<7k@{jBkzh~9Zmq}il
zFwA@71HIu`d5q;Rf8!d9De0yc5#EpYV)i@-h8uxL{0nZHnzs+1j`{8g>h@C{Pyt8A
zHPWi3R)1v0BEg_HM*{g-dso#n?Mx8h6$kigm{LIE<kpzNAke%cdr|k4?C{kCntOKq
zx(KaZ5X~)oBJ}0#hY#NOM?f;x?xj~=d+k;Hl9%}~7_?-LzWzXq>LhTD`*<K^+V8!2
z_koP$qkjo6pywEg-Qg!*x233T-#xH?4<nMQqgpx3SM-OsJzWgH2gVq<@xjw?)Vm=q
zI-6>`YLtyG1Fkh!yK;>)!b}*JpqsJ!Urzg|5eoe`h9~K=-h5aqpoNkt=$>Ks3H^kg
z?M<(*d&CZ2G`>%;nF5ES6uaPkV28f$ahGow6L?-rTeIC6;y3e)^cvt`V0Sn@q7F1U
z9A_4F{DG!MJUT4N-8tBGh`Y$`*J3~E-t%3jyHGE-$rY`88Zq0sXgwMfE=)+PMNjYD
z#XA>rC;5Rq@p||`?j>*QXKaQQ<h-Ik$>#^J+{ZzIt6M8agPVyo7!;(j_<fF8A8`2E
zx81pqyIqxT-vfhr`0#^%CMYWt8(`tLG}$hCD0nUW8?-_mZJQ65uJ&TMjSfMeY3<@s
z*J$UaJGiKW)^|@Q1v*E$UNKc^<4pXvz+5IkyFvr*Uc<Y&ujx;=$q-ptmhU?f*ACAw
z+Bahq(QG^iHW#gce|#dQmNW6`1mCe_Ed!wwJmG95D5_8eSJ@pL=@~Aa3ac82*k09e
zf@jXEh>gM0mR4vfssSO*p}voa-G=)N+HKgK=F65l+F7SfrH0#`kWH`McV2wsj@;`Z
zEJ5k-zP<X#Mw36hf^YKbG!O6Ue|Sl<n?x(GlwQOHX%V?u+>SFr310ld2Xb^F5Hh;W
z(S-4TLW<=Z!B!yl)dYMl#M9}0V4YRWQK4pzkS(!r!nR-p%!+L3%4O0_L}6nyQg((>
z=1L1gU7arW#KTAV`BB0^^_$koWAWd-C)cVTv$`KpR;r0%*OawJqsK_6-=^tOd+{6?
zZ8Zvg7<c;MmDTPKwAgS)4#k{n4D)Iq`wD5HyBl#Io#K<H{xVfCFTV2n8*jX>zl6gD
zCulG>Mc<u*F?(+{fyLj!-tsLv-Fte`P4BGgim?4!yI2)Q;bJL9*mWqq7!RyOsO~-d
z(!&qlUaWy}CBk1oVcfAPth@mCqdYkc>HmKn<@7E-5Gf^gU$`$k4mI4kqCln?p}pUE
zKDzVb8}GdL{++vb-}Ue2=Z@DY#g5(S`JRz47fH<L!2WMSH;uckm!OO>h4vbATVV=C
z)7qs~amLK31J~nNceyatkfWj~HU2#RR8Q~fdJ4j!=Ngeh{NGR;J8-Q<$if<vTZ6ta
zE_m^k3*HCz=>htCd6xC+>u<jK=4<-Oie9zO7ILPBCO}LWB3*9G)$iudXBr~M0gLi?
z2cN!u_daem_a5AR_YHejbC?7tm=lEcqdbtj8Y1=1TUa}sp>DW}(Mh95^17#OM;i+g
zTR3hLfkqSU*_QbV+@>Ere7}F@nAXugM<!1+QN->Zadc?9RmZ$=Ajg=}>wV6{)BE;c
z`xX6NK-|Ra7Ns)ZkU`b7Q|Y4z`hgLF{_}Zo=PkU(W4o>({uTSlUoW9+jeB6RwW4m`
zxx@ytCS7&PwjfM}x#lB9`}DLc6Ao-Bja=LV!<8lK;iuD9?({oypN~s*5N%h`s}Fqr
z_O_f>HQ#r&@9^Sb>6b-byM6b;gT2pzBMXK+xRKk+?zMOB>RVNs_Q88^;b6g>>Biy!
zlk=U|lMJtU7pEv}aE`}tN_N6qAKd$rOx#}QfApo(`|tQ|TIGF^L%E;+>|1Ys+FsQS
zz(LceoVZT!(hL$<`U;i|?VIf`YxUyWJzNtR$=0@X;1?mSJ;lKgo(|K4`di?<Uq<*;
z?c)K`pvMtvg>c{AZY5~+RT)*w5iHrC#f=O++DOh;x~M1$yYtkWyx#`px;ef71w7vO
z`P7tO)SHv$ql6@cQ8z}bZ4&Fe&2bfQ+(Z)rx3rPXE)n$>3`}$Eq7GVJlv<R8O`nz6
zzdmtwhdp}m*;*RikjOMAiNg<cA7SBMRa)unC6k~r8iKH7-1pwnH?khyo1X*g)*FTP
z^0@o0yH?U@xq9E-cw8Oq;r6NJfmkh9anA2S%*(x^%38fV0KwPH+CQ(;2YBvAK*CFJ
zy?_6KELK+ipw2;Vm91h;qAbOYGb5ah-=}k8cc5oS)_tgh+a#>>Nx{)g_jE;!ON9lz
zF9I!YBYKlI`0<CJ7}LivFs-)7UbZ`6Rhwajtqcgdr9h^wcBda4>G`NENr?K0g>TwP
zt5%w#wgf9Gy)yUXg_qouHZ@K2bh-F*VA1<quMRb9glJ;}#0VRGrJL4V?ck=TU72t!
zK{t@$l_nHenQR$&*WONw6%s&=y#8m!gB=^dt4Ostrs;~2%`W2VNAA_x`#vx%^eU3W
z^}alg6VrlX$nEx?zyGzHegXzKddg?Hkj54;uSK0kH0%ye>YKKN7vHNT>6~n0r+(%l
zy$wgrSKpN-tH>n}@4s!2wFPtx1Ag1DL!je^y(@kA@*8ix{mxr&yz+)rv%;|hy(>;O
z9OG&@RWnwj9FLGj%fqWEkOsc-pxB!6!P|Z_z!MDsm2|`NbIi>P(pY-SI(=7vRZKa(
z!pEDMx6&a^dlA{4r$Ko9-_p$6hX;qBymHv4`3brQ))7!kjjR|gBJ8lj9JkRSXizJ(
zcJZidkZPtt9la<4GE%+CfZh{gCuISBSNQ&$ep8a?R<FH@pG=cOgx2ggb*Ns&cVD8S
z&p|r5QiR41Hv)}H%*y}f7rYM)D~x+~^~Hd~=>qgqT9}=_Svz8PaJ-`<gVAYP->_82
zP5b&(HHuH`<Bz!awYj2sc>3V2l1cyKZMzX+0j4~CbiY0lZn*JSwC&dA@JiO9eeuor
z?#o?=RFWrnxZB`K_$=I42c7O|+tJ2Cj4d3ui7*!Pwg~(bqj}(8+Wy3AZ@=^IySKma
zMn4OKOjv&y3{t)7am3oVW=Y8Yy~LQ#OD8uJJIRb5luF;j0@TEY3lVCHIPN@gf31WK
z@#xNbckey8|H0k&-u^W9vtBh1yo%L}SD{sJJ4-k1l(mR47y+C47IGV123%{dcI6sp
zq}y31lw`RkU0a!KrO@A`(_8WDx8*^uxWYcT`%ZkXzTLbI_1p-yQq9y7sG(U_+KM}`
zaa?rsPqL2BfunU(8|~GAkmPaYeCeKjZ2cPUYxU-BH}r9?28*Gc4i&JT>~IZ{VM_m+
zJR;B;==5^#Hn&HoI;j}p4gC#)n6KVmA$;`6P7-PrrM)(OB2n{c=)_C6<x#T^WSi_`
zt?NFDqqB?iHasHKM${=>;5eak_5V8Xv&mkBr}yP4!^_`x=fORFeNv9Od-vbPrwU$v
z{jD#&^M$wHc>O{Ahq2>N(|p4~dQ3~_W1@|r6*2*hs&&EPE1RU4-fq{Rw7lHl<Pg@+
z9||Y^2k}ycUN?Th{K5c*&C0>HU{cz^&|YJ1qKSZ6*2E?9(Pj)#$1WZ)MlEv@g@x-B
zM;Ix@fA`=}pKO9qnc~i8`4Dhhzj_q^?P7D-forYB5Dd!)#XWF51_0Esdf6!4(4gj8
z5ard(kJ8SFSsVOlSRNQ4I=f7U@kMz=tq(tBblr<O37euDax=+q!|dL^hnUY70$sm8
zdhjoHj*}6;j}711!?*RbLp7GP`N4kk`&_`Q8N16|x3PueHW6s?pWGu#dMq`kw_klv
zZu;)qE#l9A;kLeUtB15^$&&3Kh~L-dxM=T*s1ea=1*<4NSkP+vW-LfILoYpsQo;?)
z!LJ5+M2!~{?_lC`!A9=`(+%6Z7y+F%(mD$!><k*%MT++6X;&s3*hQw58cVme=;C}4
zz@vxn-wh{dxgzeoc5r;wpJ%=!>9|6)uIi$`cDB>d<Ua$um>l-r=fLipAsagQ;N;2(
zZG6b1-Rj#>!OmfRyr3hP?TEn4vs(u*ejqoxxGi9A*6I$y)&GX*bV9d1R{zxFwqf5h
zuvzC2!|2mwUdAoX3n-+Xb+$#P0=@Y5eD}cG+7%f}k7RG1{sWP{A&oxhH78~z7rmo^
z)b;^VvH)V>Ku}$~!?k_vNvSi}Tj`LdJ^tOOV-pa#NHsnYGwqiSZkt>$60&<>HL{|L
z(Q70q56Hz_fjVimfcduBB{;Osm<bM-BExcdxw<>`pOU&YO0>bLt5?gtcdqG)D{zal
zo0UAZ5!jm5bh&hR$fRjOP<@tP_I+UQrGsU>J_+`~@N{zDK_HHv8CJPLCTPrypML9|
z+wZ>j&RhB_z{{_{eOsU4eKubA)~64$@9xn*r!;ikrw`tF>vc(dM{nK;>g_@;6Tr&n
zj}H3}G|vkF{rUs^(?mh7X`6T0v_r3aY})CpDuRm<v4u~BvsS?EGE0n$`F?+mKc}?C
zy&wMB@H8xD2}u_(dlxO!eREQ+G~*v6t{@lL1yQ>`WP9}Ry%*meUWK-O>xOgzPYKgo
zY{tR~8(jvPtDRcr2I(6h254+x({j1M1G;DQL5{i}vj9x%%@)z=opuj*@UmVNK*+ql
zbh4iiv=+Q<cFED^=fK9o^ad!88jxy<`JjH@*&#kt8^=UK<IqHN<<0lyncJ82a{!MX
zKKS6S+$Qv?gnmHaw%%=iR<B}Np3NZUDy^+t{(~X$?(KYZ>nhpoe#n^n!)Ln6$a`i!
z3)dUirB=o&SQDkqjy5>i^2Y2`v}Tm!5!NK>>Dp8;U0B-d;z=8=)3kDG^`Z_4OF`#*
zx8-Q(TO%VNH)*>$$9|%V^7ik=6asvx0Qu;0-`f8S&=$8=jiRhkS9>wSR#=jvY3&kG
zZ<RFDos0zImNsZTAlIqxS#?cihmgm!mMl!K{fCe4_&qRgQlGeON1v%p2Tzudz3#=0
zw_sRC?R^dmPaB0B8uZ><PyCYq3>t3fb#q_B!rGS5tSk1OlQ=Ja+kKh)J)QqOeMo3i
z(koaF<S#wE`&oGaEinz_AGU6oh#7h-@f)q}hzgoOBW69anYX*%npcC+ucL}RPqTEZ
z0?%DH!ABS-=93Xztf5Tniy+n_>7qxYF|$)roJpm*C&P=QJ1|*l(K!Jh9qxg3-s-!~
zO>E{CVX!g$x^YnkW#8N03r<@V=q5RK4~*+A(iJex_BMh!uJmD}%YbXm)vjD7%|sM-
zZ05pBO;~ueAGao_SP32%-TizY{OWu6{ArHLbTgf~;#kmHRI@m&=vU8yO>3q$3iqU|
zpqa1~<Hreb5Y&+n^QOlTWIAp<b>l7ld>tO1_*eq$D)VGf_5}{Hguz4*(N->+tOv15
z?a`cGVv|dfa$`ERhyOX%;pjEj$(Qe=rY1)Pu8S?;oM|y9Go12(N1eh24rz$MW?c0~
zs}*7NpsW)Pw*$NXbAcBieG%wo&boKy&OjNbA@@yPYlDzYuM~6a{#!$FQOHD!HpBAe
zqPeh9By?!q)(a>b&RM{Vz(f;)uC<FtT@x`t9lLnI7_+oNG_BaPMmeAH)`^j)(|Yl?
zIJj3<8mYc{YX`2i76TntY?po?IJ*j()-5}O@e*{P*1<6xCW0%ky?y)7zklcbcfak8
z_w@#+*C6(d4IvQYULC?VZ`p)Vjp@|TMu8IYXT2$~;gW~`2QtBFI^%yA_4R}IxPkdS
zuoghCjTa+7;-K`RlePI9YhvBPak~>}h!BKTV&lx$i#F<jMvGmglfc3)MlFP#Vx6qF
z=b%%|HzM7{j_=~UXk&NJ*qp&;QhjX;M*QnV*t@6(%9?c5anei*nB^`~v^Ni}5pJuK
z2}Xt&8V$h6zO<3zj&07VflnxWS{`7^6=JsrjcCYw__C=WTJWZUr9JG+JO{Scz2dcX
zg|aw*6TuIOI5Oq~wo|XadtVMtfh|n`H_72^|E&!&mMz8>rOy&#?l}|8NeyW=h)oIK
zJT4c%mB{7Zsr~#;KGThP*)hzsd<*|l<eo*+YAiU}8K=E*=wRZhN<_T1CMjG@9)_X_
zcNE?u2FoSzgEWy#b$93<X|a&TmNfRAY%y)8!*thL=^{Yuj1H{X=+z3s9P^~p+khKc
z(c)$&<pH^vYlhnvi-23&$Yz(|&{}7vId)MeTWsA;0<PIkM8LWXsi8l2^;!RDt3zpM
zphGAB$JFwhIAREf74rExux`ESQJ6+(8wx!K`SLJTTpiy28t>i?-o$6D<94UB#>{aP
zVhMl^We|0#Y$o8{foTV^-Y6^@^Yu$u@y%79{Bj|BMr6sr-qqd;SmU;hjmEgx(CHcx
zOU9bm5MmN&gpm<5%DMF2Gu~Tm(Agd}pB13ow6HXC+Yky@P1n`tq*`g(7;tRMi#O3D
z#WyPv_rO*}Lk_6Sw=Nqa1!B0Of(CQV*G?_3;$)d{U>BKIYQhRadzf;2vfksiIj4pk
zDEec^cH0fOEVJ}bFoCt;H60hY#$4uoU~APA3yw9~dQ9-8`*x7t@=sLqA#m++KY^|x
zsaNouUtS7#yZS#xO@02AL(qc7jC){>>jg4*012w=JHWOOvn8X%sVCwei}!ZNED;#H
zgSRorz3qEo@ZL5~Hk&d+ER#l!ay(Kb5uUD1_K3l9N%+=S$Xe<A-jP_>Tdw;G>1Ef6
zqmPCn=wWiLl`aA@0QR`TYiSghYD|sB4ZUbCY&`g~kZfMZRYX~%uJ&TMjn0x3W@#gv
zT_S2NNH@*VixMCa!Unej)k$wEBF0V{S=YVO`)})qZ*wOJEH!l6>8)E$K70`j%cx7g
z51c(N-V9p*6_)GEUu<&FU2jR=!k5)#Ln)Z}T!K1wjKYaw6u4)Qkj>p97EJ@atzQue
zY<5Y@e+Fcl^viGFe(&!65ANQ%ZNFgPFPz1_M2<x^d=S?8AZ}_tV#bC^ncfEx<lv-<
z4l%RA!`4Qf)@r9uEmZ*5TJzBvV-VYJM|L1*4L2jrNGH^kg!orwV!BiVwKYY^#hz~q
z#^=Bq)-9OIHQz#RqsxG6&DE}4Ce1_?Hb`T_a*etbiN1o_8XqCpxDkj|w@rbDTM02t
zV5+>m;SyD48=nJ5>t;5J^jPPcqJNmf4hO&QYKN`>K|f%=pc9oEQA%$vR?<E@73I^w
z%5>VcLZS8IDY(GOTLLMtm4`B?5B0Zhd@?>w>8`wWN1mwQEi4`9gWE6Hk4~ZU3S1YP
ziIRf{Q(u)u$OPWnmJWO;j3gqX3h7~K41`PI2WetYv443cNH$#UK&Y)wij~M9Lb2gO
zq%m{_dKVXJu(6>R%N3)>){R=dz_B12b+y-+n`k0nerWCDQP)HaP{%GFFvcux5OvGC
zrtpZh%2&v4v5=^dKs+{Y?Z$1b#XyG@+ePmKCv8mz-A_x}JZY963){$}TA?qe>v~Yf
z%IW`auZ#IxsCtzn$LFqc+tM);GH|we&@X8{ypL}d*1UK6D=9X%Kozp|2lr`5<$px<
zYT$w`p<MBDi8~c{Em^m4+)g6Ma*SZwV#bw3i7>SF4!f>m)K<O%j_iKBUN{Gxg|QLo
zrs(ZjQAc^Yc%!`<*4XCKdKFqO(nSJHv#rYl&Wcesx(t-oJGkj-S0)@w&<$jGrQt;M
zVg!Yb;uONZgrT?20@AfN7rh_Cc(9Fp)4<Xm_TJ~fu+TdtT?OI6LaXm^z4%g{6Pym?
z`G^LC=54u>Y^JDeh7Vu}r%2Un3i6cJ3!?78)IFs(I2dksOKvcyr!V^)cL$%xk5Ija
zUx))-=eH{i3ns_P+SVzIG7g<=m@@+0T9XtmaAGrr1HxI4LTIE(-0_B5?Qm;ou}t<&
zfg16IIgUmPB8gmUrOSX_Hvo9LP}7Xi=|1vW{-4=(xamO>ln3Nuu0S0(6%<g*nz(q>
zH4y{U!KKKsLhf4<mIIoIvGW^`*mfys92#TQl-rw{erO<uU|1o)<a6LKq$OV4vK~IL
zpS-&rCj~F$Q7y)cpM2>h_3emx;{m?NBUhK!qLR@Y%qqg>Ts_j%<~-a3s~u7FW|yVg
zDZZ418R?Hu?cTYEM*tf2G-+vHMqQVXZCW*KLmAz0(HTn@F2t!&$Nh;c$B5w3xq~Pg
zy=ViTTkUMGrR%L-LY9s_VYW7cFl%#CEjQ5yZ(Clfv0hu>P$K_R+SnR$AZ)&M*`!MP
zuq_yY=4z*wxyBh`CJY3zflbR?g&RR=-zX1gtD)p@WGbUXLOpCoOK1N%ab;=i0=qzF
z%w^sOZXPut)51rO(LH={_p|)*VT1UGuf3zcYbk$sZ@-D(-Fs2bbr}C<ybz#{TftQj
zdf6&3qT0Hw-2<CpwqL^1``}0Y*MZ&*fx`Oq^q&pgvpa_bqk@SzIGAy#;xY?p#5ZYi
z8Au{B3RsUAESJC!(#78DK7&Is&$nD9v{wUSvD$r%y<=cp-xn?%G<MQ7o}g)?293=&
zW@EciV@x=)-LNql+qP}nw*5}p-(UB=AMV%rv}f)0U_EE=b9DC%DuSbgARus%4~;)%
zps*T_E>*a!;x4qOPxtcs{^w9ifOEm`U&jXI@t^x>4?e-MV(cF2k(wM;>*IJii*pv#
zh%LR07KF2V>Ec!0aFo&@17^~0mg`~UMLM=FNt2J-Pe5qeW0q~fZ{Vi)s6bpd)pWT*
zs-!CO1ctH=@P!io=ju4)=u$#bM2LQob#q;8CSQO#pyo}U2W5k{!zCf38%(Vp{3<tj
zdPgf0a1yY@jLm)G4PVY>m;t1asvXB2DJpjW?iWT*)tO+-SzYxWms!%NF-U@)C~2|n
z@Iow(Wu<b5e5oqJJ$WoH;9D#6!U8-elD{M(vocrJ;GclJ=X<f-Hqs&@6e3$uku?2j
zWoSv5w`eY0-dH)#1z^^q9lf*bw+{Fmid14~J9Ol6Xm#o6{8|BA==$XvksFC7up`y=
z2C_Lo2QBu>{cvw@sRr-`Mj#rRR0_89P3jjw^Jid_$|Rx6tq9}*E4;l~%KjVnhRmVs
zYNF;?0=MXy;|%3=%|k-MIlJb!e_~E9U2=>7HF>#EJQGY{W4aR8(i17AFaA8<kuW%7
zEZB0!NvxlSP3OUd24l`U6s2hw3_8wg!H#*s?>Mrt2cJB?u#J65Gdo%z8};~%m83c7
z@XC-Z1wWI-m+z-d4*cKK!F1|hOh-?vA={~x9XX*QhntxEu1I?TSZP!1wsdg0wW3K}
z)v$dHri3ljU+T#fB*_4_ej-EDWq(&@jBk3*Q)&UY47Tqt*pGD2TQhG`7ePQuV3;Q<
zYcXI-$A33IgtrkCC$X4UOOTzn>O}k{VhcBtIbmJ!+f1}rqhkMcLQk%5rxcUH#8b$U
zsDMvpO{gf_5>roM<3IfPjX;txIoJO!1B+gAjm~Pm{C^Q-k|YBr0J$=+H>`3Q#*)B#
z*Z_%S32Z9QNRgMBODp}Gz>PR@jBOa3FpL-2<FA*Iap=mU9J`c9v|l0q@*++jOp_aH
zUtM={3ORVjV!{$)@GaOzYZ2PpJMyg5;9^ejDR%HW>K0T7A%JT<*pW_`=&Us$s5`JN
zX%*2H!i62K4oLWI_1Wp?7XyVzHw_J_9z2{Z1!a!T_E0b_W+;?tX|K`-{GN>u;nzx<
zDbD@zs$q{kvK>9wRweq;s{Qc?VXqSQ_bf6QY_2|zeYr17ZKNefTJo;-!M6zEv|hW^
zEk)xdUDeAMk)>2xF(o3+%w6E2#^Hcl-OAc5?=>+~^KUmOEeKB^255r--U4bxW=m2>
zL~>95fb8>(a(-q^K@xmOsI~?|;$)fB$PYf`mvb%297{d8#}$FtW?ex6gP(re+w?<i
z#T*_Ao@xviPG9p$T)A(i@|-uH_bK}3D>>&Trw#R&H~a8lF^aSD6V`-<wIikLSC<n!
z)4M|WK_$b`Bz!i|npph}la<A!(<50$7B@WkQC!`NHe$@z6aS3>$>jD(EBF%i&vY^D
zi{6lqfKp&Ezu$O*ifo0%COS|$@&qTJ2!s?$S3D}Mr|KCZYh&oqz5De&ov2`Ar?4j0
zTS)6D!AXBuk?%74?L?3{X=uDn!r51ZFRMGP+mKK77UHwH1w@}uP#$rDUshfU7$)!I
zLo8>ygHR$^(n$dFa!77>-#;?P1dLkMKpu-l3TcaKo*<mAo$kKe@?~Wtv>61kO_uAl
zDu_+?a(yb|yq3`E3$)qWnnUd*wTsQ}C5)74--<5Z0VoN$Fry;|ka5$o_x~1mNX~Qh
zC7(3FtC(arT%Ao<=y>K<E*iqWRCsSo;!F09L5VJ~Nr_g~CBVy&#2B5Du}iuhlgC(!
z!KZ_tK1Uk+opsEM{EDE^OlbNi7~4^(ErbLZl&O%J5sc@h>6epRQL5dUS#uPzw}J=;
z<7&GS@n7%^2_TBO43$d@XuIz$a&rz}o?k9KWo;mt{M?V!chx?!Vaw@Vqi?(;qa!1&
zCpQ}!Tg?ULC5I*0T6G#9kB{EPria`dN^@q>)xUYW@#3!5vjdOuGiWka-Um42y0O!m
z^wq?Nu1pZEM@&Z)5BTjP^|6>_mKd|2aFTeYD7+YXp_=9`CgEtbw~T*XuO0^yOCO&-
z+{eftErdTx*C<)>r>4y25ZP89Tb{L_2>|Sre)s{DX`i5BY}L)mn_Vk_%!Xh4^S-DM
zVILA~gymmM@m+joM~pY|(T?bs`^x+={F79bab4b_Rue)UOrVgCQgOu~Mx770p2Wwy
zUQ&xl2!V1))Bptg52`63%4wSGF<QRbn>K%9x63hq;>HvInst0>B8i1E84tfF6S~Gn
z;L@oiX2*ah8JQ8XJkj9$$*GJn8u*}G4pJD=Xw~<=w%9cJkws8>17y;Q6q$`SlCW7X
znW@k<i=LvKNpiNr5TN;{z3i8Rm(B)ArH@?{{_<7isKgxLOB=q;KDL4mcTih(aHjjx
z^;8Ucyu#6D4Vdp3Dq=+@sj7<gJl-Xva~+3Z_IpKe2nRUwGyjA~<<N~4WyT1O*&J!@
zM``KqfXKgljLeeGyChw<v)j-_;{~ma_w{8-Y)RAcKChxl$jgcEp+jy?viP2~8ag$Q
zWmD_Id>BxrEoBg*P%45pVe)|yV}?l9o6QH`F+yjf`r>B1R|#PdU+S?cfoqX$Ss*FY
ze8t3oF;v(t{*%SDFt<Tr=;`G_yI$MyQ?)N{{rA#*3k&^7nt}WCq2;l7&5iyC={Z#q
zHXt_Ra@u=X7%fu8cTG0GrD2q7FhdP@-Q=y8|87kwx<dhWU_|EXPw-1o$!B0M>2$Uw
zCv-oJ9VJ9di}_t%W9Jh;t*#+a#L;Oq+MTs$?Suak_jxA4SyS`8)ge}zu6t*b9NMVR
z*N;EZ-;Oax2s4dU(OG-BGriv>42{a5EgOT>OwZUZkLbtSRn8L2D3@|O8KcT0j1r)F
z$pN7brWqLFs6{RVR|V@gY(Bvpp}bXf$r>Yvct4*pcaQl|PE8ep%&{ebVt}#{o$GlI
z;!ARQZ=nuD*VUXFmA=p$VdK5%k_Wt5{=k;^f1t7%Ef%O{CQz?%cc{6ZUs{Q?p|6s>
z<&{jXv81QjT*KqIwh0xYZ0S@Rg@m@mYtcSXM788uaP@q8sTA;;wz#xg`~#j9xdu&;
z%nsYK-9S;z(l^W7I+mdQN+`G}e<JC+H=R;J#TKE3c?kOTj=t_^Or;8f@4Gb_$ut5O
z_<?*Gt}tXlD3E^6@stP+j*^@}ap?Txp6u>(02~8vf$2Bhnz5>^lyLSoodC94!dm(E
zOmSW{`$M3?Ps%v0lp}sZs0tgRUs!Sof!Jb@Q*QD^98<xv{BK(QK2Wli)hBdiHUJ75
z=u6bKny0p8055XIt6R(jgj{d^c)1?u0(ho+2}RQbU_xRf1VxMQ!LVvPNf#mJ0zICI
z5ZAx>*PIqqk2fTJ$-3s5WJ#xu$nO`VPWLZ@`u4>;U>m#np=MM>ge^@?)i~MCckoWy
z4+aBKqyv>?DFO)rKPd&DS?m(<hQ11m*@X7gTJfcNq;<*`P8jH=Y5rNVOZ%p)@*BqP
zK<|69LMJNN26fehbO+?`{r~1MPH%(?yYJ(BI+A;~w<!a+h<^PFH;EK`c}xa4wC<Og
z8(7U|N~zD|zAl$;%o2*kP$$QCc0Yn$2aHy?{KYW~4KRZNL`zq#8#t$=PkK#Ld>nPB
zx6r`#VAjpyp(r|PvBp74C>rD~W&Zb>MifLOdJ|;zjyoTcrnBtfnvbp*EL(h69wn-^
zQQs+f{v_=3g@>%P2(pJ|I70N3MPvFJ@yWtWYC4WSgJOAyl&2QD0^Lo2k=QcytD}3y
zd^)mDkiJ%aK=&qHb+%gNqJl8U@IzVT?}>y`b$f%b-VbXw(g>^ZpGm7|AkfJPLK;ZG
z+;)sgtvy43Ts_m^IzXp&iOszT%dX3E7#>fsg}Hm$Z5(~Lq?_UsK^G|JVz(o6AkVo>
zs?q2u#>HEAx=O_Pu!fG5i=YmPX*eyat7s6*bMm&4kTOFcc>VI?Trtc>_THVS1K@Pp
zQ?rM!l{L_Y+>aH|jz?>p1{{u!7LG!v7L<|tVoG8BFU5gGKT?J04I{5lfNBVnPX|e%
z$3&j2gW%q!eQASKvup1dY4yt|vkgJFrhvhMEMzMzo>AN9>Ce0C{DFO1P|JVCiSPEN
z0hQ{DeUJzryH?zxJ>41-aASo>pNfdAXClvR+5L7#)Hpi&2Vyyx)+8+(_nP%x#ajYs
zYQ5N8Y+O@=zG+3`O6#eZMvw%g&BJg(hEI;qiox+GA^12U82wJ@4}3vNRXNpKzfC7z
zKM?%x0zoLb+S=9t1)?cd#K<k+oJ6m^`r44Vz?=cYo4pVEVLDiBO&z&gn3?FJ`}8rE
zfzZuM;7bW%o_yOBm#Dt#75-LY|MA@eD(MgMy~>Yo3qJ-YeTj)s*~>sK@z3`X?d(?-
z_UT5E$S(f9V<PUpVIF>QK%<Qzd~jYgae(?1=EQZ4Fj~r|xAdedS|IxY@wzxB5_kLq
zslo}Sg_{qXHeQLIMX5y>+Dd|Dg+dYRc*?HFH9n!xoY#fADo!Dp_q&ceF(_lLX0RAN
zw%qFIP~Z^Xk@A9H#<t`Qu}MuiH|L8Cng6gC_Zz?7Z>mSdWO&rx>yIEk(V^jepx8Yb
z`NW7w-x+3^PTL^OTKm<{^6niz9i$qkx&?I}Z~a;9!g1|EF_&f2+=+X?3WHxCnF{Hb
z-xcpDKRb&f<Ua(O<k74umpQwm5{cz}=eytQt2Nl^qR}>*d9N5?imJP*BIAMD_zX}X
z_}br1ZSBjUq|}N%F6a|x;a=#FcQo1!D+6e9i&oZ%l1Ju>$Mn=<#_Z??1_6fqVB-04
zN@U^E!uW}xo%g4vM6))bnjO!6^N#U3BAvkE@pl^MwToiXeSxR(P^6Jn-c^AtH4My1
z=%vn(at2#CvU-I%fO1;-+pWoDG{G5-tJ&WYS$GV{uFxM@kE2g>e})UkCk8Qssc6N1
zr6ZhpW0&uF*ZXEsZl+Y2@<iIKec2R_B`$t;tb=66yNJh5z-3!Oi0SOexmG$ac-ii<
z!<t3o<h-agyba*{Imv4n0%e5ivxoeYVthVnpC{Qncs~>Lkbs#J2go?<4hV|y<?MOJ
zp^geotYX7mB|YDueEfD@6_{^aOBqhSC(pE(j*|8WeDm6UCKxDcX^-NjjOj1~5Z5EE
z4)v1cnJfaLQ4k@<QPYCj?d1KGT##W<3=LR^rkOKbHPh?5P@C`Yx@$(k0fYce;>Q3Y
zCi@8#k(%WjV<KyJ`~o5O#|h%)PHiWhI!J^c?~xc8d%lOk!i{GQ#+j#j<{7vSjE>qi
zR396VaJ8eb@p?&k?_iV!2%iOn?`cdX;0J+EjEPP*5O^#;$?aA$e%oDBff4Fg=_B{B
zaEgZGA_%hXzy@z(SCtunT}t3Bf-b4AVw-`>p4eDL6jVs>H-tu6yH>l&dslsVs+gDY
z@MT?oiXI@5N!Y!yQjO2PJ+|Y#L$(hRMtkYzeQwOEF)l}kBnEl#f?Cwo)&N}2xEr9w
z&+G%|*XvM7TR=`BKp5-Qz8YJI!dzJ&Zo2@8DQ^3GgX8v@20MU6S1p=R;Jve$isT@R
zix814<0pQbrwQpnGM8pKV<TP8t?9|O3Svg;VoFJRq&zuhUV39z?o9pW{y4mTE9Ols
z&|l!Q5*<QDCY&|MNa(ZG(Peudbfy}ut?WM(d5Nk7%39sx#~=u?I2nl3;^-IHJ7BUZ
z)>-rp53^{xNO=IAw?f}M?}Cq-bg~>~F$Bqh(qSO;FEsXaCE3PXKVFJQi5|U?QbTgp
zP|*XyDxnZSK1UJ<Ek%A&mfw}Ebevy*myBN$AdZ(KUJqeky{Hg&?7F$06>MnV=_bAg
zaIjgUU^}>q>R2?9BA4X&iXt{322`@SdL__7B-YU*wYuU0h)t~$;f?uK>@mt_JvYQ=
zPpq^KT=l$Trx7<;VW5tamxfb;0<6aG!`<Wg-kK%Pfu$j~JHvQ5{W+J9V!s(O;RAdw
zG(S>3jLwQdVj__v2wi>{l+nV=%eGlR`|vKs*O~ri)?B3K`8Hj@xu~ONBAn;;J&3Uz
z0xj-+L7ez<!Gi>D@#GBl8#s}UUNWhP4s&YLbov!;X7Esj?uceL$XQ=k@J6nF3KbTk
z$%Z_ioM@G3a{M9NCKI&hd6F`7_r>nK*W8}O1-?L+^lc&MfFN0%&j81k25SG{uj~$X
z5yfqoi29!?M&s&N-!np#z3Kedu<5m0!__(RbK)UTBrr=F_&CqIX%Pf4XrWD*G3_mu
zZFck*{N{sb<c`X?EbBgt5Tk6ch(zQNBEWoGr)nJ;h0)y1{}2TIe6b?<fLUz2``mLz
zLtV+)CrzjAc&Vk?PUz|R>+mBWk@)#G#RX(HV@^^nev;~m!Ot|R;G<<?xJzjMj|P5#
z4Cv1xQ59bE<;0@pC7mPPw^c)fm*xa>Dm1IzM5xHkr5JRHEUex6?9oE$eq}PVfsS-M
z=V!uR+z)*+k`mIQYF+#DrN%$kj@gKoc-+b5rNfP#yCwLx8<3DU*u!$v1&<b1=qKAj
z4SM=&8lEYd)M5<KOJkwH#Ty3DT|e9sL69en+|!x=$q+CQcVL+bVYCC;xh<$0pqIhR
z%+C0WX|G=)*C>dBeu;BM=~uKj7sF#$RB*HFz^Qjdltdih;p}>!N<sPX=mz}q8#(K@
zVZ?5$aBRd*O^9ZpfZo46OMbZid5`u7aFxR@L}(s&c<C-Ji_ilb+0RjkmLN~Qy;$wy
zi_oCd)^1O;o$i6_`7a+JKVIzKJ6+3|=&nsV((u}#^wYH5)}L4(-=cp#2M8<l6&Hjl
zm5AJI*sVdY>94*|Xx39qO5$c8PG`xgU+E%RVrcd~u0(&LD?;pq>PD6XEIHo1@3||s
zGN<fD!J33U04Wl#e9(iEs``%UmC5#PbiPwaM?oG@3$?NXbB5COCE=#JifH>6a(~3Z
zqUTum2jm9Fy>{qFxf@*7p6%k)X^hqztWWiJHfLiG`%0mNVSHN5mAT|~*TzEU433CX
z$!T9Ju0ABy_-OJ9wD|4t^9u{a{bG@=bM<O_+p?u@tV1PX21(FPPdmi42cgO7^ad?&
zzsaPjXs?bXGOo-giLu~~pvNHC=}=M>n!Jgj`uV<ABWJRJi0Ai#(85U%t6LXmAm9bE
zMQV*4|ClP=qV}kmc*%C9iSK!h=<4G&tV~Ew91EqKY#p`~Iz$2Pp$9#Iw5!)Kc(Y5s
zD5hvQ-VWEJS?d9%Bqq&@q7YZk>)X4|Y3zbhlI^<Q(MI!e)^CM1xVxUXIohhv;3JJI
zh;MNMSIdKILvp5ibX_?UJHjn`w8IsX#p&0lkZSe`PCe`_FY%FyXnvG`k$)rnI+P!w
z9)2_WD*6;zfqGU1eBNDtIBvKR0WLXvqrxO`4G4K;IZ#5!uea5VhO|v}slCq&d-7WJ
zlL<NaWZKD;ci$BScY5?PRP(ahbF<{W!UJ6KY>C6Wm{paPwG9j;a`Ujre{&=sPBKSA
z02`hiVR3I<y%Mf_6Xcla_A<o1^*Op@FYLJXB(kUA%}O01-}MCXn)K)6XG$u|5aGUM
zBG|5Yo4Ul4of7HsYLu?l82)6L?I@%hXX?ib{>3sa#YW?-urQ1ICx3hUsS8^p9=^fh
zpyDK5Y*8uPjOcT)UOuhrUp?1^i8a-^Z9a2Zp33;EDAGM~0(E!{{B^^Zie+Sy*8MVx
zXUfL7qN245^{w~Xg=)^?wr?*B*!4%reS${iu_EUY5-Q)l4wb^H5MM^c7iCY*iHq6p
zDB`Ti_nC%|9zGPde@yY_Z6hIjs)zO_F_fhHIzL`8<#!o##2)3~13H5f;d5La(@!49
z2_tqtwP-3CV`V67+L%=ppLWSIpz_|$9ZI4}ii1?R@ORtO^k;+N#+kJQ6)vYaJv`w$
zXh%M;zrSL1&UsEJ8gkhP<#WuHCTZy^8p)%e2w!n0C<$nO$dqks7#H45@cJ}pH6U{b
zhg9tbmbwr5JCl5CmdsNHyF|bhmzSs63hl2f?oBt3eVIMCFq=^lI0tuaHI0k#?}h+^
zlSRLNp{C&=0&q*!Ph1Ykq-QzlYU}g)TyGxzF&ILgP8L0}VyBd307WyxsPw>zC)dsc
zxrO~gm%}h;I4|2TT?k=*kr(iif5btz0lH!G0~y3)uM;@e0L&QObBEf?h7lLCi5BnR
zUc=)frs|-N(THS-k3%jC&}sr(8cqw84?fLf%ymhGUl3PAbk_t<0UAbH3I<SXGPW&@
z0iU~|svyll;GDsbH`P^G4p=UIpl;Fd#QJ!hQ{0hAd{D$T`xwL?3=SHeCtOZ7xhNVo
za@?LLrAjT>DS4a2wX=8E(heV`qjEn|qiZ-!gw}8;X`gl;F8JxK(s(AH4z@U+_tL(&
zT`ZwZyC5|MX|0av*<o?l--(2u$|TTDB?eKKxbZo(EVEjv{?cPDe#@<)aPLg-Vz+U`
z*SPZx2grSJYEmy2vK`r2ge~0o+E_7@mXdkTXAQ^8;e`91;nXh?u<3%DTk%!|obqe{
zr^FqfE*Z_L;IqLFf<kEL)j_x+jEuAn#*bRmUU|-^KD)v5$z3fH^07C6%%_e`G|r{4
zVu;VMl$@eMZA9^n9hQZIxk;Rdl}4Q7%yDG(T&v+M)%@N+#c_Gda|JahX5tz0@zqVp
zPzkW`eWtaC;Z8s1=5t#0d^o9lxUP>*5<1@n--~zIE$ayn4<~lNY<t*mR<N`NS%tU@
z^r%~w-eDiKO{u!?-BQ%dG_nycRV=T^o;A=BCI*MEew2k%<;uLe#@wASfnm%L)NFBF
zSf)7vlNV4>24$(^hP$7p2Hq%dhDa-m4e*pkr#)#q`qhA5i`(f@%k8SG3a>)>s%|S8
zO!_@f;k!plMZm{iH{jx#RdP8<rX8jCR7AcR!3?$2eH}IAVqeSheAiPAg^`#AssA)W
zJXgflpU>SC1*WG}7UB&Hy2Dw#oknH3Mson&6t|hiU1r1CLP<Gj88M05p+<{-LUl<f
ziyRjj{N$4LTaJ%N40ocX;qCUpE-F#U;rFB9-jEdB;xN0rV6+R0&Lmumu21qjsAFLO
z*t!;6Tn>56%gn^%`#$}iD(aEk4Uv-)GcjK_z>>p?e$QlCMN|~{r>3j!hsuFvy0&fQ
z=rwxlgCB(jFBH${!a|`V4fP0*{3|G$Mma+JQXM~G3zc?^hi3nl$}89f4yLpU{q1D-
zabCeCFOMhTY(oi6F)ybx)}rV7yWOn>z}fpRCx|`Qw~m@kW?UL)ZPwd&jrYgE)peZk
zGlS_~7bg;xNH}S4wY;bvi>p+3o2V}t?`ola9slNGzpF-pI+%vh=CTc&klRWa*gA1^
zi^1Y?rt$oK-Iv(!6?1T3100qvb1?k_9@7Y0#;;fS&Z1&8iO87z9BQK`MWVPKEKMsy
zW>uIL?ut`A*8;{y&-8IpWE~H*c0SQn`Mb9^oQ~1n@PwJ6)sU~y&}%zCVx;_Nx`IvA
zE-PBjTE1FMS84q2>%7;#WWQS{Vg7AFD12NDN+qX145WePaWnj>+>#Qu_=|l?A8)e!
z>=guG(?<F!fU;m`hwiCsb1?-9f37Xo@|>;BQOvAB!jS=huFgY*c8A;=ZgpTj{)EPT
zJF@6$<_GuEAl>)UT(Eqb3lW|nQAS66-SyZz@-Sub-;&qtios)-nzK9R#{TJvnSGva
zc}8D>PEaFmap{KlbiyCteA?V_k}KnEYwhQLOIs;uB2u&H^pg3^!O<+yc#thp7haV}
z6o`V>Go!B|bIW5tBykY`@vC~-_}AgHV9!k@7+VkUTl+#vkWXDNIyCJcm0G=Ph?lG`
zg`N|Y9f3XMY<Vs)R+h?vd&-2uCQ<3PjRh{PSsTQ=V|w8OwsD=OHfaI9c*~A<G$0i=
zrFZO$@U@sK@k==sNDY9Pt9nIZoCF8yiS@g)?M9|AEQ}}bZeW&(_Ib$o1g)$WJW7A`
z(4=rXVrkEWS=3%oTtPOa1b`8Qymq_he^7ay1FZx>GVXD!L-#nExHIgjv*>{5WK@HX
z&NoW_C-QLw!G3=SA$Ni~TAPY(e$VVNo|161TkQhi-G=*Fj^qfphnAY46*bcyU3jfy
z3+J{VHzP#!?m6OU6Uu!ZO1)t&a`v=f279pNvyR%=gHyZSns&Rvcmt7G>t0mb;@q1V
zw&j5w*|-lW+Pvx5fEEHOH^z->>O86Q)GCtYSMacKMHIM<k@eKvwb}xa=cv42C!2uR
zN$en9Vt#H-?ICDgTw#Z*XzRhve8!esYxLcb2HvtBSjnig;_y<ikIHXUa%NC!mfTjL
z(ReOTW!%p*xh&fjtcxp-Ok1E`lnph`nw?b(Zk8Ssuw0%fPFk^R5C`Y7;v>285=72l
zK5rkF-PM;pt)@Jjv}n5%N6Kt)+-L8tRdc&8IKT;`N`b!zGLKf3PWY?S@R@MX1{IpU
z{)oc<YTBOwL@ys+re*6Ml=F4s_0bOTQ)$al>wdj*+tAXX=#Sgqc=RdU&SoRUDm`b@
zT*vooOTe`i7WwZBN;pWX@u5&#k{EzhI;WWRyQwJDwQ*m6r1ny*k9AC%`%VGkjGv!^
z%8NN8%J7{9Hcu@fjLjCQO5mP#-ic%O_wk<&&C&w-d{Sv_&$ZS)=3AA$2u@KoX0P6!
zyXEet6nOB7ao3++H=Mle38BqkJCA5SQqY$%Szhl>*K@66wiB(dpKVknWp6p+N^=Os
z1EDv9rraGn-CJ<9XT6`JUTx*oyC8nSp)&EZY6shMeIi++rF&!hou_cZjbA-s;l$G;
z7>~6YQQf?-6JW}TV+dpv$G^on9N5|=pQq#TYgrYhGTM400^WXiH4GDOMSN@U+<Tjs
z1|rGde@&<w+oiz4P05J>GfFWeM%N#RrP}#ASEab0EA3o@|D3D{cHc%1ar4PA!L$nj
z=es@vg$cQ+T55Q};RTkT5w<2*>)NOiF17AQZBJ+Kp%Ti2eCRsokHTF%ck55NyupvR
zo~gW#yYJC>JO;cnuEUDSA~O?DoZi9#Hdrv+yxqQ@NuNqy?<KVt=bRqJo%VUxEM34a
zw`g+Kg)lvx!MV#)U|;+4OfRijKibu3<<&}Sdb7-}efVLR!20_&FS+v%*C+IwhJDWC
zVi+u`d&giDXG4Lv!e=AcvSzVzZhthBn5h3E@4<0T{qgT($pxa>EIN$3vu?OjbO3`A
z%%Nuge%Z{<WynTpVwi=CicC0c-^|8Vi*2i_DtHQ8@TSbqjC@bHbYH5x$=rm}H7Z2T
z>YDQz4`jXV&q>^G0dB<So;=0lH^h?k+^!=-^(ZgN;IRE7^8HUNco8&%&$u|Bc8D&8
zA;$HGl=beh4K?kxw#&sdoRi%3-8(|r7Oht@?e`}?c$#grZ=fx*@J*k}kzg+R@=a<)
z-C)8^!Y(7EjPs6xDf(?fktYLA$IMjlLbOSw2uLB0q1wT2gQw?KdzhpPI+#Z6W&wPE
z>DSkCJgJ;Jx+Ly(#KE(YMbClnUx&&V<L4?4v_EeM@YHA0t#FPwT3anVif132ac^>-
zf&i-*mFxn4g0Yz=WY>wYWXH^J1ykQ`?7HPLk~L~CL|ZsUbnS<h?o^0$K43fd_MI&$
z26GmjqqX?*)*p@4S3ausn4ngV$rF>5twjkJ_V{Q=(-rtT4!GI#PGWw_?Fo{&UC#t=
zBs0^PM)_WiXih+wx-1y!uy16#lxyS1b_6wf|L`H<nRfk<tt~gLxMTRq6#V>W`K9@+
zTiv4hLVz#PURN(X#^twGZ>_ll5Ash=%BQ7@k8zfxlih+|`x?F$*bYrSSaDbU@xgm%
zXw#<e6p}O?;cM~}EgH8-DP7H46(c&ILWC-Cj~0n)k%ekAY+SR&6H`4^qn5Zn5wt7G
zUD(6gnn5-y@kYoalyF~6uJ-10IlXN;UCY!4KzNQVPOBvwv1-&chG^!08XH5obL%=Z
z>QVte*_lKNpm;ptA|8p9KdUvFiM^Ux*4QF`p}P#NStb4zX<hDZUig=aX0(o{n|5}K
zMXJ;(9M9I6-O+(X&Mcg-`S3~Y1?qF+%B?D{$XfiB)>Ex#!IW9bOop`@k34@9hS#Oa
zMNB;CtEzHxoUIa-_1PI50CZW_W6BiqaFtbl#eS!6-7LAb7K2?^mjYBW^sVZItn#Gs
z#Gb7ox*dy?Q|WLa8MJX7l0^x5+PoFH8hZ*8IeX$^6t%@@2I>V0w^LV$N{$Ha?GmcN
zmhHN)q9Vi5mi)Xmc~Yqzgq99F6A9w1vXc&!6|F?Lpl3d=yICe)3FT9#^1R8k;W^A*
zZd`T(x<yY7RXT@B>m6>kpB*W>T^#W}p7Go)Ut|(L#kVw9V~3O0!s*jmUevD$>f3h{
zSh%9MnBq)GSO4mn<iaH2H34NQJvfRk+*&VzlKBe>X9^}Vmyc(3^U-?3iQ^m|Z{Od%
z$iB>D0fRE_FQl$?@3t3?@5h?1YVUIBM0amu=S}C;!X-@8|GSUiZ0z~qq$fApc^~gT
zXe-S{^?(B6QWGtx8W2i^4B7a6^oRoROE{bZp-rKcGwM;xV#Rc4<X@}xqmO|Jz^<U#
zc(RN7*wBDcix{lt6MW|(vk`k9-zX69(r%;^=54g<x@oAQ%q391446zbNE$fU3hj=}
zEvUf<U&~G5=V+T8GN<OOKkB(X(0?ZW3?7q4!!0+8x`cQ}z`0P!$#vzoqR97AxCK<w
z(#LgY$8f|O;U;Hu;w^5-@@Kf;PNeC1Ks`gXB{6F-nS$55LqtSNt_QR=>wdsfi?<Vm
zKlG)V-h%;mji+H5bvL%T%bT1{Jt{9JY-QuRbHta|@NW5v!O7;V?BVJKryz`t?keAx
zFE+O<o`?^8sCR{@M60C02r-vUFaluKj5+a#zJE2~9KI3Y<HtihK;UTJfxF?k?9B}4
zd!Budw(LUjth@XOT2<2>vg0@ZguJ@0I^e50;>FSk*ZwKddy2d;O`&Evb&`S_lS=E2
zZeZolcY$R|7uchtfJfp+=s1_#>a!lUf<cHG$)%a|wQ?Rg4(+H)P7_Oa55BcAX8WhL
z6U=?3@hnA~8E-`|rZUso@csFbpt6LWGLad7^do9|5Os<WofaqPFcR*#Zi4OkNqsjn
zQ~l(*Pbi${*>Q^7aYYk&>n^V|0ktrwzYn&Isdj+dtkh|gXF%iaoWdwvjkL!`Jy(gh
zW}Y+7O>2>BULoiLY@{bQuDN{hHL}oNcDKC=O3~oIpP`oj7wm|7r*6JNcXxPx<*Eya
zTP~Nt0W_UlyKrd5G_|iuO1;)%^)qy)m+#+FFzp5@W^gYPoF3*6D{A~k43FC)C+z0A
za$VNFb3fl{Em!rttNwOGZkx>Qz{lTY6+$M{m43VQrun5Ur}}Xms{}zr)zI=z%<ZSv
zj>=N7mFVRNa_*hGWuVc-LvAtnn^qkkRrXvGZ@!$YyNPP<+tWALtwp+=R(mC?xfJ4r
zaUMP%NV&oUr5;wAQ2eV9l|Te5n-ljJh8DEnUu+y@Zx!vDxT4NJPwRHPke$LF-ue-o
z6wBxja;$n5tuRFH;dKbio574PwEs)ChA$#~JVxTHF`pC_ll9oC_T6loM5lCtAN)*q
z+y4JGxS+}lLloa~3=x?2q_v%jXEkidYrNz|>F2)XbB62A%QUkvMIlMyw&_{A;k!M3
zAI|+a`o!11vLAbv-#WE6kcqr9S7`aU+|%?*tT*d6Ze9FKXtAWl#|PEVeo|HdirT!U
zTPt|eeU!Z>;9?MP;;tYiv*D77Q98ToCX)PNFjGfFuY)2qjz-N5zo$j@J061h5^U~?
zfPQY*K>w3Hp(QxXgM49!i0wOgv>fs?VW|kNfA>EUWGpJ56kdv~_g1stO|!OK8JFqk
zkJ=D&f7ekcE%m$Mk2kb^^8*Guy6|992estp6hl)$eZ-vL<~MdzQ#sVjwbAMi|7wSy
zs=F~NOa|nNxXVy$RhQ#u?{79ww49Fa54!4wtNFOpUD|#*)1R!cEjp&gTE|u>k5HSj
z;N>f&iyU?N3n_TBnfLUB^E^fop951*ry;PcixGE3ejYM~d%ZUJrSo19!J(@+>TKOS
z2^_5<IoR;ZTBcgw#LY0sAi5u)8%Clc%3A)9x)!rzLMiDNl%{~+N=o+ovz8FrcT-b+
zQb^eH5<Fb&Pland=-=lEkt@=?Fd;s|MXrC<h&d~L1vBB-7bc(%nMpD_5)1AFY+fS2
zX2;D%2mZ3+imQa%Xy?Phdk__K@J!Iv<C!}xumk#nuv4sm4hwSUjiDKvc*IE;oRE#~
zB-fsEUES%d%yDkhQY101A+K~zDEXWb0OnN)_U^_Th(f$*<l}iWjq42Pc^o^4!iVOg
z%@c~qtB_BqApc{fNR)3flF`{`Ns(wnk;w=C!6JF?aNDmLFfm1%IimTfvWn!Yst5!Y
zFO!of?NCoE2w)EMchr6^itia}TRAb(IqsZuV2<_0-%ankR6mcPOW}Ur$jn>-UA78^
z^Ip&Dhd*9EH&`~EU8gDp*_V3{Y1ZHDW)mDA9MqI64*vaX@f{CoGfC=aZ4scW3$!k2
zamQ8GN8NY(jX8IWX72;nYY`p5wsHI-t7h3=g;prT)_K=VL6v+q3yH4?jch<;yU0?B
zN-`uQ$XVRu-%?N1t0LvH=hNDTYNQK+oa3RohwscFFHdkQZlxu22)4}sbRff^7ozy8
zEWhbV%sE*x{zUc<wwO3x8ECZU5fH4F5Q#%_+bmG0i*pFjy%IG;i)UF#&;1<mylIL(
zf^7nPVSBlqC`2yNC5(V)r=aX0OzK7$uEQZl{#61ZbU7RU46>KLAkT@L<M?Ti>h$){
zOm)+h8H+t%UFFw(kKHucG;e6@itPJ?YX5(?rUbj@b@8gAd7~*z2iT}a;1<(`fD8Yx
z4om;ISHVy(jk1mCU27_-K0PwSXc2f3>aV`acW1jADXVG>L1Qw<n+Y0hXjT|2ktwO`
zXZ=R8rT-YGX3kO%pCkT81BSV<%_M0x`+D7*^kRx0&qC3+|K89cjQrnKw>`^>g>;Zc
za~lw$o*-N-8#EL$kw?VCxr&C^E8C{|JLAzml-ae1yR58HznQlIeHvxyNifM_eFtl0
z73PQ3kn(=!6aZiGBPGsGK^DpbimWU6^j1k@LQsvo+om|zni=hR<pfod?>M_!j$7GB
zv)-z3Ma=kMruj>2k)W*={z0eHnLM~V?)GcGMezURdI=K8?6SuGQ_PkeE~~j*hdDyx
z0?EAI+T5HsqTwvs;HV<ne#!|i7=QdN8f$>aZz;BbUss6w*~#-NqO!@}J;))5@23AO
zDoi%2)C+T|1_b-D;_9L*#AV%eW9{8-4Ii`-S7jB}2n+=@@=$Np5dT+KfELFb<uQWZ
zqr&Hq|Li#7w$Jur5Srhha!X2#SriqQ_IGn~9{zvUx3ezs+Obz8-ES&I4ZroY+0Mz%
zQ~L%+%E`$f{Kq(4l;4aac)R%*L<A(5hs?;zScQRC>fw241}hAM^cRQ}1*)<Fd5bUG
zsh(oG{Aw$<7#(TX$gugp!4`e>nG5jNd_$jpP!h4j3>S_ZY8auP0j`JRbJ<2)#KDp$
z-mTL|j;6uk$p0*@C60^XDc3<SEL<^Pft<VXzf0$-(WJD92?fVxK$<1!GW>hQqvKb?
zd}~bZa2~fdVna$h{xY;~>`<HO&oa1v&Y%6*u+~%Y)q`-Z_%}Wo-dv|In?|eIDW-=U
zR$}kP7H+FKT#=W8x;RKMtO~~d8zY)3$xI)1Ug7Z@j<WbKBWt+k8G0m72(6q)_W!<C
zYWP8Eo~iVe=L5fU;hnf-OGaS<szG6PlO5FR;`4W1{vV+;gbR}1^D4NlZCbRxnlid5
zC!P!g+dA=JX@Owi2zX1so_{o_IWohrS-1Xaa`mNbq_tw$x^diiGzhDYwRzh&xxtTv
z3631m!f(kcg~PU*+*}=tDMTdUZH5BHNK3}gFV-4=x%FfVRgxiJleMRZTAmt{?*D-7
z3XXZHWu&hH;t^Ga)|ypz_A3HT<2~it{wWuRDW;Na#sfH#eAvV9=CN)*vqE}=1D_6@
z;=v&dHB5)qAMupH7n|?y(TbR(tWX?;4D_(|VnjX%-`lpJ;l*Xte)^ssryNgT!TOU!
z$G7~CfW4MW)b1}pqxO&5HCUso#dX*B|95p-!?r(t+M2r*;VZMgsnq)c1}9&qW7KP8
zszYbQzYVryt4M?$-T%at>RF=yw!k<A7VyaD09U+h539fOcVRO@%#Wk9vVJ(9#REND
z`evml9`RMP!Q{c6XRZnVi34(+^(T4I2K6jBRTCTOnmIT0-CmRZm}#u}$zGx12e{R;
z6$~^c<)MD}u+lL+iH^7CCdHMdkq%j}kRjzU2mDGGv@QJQ09I20dsF}u1GUPZ;j5fO
zP|9ng*vCE@fACMMvHn`B{V>c1u<$&&0jBGMLesPZ8!5*ar{=#qG&+E8aao(qk5`(Y
zflxpG*3DVTc)Tk3<&Mj$ZFn!;@(zr}Dw%`<zj0Pm#XrmGrPp9@wz9c9$BHvUf1YL!
z#54TlZ=-ds#i?6rX^o93R}p%KzmG61M}UOD5V3SoS9-u<^S9FsSdgeGA^9P}N{=2Z
zI&j{xt&gvY_KddZ8Th-1RJLJQ=aB0!4%8yA=~p~Cr0k^YvHxfUkC}Y|LPYg{q4Je5
zXqcHaK-=$QsKQL+hR(|Rql0|>Z(jLU0w;|A<?${~+vTZ$@1W%AdS-;zy6r_zH0b*o
zF6fV*GtAcX3R3%CN2``tv4iyv2_fIMG-p8Wz&T9gb&f6PP#J1R6t`P>Vmc-Hd>Haa
zFIJw}${37{x}|fANEL*5re?pd{uKUMeP(XEvO~l!I}fIiWlxMOGn|(T;HvmP&2~X(
z_A$<6r$G@B>wRWM3ML7U(rKP{ivw(fbIfzU1fNm+*9u2uzKF7f>sM|Iu3%{0ZvQtf
z^8d^5d+WXf3xhw@H<yxV959iv{xXrv@0B4P@_y;zg&yJbE<0)c5K3;oVfJ;t#R<*<
zs$I*KVY42%8l;33F(>?U5RxYP=ryi<>EmK3llt~cIMkG4`&K1O{A;_})lZ1M@(l`Y
z&aNyMMPbM5{t3}6W9$y++rJzK`|wUxG;1`4@&83*69*a1DgG+#h3)EOF{wNX?gFyL
zxac@5@3q&U@UJ30RM9s{Skbx>Hv;06Nq<z;a(I6W`+4W26^1Lvzj^C@jM$ZfE*(LC
zd9nSg23T<2ZDB7v_iP0_-X9D+K!#qOUf85Wk)PMr&=w1((QfrXY5v8;|H^-oOEGvt
zfRN???T7(b2{M~En1?ONcxmG*?PPhQH-i`A21jQ?ZbG0<Gu|A|RhqpRjOM3tgQ~G)
z3iaEZTntV2A5L>WM{Rs%+JE<2NHEw(+0AanjTDC>0X5o7c;~+IBusaV45&;-eE-96
z_??5Y>FIDxELCL@X`KIuDFGk(uD5(bM%HUMHd;mItA*ZSI{p0O&C!(qLui)Tba>c`
zLM>^Ig`8fzGDPFGdTaW#x8Q3nJ4~fHvtS|p!PfRxFsfMdab(4lW{iX9l9o76GXI)N
z{yTM9ephF2?yJb>Xo3tiYf$T54<=3zWDW}V_0-V#=w0ZO!Tn#07??ZvZ;~s116yw9
z_tt^upXoAc>Qio-!m;)<GPg1I&_t{E%fW4XpZv)4`rVHERj^TtfwN@u9QvQ!Z!vVW
z%`unu-?ik6e_UyShTHj`1>V`0krwEQ@c%_<EvRI#f5^8Xokr%Mws@=(00w2rIqh2Q
zKe~YRL+#IAg7Xs2oO9Rza4%eeST}(3K$Kb;w^LDn-azkSECyr+S3J@>(tJ6;H#f)P
z3Uu6>(&jrl1j+XMk&w5k$Al&`H24`*R7z%vtAJUrIpW90!gjMimz7NEUk9q5ZYOol
z=MG0V3$9|*z4~!$%J)BF+C&b~Ae{VotxmU6kI-^mfvgrwg=#pMs~XeW(B45i+zye5
z<nkv5D`W7GH>ARG;6eIpmr(t{CIkT@%3Jh|thnD%B{s+0$5-fd^`+h!yCm%vGvl$U
zpoDuT!JOd-ydb7&SPWi6dad84+!*20IO>3q3YsA|<-Bl@md?t=h-bm;KvV1jS8U7z
z`OBQVkFZp5F09i}=H8_a8Y|@Al?C@BghRxR{r2jnDvm`aX9>uKApyMLt$nr2+x9Gq
z6zA<Zqg1E;K#9hn8`|;+@pK-;X_~?hsJWrOkpDAo`Xu;ZNAJE~G5B@3YA|h~lVr)g
z2z7<W4wnc>Ro7~hIlcD&#`=a7A-;l1pJK3>^lH2;VC`RQ_*r=l*a&^{busCttQ+`w
zqk5aS<I|;;@5?VP2AoLJ*H#7iy2ryWoV!WxJ6BQ>h^uEYSli=p!2i~+J-v`m;pTR8
z9i!`9Xs^<qI{ynP(5JXmr?VIuZUPw@ZMU;u18?K(N&S8_-01INPlFTe?ska((ZSS$
z{XgCNfGkPqNfTBGcK~&bq9XFNj}&j2i14~}#Rf*)-6dHKA!8~#!Uxnp<kYP6`^g2k
z$_oEFWPz!?KwZkCGL(D|GN|Csoc}bk<VnMOwHVyuwpFF9?Q}OY!sEo)B7r}ZN3@|I
zuY^}JB>`2d-HD^p3<r%tm^PEzYBG~)@@t**yw7)IV5CJUN)Pe6qM(H5#fRp{r_F4F
z&OztD{qx`aAX~kBB2g@M|4B0WUsFpWa-?^rk_K80zZ>keHNgLIf6kK5=*I&7wgTY0
zBOXxCZxrFXb5O`2E6)FoX3=}9P!0b_;eT;iO)|EEHNGRo@p(!fRMrN%-=|M)ebG$L
zV~NTc8wSb;;bC9>4B4XO9yl1N9!?|auE4oS9Q({by|bluwi#FAv}$9d3}Rv3YbP;f
z<$JfApwTSwDx?e%ZbPlPI<NlHuqTd=@9K~qbT?p>`mEaYC|aT_+lCo4EZ-4K@+op#
za!!!3n4KBznh4il433cA&8TD&+m!)?_=*XhwIzlI#zo_7tAFhe?={o|+exd~+XXO5
zKk{v%x;|Fm+$CZ=n_m6aYLk-m7Ou+q1>T5QDKycl+P)->=8*e(YI=>^(2qUe4wyOl
zjY_neXQO5raApAEnT5S)QTFmXH}eS}b`N86G~RSjn%9puyHsfD(prO)$JYrzg^ug^
z)e#WzToou6uTGuMPZfY#!WD+v^Hjgy(1T#<F2dMX9BW~2@o+_Q!?BFJl<WIh!+u7*
z8LW$OK64`P&;5?rQ#SNhm-Xp;e?-qwZ+m=c<q*Jwwbr0W`vHdbcEJj3f!)zM7|t^$
zuHefb7|+i{wU}UU&v(~#;6&Y1Wq&<iLHCXFf_eVVBBmY8?EzI3GB4*_%C8Q`tfcwz
zafDu*9hA=t>AtWf;plK3T(`yu-l)weq>;vAgf&K#rMVcR3qaLLEX>XZ)qs8<qS<R4
zt&K2z5U2@$>;q=4+lx3ETlh;y?Wd_N@0^mwmQ%c1&rllFF>fcx4cw`HUb|Bx`jkW+
zsiSD01pN=S1OnehU~T?)b9g~m1;~QBg!kj8Fa7iWuR1zr3dOjfM{e7SXvmdsF9W*1
z(B^(=M{03CHd(B%BqrbX*77dx`Bi6im&F}v<;3f$wRnwi!Mxx|kZpKSl`<(JuhR6n
z<^DcchBthr_1u)(A0D$mH@Qi}+rA_4EK(3JJo9ke*T|aX@_KAhAm!i!A+vH%@Zosq
zA7C+f{4>T{Wl(5$f2{b*J?mA{blZN>a%riUyX<Xesz44)Wq0g))>o+6>m%p%M@>}l
z;KZaJJb2<}xaQc!Q$iul?7ts=5%EIL9!j9d$BaEvZk50(PKx<`1WXfaPF?Y(^Y$9p
z$=lI#yo*uRx*L*cajv&ul#U&u9aL><YzMnBI+y!9W$6PakL2d(eVP`xSME@h5AWI`
zX&=@_lWAPP&;+1j$Q)P2-JGy;hY~{+E#qoG&yA$iYQSaSq6N;3FPx`fD_b{NPY%Yy
ze`IVNZ^5GNh)!a)U62k-<=K*elGGn#@cnqs6W>v5l6DtxuJWe>MLoc~z|^Nhn-o2A
zc6O1DKZ#ZCXi2e^?R>g-N`v#YmeZL@Ok4@83<`bwhPrh_SwC8rU*rlnJ{_NjcslUc
zHVEbLB_Biyr4?5bs%Gr5XMYne1BUgW?Fi3<U6bR{i~mx2s1cd^l4s}-*CMZ2ct;g^
zTdM@=w=S64&yyId@>W+@Fj2Z55D<3bVqXLl;!=JgotbCR(vUf_fn9x9WfU^lWkGA!
zo(@{xqu|vaUQXep6kfWHnxPAa4sI!PFffsjD?QL6Dc9wcS-IZ*!U5-+{d+MqB`xRU
zwkkjIrdQ3KzEflUWY~V;f_IOrWYzGque)|6G?ck>jyPHSou#z^Dv?OEKnEv8)0k1b
zcZ<PSauDu~kBK{}O@n5*|5&rjA6co5K3v6YIiqQUJhpd5h^Y57e9&fZf>DoK?~w<m
zCM&rQ4}Gm~^7;YUefPRyowEp2k)8?tV1K4?zXx6w5mKrqkK57K&UNZj=sF9=k;@~p
z>*Ho{qw9X}gXpCEs!SNA#=&J_1UYy{7$&;iyv<wLM37y*^K>}6%*yGWD1)_zv(;`H
z;^_LtnEX9YV)X;gIJZ>TiadRDSVF<$fRFRs?NNo~B$e%9&6Ylprvj4PD-d}Eb$Lj4
z=?wkH6?gMGUyzDEM^e(f*}NRzR=gq4JtM_5V$*OM#mIB@@g=A1mC5S<K?_KHA|#KI
zuH(by4}SZndz}N^*#Sizmn{>}!VNgl18}9Mmj*R25XJXTRnWxI55FwQX8R$akRpYF
zNtrtLyU)h#jc=58vll&a#qHeO0sT-3(apN~Uirxu)9G1X$u@D-xv`E=i<`|;iPTK}
zKLcEssI$j9waP9|6>r?kIAiC}5ozssdJ{8rhtldRGdItLijY>&_2X75&(&m<%xMo1
zAyS9qqu2?qEK!M8{O!2!KugyhUFZj_Fc@K*bhS%g3R9`4fUkbQU5dC=*ZsVl@~HBS
zojNC!flnT49=kBliEE6!`$uCPlK03e{{5@t6(#2^;!JwioVE08Y`ix-h8lhnyK{6J
zj(8;wb4lCh(TnUlJl7LArXqmK6;A=gWIk=vt0(M{?jB|U9R)8CuDhQ38BuD1U0e{e
zvN%egLSY)+e42YI|93LCzxzlVk_(bi4*h-;$`2QhUjf%mi=GF0F6+OPZ&&La$yVp`
zEZQ%oM#9y-UuQ({{&%Ti6=XjY2JpFT^$~`#1TYYAwT&3o=(<UE<)=1>tt4~09o3BN
z%q&-3Xzwo-1idk1GooKp++gHW$}CE7`#vv<h&PSF&C}%Ud_PY!^0L?>XS3F)-FT^X
zw0U{iZ`N|RC7(4tw2ts2J?>OxNKcudhror`ndszf*W{a%f?dSDEDX12N%C~xwxh#V
z97R=*vbCM5Ov_e^4qovYk2;=vpu&Zub_vQT)vnws?sTn_sbeC%|AZFk{FnCQxiXjl
zCa+;66*G1lmOS^&C`yiQSm+Ve2jc4d-VA%kE5d~6Ws9E5HVbVeH1x>uI{UTM;LNtT
z!d;s!bvfT0KZK)lR?CX2b2Qx3pyu{X*C!2$%$h>YBnO*NC=n_P_}ugRcGYGmU!zhg
zy6_M~HU$*Q0{Z*R2(!wZ$hLUIB#dTGFHna(EQ>Xh5|+Eo`1qPH83XZknC8@WG%y3u
zQI&_xMqUc5?+ynZQ;HQH2Wys%)}bfPf<F{l69x<HqeEy<E|7A&^6qorvoaAX63y|B
zL-g?VgwHZBB*Y*!Ib`wb!D}}-IDoBDX%2T6gLL#<nEP>!S%RO%*Bp<2P{GDyQL3lF
zzTjx;yJXD*@as|&wa?80;{CL5m`>G3(8L{%VkoAsd*m>GruA$P0yB!hqlm1p-~08<
zpF-e+GE^`7p`S#eTjQj0Cc6JC%!0xPxo_``a9>=G(D4NWPnIEtA`b<R?($PhK#oX`
zcYQgjcXuPHjfXcL^Ia_<I8Y>#v!Z#X>sRC7Mqp1?OksesQ=C8L?R37w=Pr=R$c~DU
z#+d-sdhq;|{T#K7OL<^AWR#)|{?M@?=3OK+;@cUY626x~8jM8=x1&0wI9n5w<9&<o
zr4?q%R$Lt&J7=)tLZw?8l$vmPXfficU4}axCMl0;0^BY~I5K<}hZFV`n^=Q^&ece9
zm$7nKPW3`3GwlUN^fSeFYU_8Ho}?ir?$_<u(lKHO$viKrWHZWR;0xw-m-8d#3Uh+I
z-!biUB<l#!jTGSv$~kvZLC4DUkN0=lJi#TuSSrJYC!Sp3%+Y;7Lt};qvoWDft<6uU
zg-C}P;4eKNXt^FCx?{au27xX_wqvN^v7RyMAD{MtuIG~_pa<tB`p#Wt(ErERSN~Pn
zbp6t>=`QJ(mJaFe?nW9Eq@}yNLAs?|LK;aa>F(}sI2YdWKF@nT=llWthkebg^{q8C
zM+OZp%1pHm0`s9*eQJV^k91|q(+VWXQ|Gb!k<0P?`PN)SD+3dw?Ooq{`NO&&3MAj=
zKtDamxrQIATBVCuel5UKUS&?Lr__V(3|DoMQT<ub7C~-UCW<fPwq~%Z!c5E`?c)1n
z!YmSqtV~=I*5+ktz2G>EufbKyc~{xK-d?yW>e#37{y_&jJLxCUTIYvuto?SJcl<>`
zBi&tC*0tOQ@|k@SA=VCdNS=G<_X0cHozEMi9q-CKuG8e@G*MUweep5usm<UrR=d5{
zo02P6kH8g@X7nGMYN&CtJX&qNnb)vK>@FstK3e~*@wS6yY<c`useeCAcU%5!uo*u*
zs^4)!aoJrSqxQB_Ns_DOzV2CJxh{TZpD3=HW}9h&^{H~n_du>6OM#>L`*#kNH(rUQ
zWow$p=S-*1?GoIQRk>1QI0;@`O$gK;;j-Z)U^7lug^)0UWGOVL^7u-{`8CSgn3U=V
z$h_UQfx9VtlDCb09*o(-z=px<P<cjDDMz()Jq%FxE6>=fe9N|=!nDp*@IHyX8?q6_
zAPd^bDuM6p@Pg?HduIdTjxL_3J}T?HbQd?m?#Rgl(myzG{AH04H_XdU@}k-oBz0Ob
z7$$s1`awO=v`^vr{>o!00=lHVBr8_WD-q$k1S#+Rjsl-`4*k;g%}EE&{slI6Lq^+q
zm&&bmGM!tFPI!n-%-2NKGqooz+T~|~uP2V`*zGpnhjLGJF00`OMFQzjRb@V33u<v3
zWoJ$iZl9U%7zix(5swVpJ=*MQO+q0Ip~rq<6}tGwBBkN-+3_^7lLnx*MApDpZe(^z
zjBe;z2;lv)^Kp!s&RI|Xtd(od_NkDnp=V-;?<9~~zXt^&#ZM)YuJ1Nt>sK4bw3FLi
z)5>IN$kF~DUHkcp7N1TLMW3Z|6xJjIB1(9)C7``mt{n_JYM(7nUx8<2>BXb5IEvJ1
zz;z$lT*IJKg2&5+b=paY&b;WJlaMRgM(2FtxC4iAO+Qp>_H+M8#Sc~U_vS>_n7i_w
zp98I#p4J1C_1*RY4W83iZZw0?GWFae1+MOAfZt?(9V&45w&u=Op|1@xXnd?0GAu3Q
zBS6gN(MGq{P3C4Hmlz2#8#IhFbP@^5e;*6k31>QTdD&~VM5$j6=@UF^P6%u4e(lL9
zI3t7~yx&#HmqVQ^7KX6Gq2hdWsP^=rKYD)Pc5OfSDN`<9F~{zjZaIi?gQ=XvQK04g
zfI3PcD(gbSn2!SW!@&m%Vw?Ii!!t#h`)gii1zcjk&lzw?q%c2&BeXQ$54dBOC%<((
z+P`@0gmuL!`;l0?lK%1nO-%pfa@^6U@YG;7XTDJsanAQ3Es^?ZAVtcIhs9CDt9p9b
zMdmdZ13MeF;>Kx*g`Uh`lB|Y(G_J;Z+kN9L>7+08oUXpq$%5t=ZXrvt5E^Dt2!Ac7
zZcifQX6W-yCOe+4GhdCF3+6|`=J<w`q9L%<ia8$^CDOdz#$_%eFhvH&ET%<A<+DoP
z?1qbd=_h3=fst1#m#{pyc0vFSb6;p6GzC~T*3Ni;Uc<{s#GFfI-{HfJ4l}<3bY$BT
zE3?0R%9n%yip|votr+3lE}6d3P4fsX%U=~t*_E{wSUqlo_gX%Ytt7QdW@myj9u?Di
zwb0#c?$d(uP-vY>VY$I6Y`VYarVQ3eKjbZZlFH?(fXFRkA8H!dn=wmSW8k{JXd~=M
zQ5a*>DQWg6(5L4SDXZ$OII}8*izF<djhOtErVW#DApB15EogWtv^n_<_rY;U%j}}b
zC$BlGnn3{RLKMj{G`4`7^~2oU#pu4H8d6`}C;g8!abBN2a`;OFAa(=6&P+YQnZ`+~
z2w*R&pW|H&!M)@8nBL?N(7WMb5_6epogoUa8VX<4`)oP0bkmrdR~jZA?cuun>fIp!
z%Bph@ZExw9t?h#U#-_;n0iPv*5cQO(jF-9H_=oOx7R%M$W+R9038wzx7CSkq5~p%N
ztpV{&(b15?<gY%33mLq8buZ{OWUQ$KXUjQ52Im3gNm=u%Ao@=3o-dL}z4Qn~6e(=N
zP+)xSZAAPiL<)Yw4+Al^ag==rFAdIXQeGF6GG%yMqTr~e(}lS>t(W%hNCDr-W73~s
z+PN9tSju;2`GG0gpz6yDcy@efJ~lUG%n3rP$=smK^x2>RZ3&KdQ{47YD2Xjm)}bj3
ze!19(3?cf>48Jk4;lcFA{cX!LK>fQA(v3#8-wypE2a6#IVrA_;NF`CzjB2~zWAzmD
zx<0J*ewcriIM4G#?Oi9tTGtzzC`HcR_UHFkRCF`Tpls_(zMFNrTd~I(1NUz$bF=Dr
z!n{2YsUaDm;wE^S4K-lE#(nM3xE4a-DiO>H;l|Uh#k*TMw>o(I2V7ALwOJ0}eK(tX
zI|gp`$didPfDW9aj=I{gkxLk(`;IWW0nY#_nT9JG(Z(7glWgZ4_~JpWc<(1&B>|HQ
zGjh}ETDEe8EL-qvb#O~2`IOXAms%M8TBfv_yLKwewYA9k#1wa!@^|5{e&W2N0}I${
zAQM5r@fy%_Pjd*zjbdxTD%tjtLFMbgcf7vGxTRa)h&R{ojo!Ta(x6<)cVeqQ_+z4J
zjruN6eZ*&O`bW~Zc#wCb^?KsfCtOvbFY81lBSJk1<<7Bwb*Usmtb|p4HF_w%ih`6N
zyfgkrjCG}Q=G6m|Mc=yv!Fv(kBNMnz1E!546kPphc>Xd|mNZ}Z!Pxkmam-dn6(<<c
zl5a{7J<`x{#|YK_B8TsKNEl#e%GV4Y5OraFy=7PcLnq)f(I*HHw8#0X?jcEvTCHvK
zFf;sm{mkV!3&*t|H0PiV)<%}h<}bb>U6W5;*}Tww0Tg5`X+0_4PXz}2o?jkIV%O_S
zi<q{*&tFEfUv__^-n?xpS>KIN9%b3eXp}e8zLj<kOqrL4YWig~1VNLViah&a4ml=!
zwo9eZT1*zWH@&6D`s&N+ZP!+j*YhGEzArYf5xPzJLD6TmL`Z!Oip*s^=E_xN=>b6^
zN)$e&BR({r-8h`-u=C-nn3T%sW-&G^o|1MVjyt%(uBrg0h9Uqt^Q7SYmA3+el(>u^
zXDItH`P3n$%c02}{P$^yX^@_CFVm-Mr)hn|omV(%Pb#9Ut&hJtM8*Oq#1!k_>J)u5
z`bBb7{w}He_h5SzvAcoS{oIb%8Ny@kJ@bzynJIko$;e65(^Sr%ti(02PQgh-KG)ii
z*Xon9u#=8)714q;hHxOf>YP|7tdCavBNhBkj{s})U*V<Ox*W9i4)i`Y#8p7@@cee)
zxbGCRnutakV?EtS=8FJr77tb>o^PrO4Oiab1S_E=tvX)fSM3$z<gvC1u;ZsKrcB`2
zmh;;9^Am5C#LWF8@*c54+qVvbq|=r+Wv*S7N7KE6@0t8#-_kStQjVS_soAE;KcbW{
zv>X%8&II5WSyE#}XN!TweU>%sRAxt&*R|V@+ak$J*6(O{ig?^R;5ymQS;hGb%&l6F
z(Z~B!YcHz)P`X48WAs<ZkS^gR;PF#i`jDJ!#>0yDhB<as=uM3tChIW6Ye%JPCwPHV
zV}D#a@65u@JeBDrqR8*%AGU8fjX0(mgKAB$`KqB42K6E4G9+9qhli`H@}OGp8Si;k
zXnoI`>CATf<&5x_*8ApXpEwo8+Ul~)UFy!+NoMQyzO4apKA1Y%_5^vUR#4{1BuGzP
zVdBCmcji~S7VD^W3X`nD`@72tg*}F;fxxW08|_Ihgbb;<6h3gcPNg0@P;Mk^o1RQ?
z9T;r(RNw5xjDh!2y@vk%mP&He6$)>*Z2hJ1l4QIs=Gd?9pe&(}rBc)~%&RfLa(<5h
zqwou0u}lx1Tz#b9!AQz=CahTgNtg6A{en_o!-L^<&64RcL!SM97+%k5$S&W+g3VfP
zoRXnthNjvvAjWx#+%1JpTkpr=psj)DQP}frr?a#3)=%o_mvQsebB)sleea!fJ>qQ=
zUAKG6<qspLU&Git>DoOK9}HRv)>B%YbXe3;EA`y>x<>gNhKEzVW81NM5&GlXUGLZ*
zA?0p|FL1oP?rw2k=CzSjH`p@6IChe-NQ6Y~5+I0;l#H(RFhvv*Frw9+Y9=&*eV2}9
zOl3bBv6X>pI|GSH-!P9{4aQq_Cul-g770a`w&#P8k1a(mR2^6(i}O=fMLH}@KQo4i
zO7Zw`|AHTdN#J3f&h?>8I6pO6cwBD;kH^v%kI>2}j6kNdzAH@S#3~o@jj?8xD%S_7
zjN8dh$q{*jTVxl*XSA!8)_^|3+r1TaClt=@wb=bkc++9>Bs^!Ws|gLd7zb1{ukx3)
zsh6sv34r)LOietRN?B$Gb*6AQK|9k0Y|~a@(6L^-t_g;26$kZOyIE>O=<gLQ#Hh#D
znVKXdjRX{Ds7xmE;I1PYiHcJN`I+$;0t@E=7XU#k)gN-xnSmN@Wg6gdG=hGad|<Q6
zw1~r7Cc!@pLWQsjhaed&6BEK@RPd9eWS92Q{08P5cDKJRO3_0iimfeyE9Fzms^6h_
zqf5f)g~y#-+1^^|Li?}<-1U;$z8NW$F0KF3>4Mwc@v9ML@~*&iZ$>N7Gd%IV@p^cW
zI%P1P>w?L?W?X=UVmP9>NM{O{W_PWl(~C=EIIoI^SAd;Zg5Frd3A*wk<VA7pR;Wqn
zgk~pj|DyMKT@COUI4X2Z9oIp}@{mw%2&ZIRl#5PA7w7B2t)cc2;y2%V0<;1xwlP9k
zDt<-KQi9J0?#;1*65*7gW_28;G^)NUIj<E@UU^*Y19vQJ0n}}k;d{mGMto7`(^RE_
z$625O|3j^e6Vk@u6{W}Hr1dl9hiKru=5Z#pWH)&dCEtc!Sfjpzx6|1s^doko3G{Xg
zIz?)rC0P=xX3iL+2PiiKq><e>o#rS;QDFiavm!t6iyN0DT%`{YU8(bofZ?vQ<_WXV
ziBm@#cI<fPOhFBi<0FmEvi{DsIwAxfCYeMwPqB45ZVeVCBlAkKv?-XAXAJan^(&be
zgdNRT0@y_{JgT<u0diDsLX2WP39F=Y=_a%dbR@nUYNmnl8p1@@%l*`2{7(&qyCG1M
zhXUjK4GjUgu@6ffb3e;b>8RmldIzPul^kKt3hrL6CF?4)r_C0Xd%s~r#rl2lqh3(6
zSc^i{2u;HUYjn?#>h7eQdF^&xxZgWy&7g{p?RK&AzBQ*)fh(~tu|UMY!LVTJq+lQn
zioLTw+(wQx0?DaJL@igSSRJlK3S)sZ>@Z2*N<`2Yxz*<=q6Qrh#m3M}^T>r+LbE~7
z3p^v1c@JIO{;u_^+?QPfGuUpw(Mdk7eol`a;0_%zyN2lv=P|GTRW)>-wjVM$SQ#PI
zG_`0Hl~WZ9?x=`KnhcBa(L)eAP#6oZ#380&iqgaoeIz@UY6Z^c(=ALPdGRnQv$UDc
zCMp8a!X4knsSD~3DLa?I&|N@5@wX2aJIO=#5gcX|%rxb_jK3w>%07!h;7B*r_3P*L
z{6-U=cZ%LMs$f=xF-xG2S1x(+=d}xM_IW~q5tM~_(SG+raJQMdQb)fN*1I&s;575m
z7nBi{CyAbDCgyj5p6+ZMSR-BrEre*^D<oWs4@cbwgBg-Q1p{_W^liibGWQ5*H+2V8
zrs0KA^cYGDdP5xNZ`DOv37NsrJ4O9qKlVE-{bDP~2S^;=?h~cDkfjNm;4n$``<OHY
zIhZhn(OpFZmCZ6tUAnTyOSsQV<cu7&k|v_L6_d=NGfj{xZyo055{GaY4_-*u&N7<Z
zuJ3F6a5BGao$?B)g~F>i-Rycc0H|LZ;S`A)_!d_1V?&xdI^9@M&!@l=?p1VAUJQO^
zC(RJ`An<CQT)J{ac0ZZsGFH5579l8DEpXP-)2U9jfSM`HP!e4xUo%>&+J<})C}HqK
z3X`4(!-Ka3R{OYAopfemGHio716GG*2n^Ce;<eM5dcVosBhg9JX$7;5+nTwR;`t!S
zPqhN`x#s3v?hrlhf74ZNz&mN-km>?H;iE(Ea3qT7jlJs3Vfg}LUU5La?mE9DJKCz;
z<g8H`pA8vW^j<NdM}S!1PrQP&J2GuDO;w97720-GBXT!Cr6v&Ju871tGC?OcVJg2K
zSsrGD><}}aRfun5za<rI*4|FklTlfLCiRTnxn@U9=#>bSt!vmJeU(&t6H}E6fQbNR
zzOPiV#zJ9W?%}E;G%XV}MO6^<#w+)DnwiO7AIOqvPUm416I^#g7YovYB<NWWSqiC*
zEnp82p>OA!N8Vv_P>=+Oa<hT_6Y<O$$AW}&!eRx<!L>h{=qa+`e}hbSO${rMP-T0Q
z!z0pCXkFZql&=Qt0Xsx3sjqByR>c&g<V5~BLm|b6b|C+d@1l_DuN{FC4IdLsiE39E
zTm}NOSW+J1SKdFL6YATp33HwaA5<F;lVP!y;>Uoz6rv6>y@TCc@CA%&e^D`JmO#o6
zrUh#>aiW252|JxY(v;Q0TIADyB+7Pw(I3^tFTRqNEMRsn%z}MLXb=NMBdJQMRr?l<
z{wwwS$lpL@BAB~nO{cl68`ZD9_`QWlL%4Ba6J<^lH5zea3StZ;9z}j(7m+iwFPxFM
z%fAhvK$00oD!LIjw3&r@29>oo4sOL6mdNo7SaQH%C)r`1-y$E+BzL%})F>Ch0;*v~
z4w!(>40ljh5Y*<M#v0iT9!M)KD;}G3k82W08;B^|g~#?gphi66!y?3=YOhK%g!yGJ
z$<h)22@hNnYUkg2r~Jm9kBlkd16i$vV=l-O*(#-|0=^ao#mAmoAa;#UnG}WkyMmW1
z>^(3`7s4`#9Ro-52%F{GGD1XxXH3?J$-rfIV=uGx$~<rvltgW?sIY-gCoIKGOD|MU
z5`sy9p;@)twT1<K=K*RA6$_+#UvPf3E4IK(x=dpf@j;gj8tSkElS9IXri0|wRN*m1
zG2#{UGe%HIWeiI#Ofb1TAEJ9V0kUTqJnHwIRJB;9QH`zY4g*u!)Pz5m7Pg^pEp>-;
z@A)YnNaYh6+Wb3${bibPmM{IVDl<36y#(!TeLUVs%^qel*jK!}DNKtfzA_t0Jebfi
zU1(>%=~O!vq0j-E>$+p(Ju5s(lml6D<_;&M&fk`W>!5u@%xP5T8fe_>003U;Rc?6!
ziVzeNgZ74qswYq1lmF#}3YvFolLcK|FCBcZj$MS71KtoxR$IkUD*W&-c94VBc#QV_
zojZ(Kwhg+`%PO+RF1T)wUH{uz9iJ2ZPv6KTq!DB__v}L-NTx)6IF&xQ_$e8IO62}U
ze``Tt&l!WQ9w!yYA&bryAEbTf9V`FHhA;GY?V@k?<BiM09+KMd0*Hf4j<}_bW?g3H
z>l?ew9gNvQ^PSuv9w{<Ac5kq;CXb5rzhOVLWN*>31nmkqsCV1ITlJ%-SCG+?E0|z<
zs8p73Dt`@a2(cw%FBEsalSc&HtD(XHF%Sv#H%-n+oxD9oelN^jK@mAd3k_QcN)#fO
zqp_|F3vTe>5K+&_Aw;r3!paWT0kKbj_r=7f|IM)aR)4aP!SgPjS|ID0L$a9*Y7e(c
z#eE$SS8>eop#+ClrJx4iR>C4td}pwfPUENQ$dUpcxKAW}o#BPN$N~=o$+x-%YopME
zjE>dWkC_ya7|WPkEDuw=&XSFl?wkv<`ReoP0l@?9FO;==@Zye48Y3KD&Q*E~hYTtX
zmJ`d?+$c)N$7`m9H=im5ahzn1-78OrO3*)n?JxfH3NRFGCH6;rU7hkU{laR|EMW<<
zegJB-Hs^s!aT|+*CQ6Y4yZQ^6-bIM&;o&OLungn29RSBHjY*PYkViJ9>rw0#oc@T9
zh8fi?&1pQ^(^@Tl;vqyn3dmR0_%#u{B^X{UAtk~%{~g@29s?wUxH!4oat4*@EexKB
zLSbQm_3r^}#hORy;?)1FSs8SS$h?Md4Hs0Z7$uyUvGG|k{LmoK*bi+?QJL3WM^8wa
zujgWi`6UGo9Ev4HsV4XH51*V8rNWPS^N<uGvQV67P1Sz^^MIz2jRab?8on0P3?<w+
zs=pCkEUhSf6ez7s4JiP_JfW91m$D12W2rM;C%y?^zpfQyJrcc_Yd(9N3&g`5IE>Z-
z#Z^hbP5ux2{JZ15r4*Z@?baX`k{53x<c>*$AEy2Xm^I-mu+(+k0)VQ(d4om4_D;ow
z)47$GIgw=o5`}~cSCGywLrLhEXjt-FhD|;%a#17H?63aH?aUrzKjnf3-P^wq*n0;#
zLXq&@?|pQZF?u{UsS!?y>^E(`mVP|AfsAb<j@!W?HkEfkR^il(&&9497lU@<&r8a$
zR&Y4Q+u=J~9B#d90gTI&H|AjYNm++6TE@1DgHY+PNa`SF_|`ehMmr)BkP;t?_#s>9
z#So=CK5E+C9d9M^*ypo#)6j+jY-S4IANXiAi9IkJIqr=r=V*oSIQmMbz(q1jg0D=*
z?i67hBLWyNOR;gBDalh>Sk&K+A+3A0qpndKASq}XP80UD(J<<vq!~aD`{exte^siS
zPw`&A<1V7|Umz<kQ;j;qN0uYT>w*_s+-Hj0_1zODDR~yRpAzY-#{05ljnw8+F@S&L
zIpa-WysOh8h4X5_bky~+3<&dq3$?dE@A*Sn*kgdcnZvUllgm-VNP`#2mQyxPOEiDV
zr<#$YH^HtdNEsfVor>Jg64>tlk0CKGsaPYu*OB*@Eebr1m85)oS=2%i%-Z-=j@MMs
zH*Axl<9!JP6zz8DR}8U)c|2U-(UN^4<7=0bj%>6fSUa@6RTks7L#6Z-w0^G+gHgc{
zWl6k~5tJ)NeTAJ(6^J5a?H8A%g&L&L&lw+x*xx<5!WbjC<Gygdn<_gIVvUeX^Wu4E
zsxG)%WGte-BWVasJgh_rp@w9g{v0MPG-hc!==f?)*F<ZE)Q~1QB@%dI(o{aN*rdO9
zqaY}@LeMB>D;qFD<X_u*n9-d~4Mhtp2o7~lI{X<?R?&ZNqix|G`Y-C??x+7`>1O=k
zMi%5u7>fpmA4!-r3;E^?94uEDE~8N0XRd5Tu~52+oJCxylZqr?Z1OySN7HoN7g`3X
zqfO?Qr8#Ps_z!<WY&L}=K}#3;SNv<M4eGc0e~xH|LL!XRGa+p<>%{`;(#-wgc`_1k
zIWd^-qDcX$f+YTUlyuSt$HX2m*TubHMm-q$tB<q5ZfibhFezhh$P1Y*p%6n5q=TcZ
z_Qh_7e@E~Re1JkW@TbHx5OAy>$MSShu4T%8q3(G@Ng>xBhX7v%`4vSp$fD{m_meS3
zn<5bLCw4EKNE3}&WN?XEP$j=#dW1c%JqbHj8YjFO#jii4`A==8yJ_5@UWbIoYEt?(
z1*ObMqQ8{$R=L;M?d%s|G|8ytPs*Ed4Hc^BLfDvXYB(qu!wP*<b|BDg(@Oo!Rs0!=
z0$$Cectnl9oRJiAI8NwQazhcp!Y&k6hba=0C3=>a;fa3!jLtRz?hdzbg$f7#U&Ton
z05X~U$?o_Umio}tVnctXgPgNY0IOC87pAjYBLDP(#~(_L9X$pydjlF#Es|x}6c!+I
zh|&QiazESLn+l=`-VQT|Nw5DWkMorSLZ5d+q3VE#<$**`{8kPdE6uLAY~YZFW50Pj
z65Y%R@?NhrO8ldPd#Xs#811X^C^GwB#$&-S(9k}mN>k)QwZ^jhl8pQRmx>0I2D)~g
zLlJ`(_^?!fZ42a(j1A%@x-i6-dPCQ>;$vmGzeTc*h>uec#G{Sg_nC=^_W_UuVu;Bk
z^Qot?z_mAqf~ApV2-4!@PCm7U%(Y<W?usrUvhb;hJ-(q}nqt65gM8g%B$$d)!s72?
z^5SX28cMph#tHmB_-rHohbDF&H2fM}2$dqC<}(JbdlT}ObPrjARdQOS|9L43664cc
z?^opig`e1pOQwQ!G-3x9F~!=bJ$7aU+9|Yb4#vIh4zR~_OXN-gtp9<YhM43KKxNLE
zSj3elvYK~h>xlo+Xa5qn0CBa7Rtc`z0WhuNeI@bOI4Q+qvNiaBE0Y5g{<SizXjVhm
zX4v$lg1iq{nQ59V@R|KRV_GH)N3{MC4OoAHr~YT~LNr<kGK#?*DO8M)1jsb1O2#Z<
zvAra&E+D*=09K29kZGi<Y=d=bC#_#v0;4`U{ZuDij+tA`XU%@9$cq^K^sFt9t~jNp
zy{W(U8D5P12OLWZe85c=Qi!y81%c24@&HB2Fg`LFVK|bQPDC0<vP0rUUv^g`ALjMW
zi9+MW)<tEPCG3={-&;J4>?E|U1Hw}M$k2dH2x8qJ$$7<114ww$e;CIb5PF@9@Q<Ym
z32Q7*t5ge0{Mb$?acsd?j{{5+3Ijw`N4g;PZXzKr*D7(XG@67uZ!wBMQZ8^i;7=!e
z6|?kzi&?;^NyZg7PK2T|3$tMj0<H!8mXJ#13RVsMH8<9VzhAF}tN_T7v^X->(G6M2
z+X3Oq3n!g8Z@(skdL(-*Nx1AQLDQ#}-`P@XO2P+-)=sb)cI6;j!?bK<@t^E_CJ1FF
z)RVG5O|1Ky^8a^b{ts*hsb;fNisWhiZ`d@BCPgOo$9wyR_J;47v97j9ruuJ&%Nmgz
z#}!7QWF#$Nr{||EWs@CPA%SAvWkdyZF^x8le71LBb~loQ!TtsznTD$Hl)v_2N>hMo
zjd|%FLPRw(5eqDU;p&pqOX7pV7~Y#UtM`a9_-fC4T%m26BrL>2HZi=yrjVI<VjS3E
z*QHIGXjmY?FhC6RO%q8G#SOE-k-fh_GXUz`s`Io<Y3XlSS|dMHjRZc82Y*^y-F@wr
z78`8hlMC16QOmON3u<2RAJ9~`1B9PNKC<1qX*mS~$%){o;!;k!Qx3bTk8djmFa!W#
z`T;2_{J+BV8*Tj$r_XD++1!x7t&ZgaV4wvPK+TFBabVE2aq<6nRYdP7DVEkO#0SE9
z&me+I#I?kC*RR1C$<%W9Iwt;~s?=AG<X`uM_AmDY63hh_(h;*J53a89n`_=*qyzBZ
zAw+$NT6#-UM<V)!$#DBmv-N-}DL1#P1n70`60HxMuN;>Qa?8YrUiFG5PjbK{yYbb3
z7gUbIRqDF5l8H4$j3fG74HPL0nUV(2!0AVqRiR{9JJ8$zs#F;_@pY0Q=c*A!pRDo&
zf~2v25w4EEymac1#bgfA{dEK;mQMAEb+~`1M{L-Dvm9%koBB*-T1AFhygaKR_DEhT
zuHz7#AQ@LM7YfaE+jXxF@PO}w%d*!&q&2GUUf8=<$~^mtQkVaqRuv|FdmTdmxdt2*
z*<r3m-P6{-5?H7a&hkGZRcz2n*Gf>;Ej}=Awu9<5ble#0QeEq!lis)xOP~U9;WS~8
z6P?21B*3+WXjQOX#k$dMboo|KkGuWliMP?w5s!SxD)|WG)2pfhFbo`>jhD}JBjZNk
zehA0F>*{+=<@5CxPL}5*a4BQD{$3aN2&7J;PTM`)|4+k)ve<+eQK(B98s`EmWu*lY
zmZy~JJ<thN#iW4<;~zUpRITkRP}PFa{-p$L(}0AvhPPZJ-<pvwM8hQaMIHcj#GX;c
z031wX1*s;_$2{|*BJ+0l8-*;d3c4L2RJfYL@xI%QwlydX*YqD}o%ZokC{9H#)|Q%)
z_;J^M*Qe0-xWH*z58YTP)^>XtZ9DZ~iE_p~vLr`m$?fh0YXpJk^cjip<8Vw^B!nhp
zJYZWX$GZ`hZS>!8(5(?bXNar*(%_^f`@0cH8$1EM6S$Hn9G6M~BdTps_LV``bp*(F
zD^Y|>*OCENfqXX){v}kIT+wPuw&<%JII^os@s<i7{P<HS?VeyjWOK!ryxrPnaL=X*
z>yyX3+RC<y@Phl5w&(kUW}l9>`-8rdHl-rMedHh>I|#5>jQq1GWg0QoCtmlaAHjHw
zhj5t47ojRPZGoxdiJSeOP=OBVeSZJdKmJ1?3zi{#=STf<5$v+!d4qD*22-i>AcHnU
z-s2Q4X)#{I`*8r?BHZ(UP*dOd14%L}dVeW&H-dyyvK2njt0T+9(8mF#X-?BII_>1n
zH{376k`25o@`r>6yBNau?1xlP)Jb=e77PG}Yy!LS`+g2SKF@>h(a)vb(Ec(w-`gsO
z&aCbiaEROeTMQB_b3V{s%L9u9@R10cN%@uA)o|^IuVY(u`3y#^1}|6LoR0g^cw9;F
zY6VH(N6ZNRFG0Qd+56@=>)<02u>@b(>zMom%FAg>?NJ^GQoO#4`!{)EfQfUe6-B}U
zX~4@e;cRFjq{4rQ>%>>@7OT+lZ?&Vn+ZnPJ0?M>eUgwUl19%QEzQVUh`_n;oKvyR)
z_cACxUtZo2dlwu8X?$cPqQ%<Jy<adtSx;C94uh=Zo|648D@Y~u8}9US9@fARMH{n2
zqXtfBDdOdRja|PBZ^v@1e>KSb<Uc6AP)=9?-jY(s=H+1qia@DIX)weM`^vP()0P3h
zN9k{(DF>)-r|3paOgqsuOeGDf&{G4C6aFg`&gS<%GQwLdp;eA|Breg&P9w&tM#)F)
zQ`AXLLGX_@NgBE&K%XK}LYC_?H0?Of5yqmV%A1{N4lgJ*&HmYMkw4Hfp-Rt3*10$J
zUEr?dQ(cp>M@u&rlx;WVBDHQRIOO6#+WZZV=Z!<zO8A61tU7Aj^LFJ)#vUtopDFfh
z!{TL&QcCW~uETGUBp+u6pV!3zBdiR!^*Y6KIU0rXBH23S-zXh@zU}47#e$Ei0|E@P
zB(6E10JE4fz%jZ~FQ2wun#mTt4+QTD`PyA7hSvzN+~Z~jJh}+7|KT9It#RME;G#<Y
zHP%ClY7XHEGT)i2t{Y>31D@p$%bav0waPN+%$cvlw+(Ui@G?@sJMaSjyB2N*$r<Fs
zwry5hxvk+~Z-D(~1fWx+eoFk_J-i%NXe7}Wt5W5~^#QGndp`|)otIF*mQ9!YboaMx
zg;iF`xf2Bjc?hk*NAGlq&pP(ykmylzwF$SHi`#Em8P|xq-m(!(-lKQ>iC9!vMl{S$
zz1;7Ij|x0*ESNhXe=0C7ge4NR5i*|&C_=GMF8NFRqr;NIt00GzcyL0`>npGtV>SOZ
zE%B2RS7XKXAj4(lWz`==;C7>>-5Wt*N_86$-$#vuaf_5D*;*_XapF`Vf;Lt~-nTU)
zbc@~(P;^774GA^PmL7^N$zR}ygO?pjQo{zy7`~0~5w~?5^zn2e)&6jzvJ>;TV+^(&
z{FEkJI{QCx^KrPt0*cd7nAuXUH0!y7(V(5^?$r1O-qekG#pAB%UUBrD^?7Dl3pX0*
zGaTM8ABeb3<14%r+v>La$I<pa_8&0AHEV$P$NVMD?o!RHW-^w%08d;AB-Pa88DmA(
z@wK>`7kFN8m*_ab18ST{*|zmzr`@AdL8zwP^K1^dgp-|L!72bmEy<Rtd>07!25=V!
z<#3(qAc|(5b&Igu%Z=mLHm!{Fu7_u`+J0Vq%o-#7lcW)KHRP2NuP^SKuGhjc5Qe;&
z=k$KS=re+s^G}^!D+HwAB1@vAD9DZ68bVY~qEN&feiHVc>2vb%#_m%5!0D&lMS~a3
ztb{(*uB}E2x4-TF7Q0f_TP6nWo2OBM4wOyx@*-3{TpA20XC!UrA9kuP-wOYDhh-D?
z|EYJxVa9}%0(6PWDxyklJ#XhUt_aq?ZPpf1SB>ouxA~XqOjsLE<73o8S=7fm2@Sjw
zE^N`wB<K5S^LcEJVunEytJ-`vc;I^nw|!vl8Fm_zg;g!j50xL~AM9F;m?mt?eGfrU
z5us3VMsTQA1+Vejen<xg=YQE3IT{Kp&xjiEOp2fQs)@U5Y}?ktjgfi-QgZbGr350v
z157i%fC@%K`iL8D1Mj<W9mS6&T&G~ED60S28?jTyEdPtu8e&MIzU88-65QXb7kDl>
z{&5dBsgSx%y&m^`_{4d|lOldFx5S`CNf<>owqCd%nOn)Tu;98=(t6eu8AvZ?>dIyC
zq*U}K0=!}eO5f4!2dpGiWW`gUigkVc*Is=$p#a;qyKt}U&HuYa{_T2DW&v;7wI87U
zTKY~E@*UHlt>|-l?1kOh>j(w7M84EJF|!ZNkk)5zzuWJ3<-Fgh6xN8Ktb&C3gnwx^
zd&IOz1pgZ<wt)Q|)fj;y-%~)&2TE{xZuqyKbCTVHTkw5^;|aOC+v#38`&8&lh+67E
zX{lbUY)AG7)Bc2v_nUiJgyR~cR5)7j>_L?Rn+H+bhCZxJ*=B!y64Z>gvt(_k1EWu(
z6|Aie#<9=W!#lwmRoG*+*ZYL4f;O)v0Go4c;AR@028G?)UcJI;0`Yr@pHHNi6c6`b
z1s+%v8_;G52~^DG)No_QBI2+TOGi7j8sA54;ha3Qq(scW6U2R|RGh{vyzyUF3au<X
zkU|Dn5F+u6tA)TtDX&tdXSTk~oUxsShAH(e>^5VzJ)Yuw*A|;=)wW3NHxjg3xC7P-
zVbK1q@M9~}-S6Km`*K0Qf=PaT5A=Reba15|v5NXTJgXVGZho;ZZ`!;J>m@whm~20N
z!!F;=&0V>8J|z(ouk=X*IloZ&Li`oc2;Hvszq(3%enxYwQist;(s(F3zz_nodU#}*
z{<P#|B7R{uFZ0Y)$%;o3F>UeT7-R^;ZduytrO>f5)}K^^Wtv?WvycE)?e5dD)FBCt
z8Zy3hh2MTrdu4QztG)dX4!8(NP1}kyk>Lpy?^<5<RmazqL!L`-IyE8%50CPosL1w5
z_{!JEw5*YO?n9ga7~#)Sy^h3}Gbw58V1G9cDo3~LcLFAjM)r)%I3k!I+_u{990}ZH
z2Q2HuTATfueIuH=Ab(q02dUZs+1s=>;rw_0%JQcr-qVgM;ZIp@bL|u*1HWd6L(>lN
zaD@mlN~8j=2pc)ihLcaqZ<K?H1Z9oR+17STf0?{yA%IdukFyVj^)G8gw16(k04VzF
zAVgc&UVXG{@%9DgY;cVE$0c!q{l#;7U?iFHSadm5BcZ*zI7jqc>H3}<PYU1LaqLiO
zt$&BHK{<IKAA{EFz+N5dR@jE@2?29Lb|%)=JUeHl9DUEWJ545v%=n8z1_MthZoDn$
zP3xK*5L76UiTZob1B6d!Jiz#qF)o)*2F!|wdR7s0;P%@-%5j~`T)puOaqd8@F>KyO
zNXSXbN2Qfpl^@KCRB(s*b$|IiVxMP<T|B`9q(&tPdd86dNKB_C0LRWzk?k<wl{uUr
zjk-FX{@Qev>tCphKQwqG(y)uXgmTs$K+m2MpN6K)i{<IiV(!q`u=NgT$5{>fLFZ;G
z0n;@b20dhO*J8o=xhm=}<9%PVHP}I;HrL3Wft$}^N+M0V^|{qxVay{X9l;`TtGpJk
z4{R7OM%@9$)-f9+taE1E6XV7pjTroFp2P2587jV-2U$NyKr`Uu#)Qekuu4x)Y9KHg
zGA_P>yv^tD{`TAf=?d}tXU4}LdxD1~O4bPGGr&X7-O>Dam$jq(50~-L{H`a2kJ`BB
zM2E9cWKyarztMD)vsKaG%tE09c>-ZYX4}q+^?YWLAf$=d>HGuMa;%%{C}5M5rvuY$
z?_VWrK(ld0+l6KMH%|*z521l16G_pC@(f6?3utemMFdmub+JF=Rp|07_i+Zl-CG5r
zc#Nn6#5)!yE0^_GNbSJOYu>xV^5T&osPPTbD6@b7TT>VO45`i4JopK2yCE+Tyku=@
zmNRRYm2Z2^eh&?YTuB3F8{gQ>ZcpFy;^xHj_N>SoIHKDO>3)X1;t^B{!45o)62g9U
zXx#gI%YU(8dZ&KH`*zOYAZc8kc&Y7iD9bBaz+QxMh{ch+p|@s4(KjoSu<#N}>Wd@{
zO;}8p*J&bSwBrIeln%7P%Qt>RGX@yh9mXWa&d>xZfAKWMX}B}Y_N&92lVu3qs_!b;
zH3^0@UKh#LsEfMhWBw5$V+Qx-KKP`I+o}Erd&pUO7al1!oD=#>LMejcdb%PK|5{gk
zfmxGt1Cge|ISvbY%8HTuGb<i!%c9**JDXK8Gy{V)IvwuioGTBz4$njoWde{l=g|AQ
zPlrgz=f#=eBoQezs&cqFpKt6#iU2C1cyhZRR$eeY-)QT3F^og}vUbX(vaQ)z(A7iM
z$S6bun#<|XMtxmW{z<CpQGP{8{NgS$qWQkZgPNKq*p0V|wh~P90Lc`eR;YZkba$yr
z_fymgabPoYD{TMv9Vty88R2!V6BjHrdl}ioCzNH)uf+wkAwf0+<~B8H$7E;ozmg*m
zIfHP@c=od>O3MhjU5GkNaW8L`0Gc5`WBMol+2T{i!5-1k{f3)9g@Y%#;mA=MtPyV*
z_1o=<Bbmvq9mnH=5;@A|7+!v5k5i2wZmu}`{5cIbKVk2cXk|rqC_-d>h9e%W{%)Tk
zWHv?K=f2}+wQDt?sqcQa{A-@+@ubE)F4d0g)ai_WrNhH>d%TZcYzFtnmX!*`k-)mG
zHdeN~eXX^ReD!EwV<*WXTdz48RSDLJ`5_dux2cuwo0ab@rR7W2{>h(MNirJDB%$YX
zu@OP?FU%YqH$T=36S0K-eQqhetMXb6?=SU@<M<$1i$|%79&;f%XUm+Pc<oy89-2p5
ze|$njSxv?JOH&KWuRKm9d+`s|RFE%wB);4a3EX`rb<-S`ht8nSZXWVcSELO^svEo7
z&5jz>ZM_F?kLhfi7B@mdU{0j+zeh74S5BGYQ<mT&?-IX+%Cm<*xj9OvoBx8-A#6%Y
z8-q8&`ZP?P>2)O1j;E;jW_A@~ZemX&1s21twPT46|HPL`;+9I=!Ct><>mT>B|Dz>@
z_@nsl;e0)31y(n4N<mGH?I{zB$-L2t!zbRfMtl*zl+k-$N~Ta`>DZFcbY403D>9Yj
z6Y9o-g9%W1$1|Sh_?!EXm0Yv;o`D4nv+NeHmff5}rDw<r?9P*ha}`e}|K`~ODqh8%
z-@n=P!hxkYQ5Sfqef@^O^m1eM`RwNWJt@>z=qs9+9@x%QwhUg}Y&Ce~IU&Hw1DS%)
z@Nb_O8kX1B&ER~}2HL9hsl9hM=Xe@X5&P&qPvybmocuw3^5Jmaa!IuL7XvlI$e4JA
zQG!Qlm%_4RZT-LrtHiBwO#HuFtF5pq%0cA!m)jzR=kq(9s!@Tb+isVY<{&0xO(iDD
zjgPrP77cvNK(mDs_GDhO*H8T?+wRyq;qP4$IxA1w30i}|j><Ltto<XI+U5(`sBCj%
zZ6qh5<kKZe*2VdhwyAHFW+M@E^xTdUt!1&<Z-Pu3D?z7Z@bYZT@;sqjD<RbG)Ngk8
z?oTlE9B_6St#2B0FIEk_%d^VOcz)5Ri;2Pl7QR9TEB4x8h39<fXUnQB)H##o6~+8H
zSg+o_gWrIUCGdPVG5UP}GuglcIG!!=wAp>L+!o|55@&e?O$8RZdby$BbpWl6q+Zts
z?c)Z!%kA`@>+bxJ@bF&~G2eslmka-GxR=LBeCC<0_rv3cKwGHH!~Pzx!N)f`ZR8@!
za3z$0e*daJ7w!%@Z_N59o-;2pzr|N$P0FLbYjIh1W4kBFwOnxEVNtRlXETI($Zp21
z@C*>>JP@-8E}b~YdBIyTD?dv!k%jwbs_1X3s^)%y(3WnZaNO`(!w^?F_IjNu<9z7H
z)@;m_yMfKIRK$+=g<kBk)>r3?(!y-`a3AQf-$xzWo=j&}v|g+koSK5R`&=SL4W86q
zf;JbGA@3(9Ry@_1w5=H%GI@zc&?=|leiNj)(Y1rRp&!S#rg(Atie<)tDE=!zKpqqx
zIlHa6m(1&3E^XWHFZmwz+Vsh0dO7y{$0(tvic8kMS};Z@PSm5_Q9+^h8wSdI-{36X
zur%!i>AkSpalcP*H<2F>)Pg0af>*;3w>XRva2O*0ZLI%Eto+zx2??41StG#OH;Izs
zwH=2d*+78Epd~sMH>y}ajr_0?@|0Hoi5}W^=kZ9<uCbn|bE2@~apBVLuJWSDy26sw
z#1=>Zfx2w*=q8i|b5mnC{*h_}Ex&PVf5pS?`a0`b8#DQ%)a@iRjAqf5!E=iDuQ+T)
z?WNik*Y0-zM9@?ZXQjmtSU*6Cuzn)e1kWf%{D(OSTG6rzwB8>VJsx<xXRAoNI_tzj
zxgHW|54Ejoh^#*W{=J_SGW*>9r>d4a!#v?Pfxa1SrA#nOGceE3-^b>~TAy^RU9Zhr
zEo!V(LKy?RDIr#}%f&2O-%!sgUu_XH2lfuVWd!G7Juhvdu7*@)Zj>HIJHGVv+|D+#
zK5h{Agf0pZ?_gDuF&6J>);@UJlgRRVo?&XIeK-#v<$uCh&fYisaWo<q2cb*)*eTdf
zZ@pAz@zeE))8uWZ%JV*}UehXLkGqT)JNVg9^m0XfyNed@H-*@fA1~uYSDzl}mb(Vo
za?*@cA0oA+VOC`xDJG()J`wpKcR{i2ujBK~r>$KcqFg;g6VtZl{@~2Mz2Y?R%o%e3
zgqYcA8pLRXA4&VBJz=A3R{YO!A9;6sM8_AtJha1;WnWPHn1X-nAU~@=y4|T&*H)7G
z3==D1*>pb|cw~g_!nqWIJZoWmXIU9EFy8kUCpO={lzX;}=IG8a&8rH6DcOCm`Yb)o
z`@~etnyK%3;IGhL%obc7a$1@7<EHSWTQ}q92i9#N^Q=kSUtk!M0Y{htgTm=~1r>x8
z>9w$8GIW>28b1Ooo$fMQpTM8z%%2}g3Z;8HmLMCy*RenYY<uYo{ch5Kcm<Y4Cm#Fl
zcc*S2?))5|eALb894{@5aU0Vh^~u`?cgBxrVF`etg`3%|J3pSJvo4aAb3EMRysIlt
z4`}&M_<yx@<pcdf9Ov@&`awT}A(smI^vW|%mbB;zqnh3X$QWSC?G3L@Wf2~b#jEbT
z2p1>u@%=QI+O!;*o}T6`Zo@+Lh^!2(LoMX@yzqPs&u?}zw#S@8ZwxtW8fx$H8#yWl
z{MC##6qxJ!Nx^bZ?VKPD<ACOfeGwhZr(%wK^VWu$;AIqno%S~d>IzkK?}K|0SlD0b
zb2BT!^}ua=#cd8#^fogxD$-awxF!3|Jje5J&Jk?M;;(t14+3|k5xdzo6NB(MLa1ed
z{F@hP3{~d-JWJ=#bc7X%-g5;~(-Gp#x*c6gs!$rXOl_MAAJ}Ia3isAWIF>K>Z;cRT
z>2B^L3DA^tZojv;p0vXo0te|4iutj1g}za6j0vOkwsi7DJrdisUW_c*ww(p@)3?^z
zG?wM~(D5+U%kNjNOptfnJ#)16(v{o4Ur|!69CM8o?-Q`s|8A5x@!*Rq_QUO-sAva0
zEYpSyI;V!JT+$lFoD5np>O)?l=hHCG$y8p`J;(Ew<&wvPQ$^X1;*jFKY+f3)hWP3M
z)7^{r0A!H$iU04upnoTzE{B+44;W|za45#RqGrB8f%Jqcl6*F<G#<@VIVM`TTa}3g
zypku%xt8Y|g$p^g`OrLVSBaN=&+Z~wE!*@pYUAU=3&B}u^Rn6&fH#)9fki+0X8XK-
zAz=LucZf#>+KXd|juCZ}^pXDN%;0nYbI3dJC1Y%!=KJ<1ULV8Sj@7TDUy_UOR=Vyg
zzA~x&2mpuQN3SSNd&wu=KO2llPH@B0U)U6{1opp-T>G>#<Zz9%-g??M%~P(fRK_ur
z^%~pf>$5kvgf>y<AL8;%h1rA)3(b+e3V6x8UwGGBk2E%Bz>AMbWJ&TEM|>RdAKrT1
zZQ1?IU|GffsAD>qFB_X917D(K>VL-6T9tF@W@!7o)~z7$BCN2baht{axVQ9u<T7_l
z!Vb%}?!CcizuO!TJN6D-QoSsFAQJr*mYs@+9Snp~r*nHJR|x4l>eibf+3?En1{al!
zKfp4mC=o)^nxS$iOoIKa4whCQvb=n|1MBC$f7cA8X{gEerR5>6KUR3eIGEtPl^IG%
zL^v4wZo#)~+vf3d2;Y|Lb&#?0vW9Z|0?J%V)PA@w6xd4K7*88uQ{koQiV4AWc=uy9
zOjJrl7lbR1tk*U<VHy|X5cF-2Fp%LRp8os#evPchwZkyt`+vNOiXDwqH~bO)5^~Rs
zz*-Ln<9Yfwfg<|;pec026^{sm({nSshO?Jr#h+i2^`o(OmNl|o?ojT%#m4zJT@^r>
zgDJesS_g=o-p_o`Gjg^s$BQp<zheaTKhlmXtaMe{xsB`@2?2f$SV_FeW1^0es1X-1
z>*dnj@DcWkEsrOAX8A$YMM76dpLfZb&{QUqj(L?yLYL3;rn3Kx_J{xzYYTmPXQ18V
z^vvA5{06+Z!Ue*><KFx+ubvCOZsMjSrh8i3nnk*KS356|p3*g5qq!sK>sZ}~8Rq))
zG{s?ND+Sh+0zUGG?Ss*kQG@TdAoUY4SmQryuYF}rT$!9v{aYTdml2y{pXH|<9UU;z
zAU&r6ymIFL++_2y<P$cr$J!0Ul@0lk@cSnqi5Y#2I|VMBaQ9GCa2uX|jfff%6;Rc0
z&nvS$FP|40!%(6lGf)&a?2i;ikze?7GTURxArx^ii<8$zFWZ;KBKAzcr)K=f8qF$O
z@2*c)JWpC(UQXQ?dmW)o42=`B+RoMtt^$9qw0aB>eEdV-9nv7Zff`YDXmse83^;3I
z`6)Dmr5$7)%QW16BXhC$<_a(B!i=qI&mJBi^CRQR-&ZB0!2>cZF7PyI^r%4G<|%3V
z<E|)#k^9x&XMO%Fzy6&JsxO@ZvL@B|iaU%E209kOT;C0ShT<f!jlj#TBJW4Sk)iuT
zB~XDfSg8Yw(^cCBlXs)r(b0`SF9UvPrsS^=w2%Iy9j5OiPZ0s#eAb>nnPbGs6pW3?
z<l(G+0(l-deEhohdhckjc1%-{WlXGwiG2{E?|CLxo<De|mn&2^7kOT783;U`qTJ&^
zx@B{?xgCi-qcmFR9%nC9<Q<~gVB@OZu46n4_?bW%Z)smwZ`0T0qaK(Zeywc3JuP?R
z2KpbV!N-`Rajfwm@jp7vkb7tcmSEj-3~jf#LwFo6wI=w0>o<tdf1eN0o79l6(`|je
z!&veTkMRTox6gB*+@&#Yy}`F0p-AJ5o>w+5PY5+)%HejZ=;ZvXzyV!W6YjqK9f5#l
z&)e#4khB^eqv0A2ZJHX_g{uzj<yA8A+DrF(xKFTDUs%FN+RI0$-=6ZLy4af`V2&{_
z+odjCS_HgWf>-tQ&(U?nd*10CQg-(rO58w?;V(~aYQ{Z#Q#bpqN4hWBL;b*dL+g%z
zDSCTwJ06n8n4#_n3|e<+^%)@F@5j5yE3EXikBK&gYsu5ffu>Ot18w|6c4Dw*EC@5X
zD~5R-=$PR3N`imC86}k(Mf~{ocErXrS&MoK>qpCdx4XB;OSHGg&5dn)Xnfo#os}ci
zYW@BE$?{#d`$_vt-_7!tP8FTTS?PQV8^#bT0sTVV2C1E@q_QppY46~@<R(0bHbx;3
zPga`S@^TXOWsT5PbsN1RIp*fTa5a%3SUNbok3FTcFV;5u-OqGZR;Eo&BA<w`G4o8`
z976h*7(2JCa)FB*iXWEjZO7}vz%3&uciy@x>b5A$kCQSTZwZ_ioDvwmRCM?d*$UYt
z@Um~mAdzBZ%Mx>zdY?}RUm3!+_(6TN=#m=}#MP;;8k)f~TnsguPSyUBB#mui<+fcC
zeL2X5ta_5?eWK9iwBLGnoF(wIUi#RA>HYBL`Q*oKz`%|wySZ)a&A9m$a#`ki4bP*2
z*Ym&w@djbZb{_G?kV2C~mE10kpg;)%fc7^2>I^$uzswmYYG{T!nV=q~M?0ov;ZDUX
zx-<;Du0MNH=+7{>YA38t+_)auI1B<fhvxH}H_LlBLLR3~9TX1y<C|L!_-@x>RdY>*
zHDbh7$_Tf|v~TAlnI|kP5(|>FiBt~SMw1X)={!f-5imVBo>&K@Q?L}CEW$!zqTFWO
zq8wVi^kQkAD0_}DsuYJkRlDx;==OsayO&^*H&wLaAAJF&Bdr)~W)ZkW@N(&?G)`Po
z`sNaxwW<)}ik{wjLH*(-mALy@Dy@X(^UGEXib|eFq~ZcR3NZsyRmK9+;G5X`_ohR<
zL8NhLl4i*GdVZ?C!LYqtE^Gsj0PjaC4P-`AqaR<-6tV^@_GYBqFE6V|`p&@&Yn27y
zPAD7mr;%dZ?m29Wb;nhTwG40XZ4JD9GG^R&1+IE|+}nWiwHdfnN5WKRi2eC(p>UNp
zA+Ve+l>~f#3^#WiSVhn@*U*DcOlXmiMpd4rFnf0~->_lQHDVcB2PbjHT@f^Q0T1Li
zM$N}D&<o_s=vf@>TMXt^n0$NbatuW86o2qaV@Qc0B|W%ETAep_$Cwng@_q@Fj(W>w
zF|=2}O`+YT7i7-|!M1yO!IcKOKg@00o{otHZh-@0mqjSgx5o>%9#xT<L_nqbY_~Z+
zE3q+Y8k8NJ4>y}?EO#*RSc(=J4ZSyo0(8|~3;Xsw^?OH59s*~))V%VXSCCFLLKaDG
z+^Z5xMn;Mlx3|tsmnxA-kNLzpK)}55wvr7sR6ZkdHqxzGR+*a}C1Y7>_IFYaJ4EsG
zF!lY*la3TcnGDAFd0YOMjjXe;a|IXS(Tv)Oq0<<$hU)<=awLm^4wnSFia_<rx<PS&
zJ&S4X!Q&~S^XMDxpn)dB;^J|Yc$(^a{^_hQZf@KDa<*fzjud%B*ZzNMJMVw0|M!pE
z^N_uX95RbzuR7MT_g-<zI2n<VQhGZ!A$#vl8QCg2sBE2sWK|l3v_wPe`+A*2(YyEi
z^Zw=QFF3c$bzP6g<9<CkkAb)RG2}{_lq54^-?CU+^_{!ABfsUo`yTVx_hrGa@9K>e
zOd`hIOZpTZUs%7({WZ|I$!*__SJ(9+ZyPaiB%NTBVvvIe2g4JlH1zXF^ONR&Sy#iY
z!z~O{jxI2mL?pp=$l2l%1CtvgR{K{nPV?x7wLem>%X}&Vaeh(Q;wfQGfyRc{&4?Jx
zizy(*132zSVXK>3)n6K;n+!>#4@i7gri!MuRg8~!w~8V`jeZWXL9?&g?7tPYU$Wqs
z(wA>KMejeo>v%%bUuBwk@D%vlAxbaYT6Mk^eCOlL^%p9=V~;*Bq}}>(s|MrG;i2&W
zb#Fgr#Ch}HtKgNe=3gt+#vCyjxY9zZAJKNVL&H96-}N0pdA=iukCaM9dgQl-S%=f*
zq!*$!AlaX*8qRFNd|9IDl6)#vK~5Cz_I;+~Bjq~Dc^VtU!#TjeF8=y5c!54h_tw_i
z*_9RUH$PfW4KSPy_#iaK`q1g9s>HxGRU#GEFSkO!eJ(n3=*#<<H$R@#J??rBd>_rl
zjlq84Ybsw{-iVTk#=$OAG&S4V3VeyI2*k|zJTN;$B~J_4o*2X|MU$4BJT)9xd*1R4
z@do~xN7nV(r~T4^z31>5J0=C>n786xuq4tTn&h+MZDd(;?P5q}YB!=$7KQ6#!*J^<
zOv*(|c8v)BX^Oh@k)yO?#+;HOIZc0U%J{{s2l?DTsDJS-(U?__Dk3G@ce~ahM4_bg
z&*uDPx=(13ds^y0GaMH&2{pCVr_6UkETOzm#qnc0Znk}~62=AY*W<AKXARGL^2ejn
zXGN(p<W6eapYLFp=73MfA#oq`q0iHCSc3PoFUw(4ZBPuq(eHa_k=u8LB_lE4o0)`%
zHI>E2AXYk!Pk_}RHpXE(-Izlw*rjQTQ?=frxB0kRO7)kV$I9)h@5Pun_@=Dl7l|?M
zLMNU2oZrXaxkPsI$uZL-hGA+olhRak=E@6eZ7)R})*aF4-dZ7l&(*d*e<U_%21?Xg
zg3~EOOSLhn_B(kHK{^Jde)>b39BH-p;`Fi>y%sa&{zMkzxsnp2E1AMRBy*8OyBCaz
z3@Utu70P3})%4~p<)N^t3*>1eo0;dX!Hz3>HDA0>u5_Tdv;AOop33V^hWIqbIKkp1
z!+a<6Xg5O<i3-xOLxKS<auOKJ+>w(}atQ-ZCr_4GP*7}Uf0%@`;6%(OlCBQJ+(pM3
z*mzbT)w*B-cg#C$;z#W1;vA+&>EwE2R?-rT^{tr6UW9QQwP>K_AwBihNDi45#^~<z
z<l^2WINk1;dzee(S+7Erw8-8)L7oq4n2ZnQBBQwJs>Q%An>JE!d6V`!By*hDquoho
zMqpY(%G9=1i>>OEiUd2wE9v$0JGYHQKf|?l3^hCrSkgMhWhAuPf}qwe*o3(8Q09t0
zsd26U6kv5FR+K2D${|-a8-aA^B<D~bl;yH&lSe%igoJ*i@kgmoxpag@m0gvtfhjGV
zr=t_{K2GG9u=D}}6pW~%>IkM5aIWR9OXDJ6GNGC3P3iQCHxfp0Q>GZ!g5VG#H!Y(q
zW7-0kRCUWDPS>?$80fPoMIGkK%Qwg2V+?1GXKzOEhz7NluiQwdE|I(%Z>D12o7coY
z*eMn*)Z5CIZ9hFQC@&C|G$bTioyl-QSWTmsL0)N$t3YbtukZAZ1uSMRXQ!>5&_)IE
zp+s-Tvn=4uGVN0uF^3|yr?TyNCkbhkm4WN&Rrz<Kq!A$rU(<;u33ijk^IgileTugy
zuFABpmlPm>T9KW8x?N*#h8@p871!-O-17mDtSvyY=)zq<$pSix<h&wtr#5#_H?Y_}
zL(42El5iK^H}dO{6>m&Zu5AvJH{&ofLY-p8qB|{=SZ;n2R>g{tOukby5wFhy(}$~7
zzMs_9$O+(d+*c8GmLm7k;uCje(jmq($89$PbD+=jfsdvAOf8THRT-(E?Wc`8@L^0O
zy5-clf*XPdNlyx3%mnmK6Pk!A+QrV|wqDu(a}Uvj_HP908p+ODU-cGI^Ip2*dm8v;
zcn2^J^I0Aib$)0VRxrA|P_7|YC}<c*3-r%q563_t$}%Zo$fqOcs{JNl40o-=vozNN
z(PKox$Fse%0p}*h%F$ZIIWk^|mIIr~+gyq0sihE3gA*=uC$WC0$%x9Yd_N!{{8Vk~
zFZqZ|O4Rc8$hs18$FoBFf$xVWe(aU*F}Lnl>d<8Xuq8(9{2V0%jQ<R*<9fE@4QPfu
zipF3^6zD8*pQ|BW9Do&>(5QkyR;6FnphZf}JYxoghqEhmHEkQql4T+bIM_n(>1h~q
z((MQ~@WG7ilAk-W_AxzSA#1m{U7eFJp=HguBuwZfk`oIXG}hB(r70JV7NI@DiaxKp
z#**}b*n<>3qHoYrav19PTb-<qhsBUn(BMDK9Q|;V`uPM^H|f(B1`r&IKcSAyD}ON*
zK5%=YSbQ2MTf!w^F(G3UT5fX}TmgmgHmClo_hgkOhrbClNRvnVXoLy&RUe8(WYp2w
zf27j%MY=}Oi-hjP6jqvIIp-d&bGV#?!I|rTgWKt>0$KNibBcSbgijwf;}nyD%Z*r|
z(e)kp63H%@v17E`b2f@$>?Y?b(CO@Jx20Z=)ZG*btl`u5RgHnF$+RG3gl>w`rsiMq
zw`Dyuw<Rhj=(qvbEh+QYqp20Tovn8{xsmKj1V*p?P57Ia^xk65$R$k&(0c(Xp&(u@
zAMB>$xEzNx_?z&bW4BujZ{vSw>lP%YW$t%646N0~Cl{(NT*L?zx)*e2?0W^V_~6H@
zqg?U~E+eFxVI)Qg&lh7Q*E2v$U6{y;0BfXqkQSgiUJ+AjBpRBuFearIey_$iZ)E&9
zU9QUjJ@k!>mEbj^9llvc&Y%|7QXN^bEZ~;RN>Q5S;;JrvZ^k(#b>NakRg^I&$K;9h
zI0Vzs{C4P$eDws85BdrT!0|Ep1LE9O)>t8_=>_b8yaOEvWSMM$y=^Q%UK2%3AHq+j
zC<Ya+-`++nWYB(5&7xWw(1ds24HD81^SCn<-3IiM!#u%GOkXX(<h<ptZ>_-W;?ayP
z8Fmrn_1nozaO8a^CApwEWT({fh&NN%EH-k+o1Z1iRl?(31+6z;?11Hj5-+2M5iB;&
zklMs8ZHU-V?`3<KyHihR0oX`7#J}yPb3_}9BCn`E@B&{|fX!`iDZNQ@L&h)DJ@m3C
z=$ap06ac=ZAe>MuD?}s8ZpS3phSkXCOb|MJBA1?%tGd6XilQ_YQBwfiiPNmh1zNmn
zydnI54>hlJseOmSp;v}#>?C|9Brjp8*d_BcXg=a@OZjcf+@s#)tIgC}f}i(Ypg`>3
zGjBt86hZ}_tkxXZTO{7_(VYd3cLaQbCU%DNlU$+rvrtdKd=LdDEDsVuXCdA|eV-~P
zw@~R*#xc%*w7dRUu^jR5ju}$C<_0!?r>cxx@)#Bdq=1M>=%rq)gK4f7Y_@pA4b-@5
zlywfz+b#q+ZU<Xc)g%D8FQT?di&LpDmr|LzD^Sy-Zt>Gfi7dpAsdS~nN-GWUEoC{o
zj)FFsvZMAhFe3S6SWbQj7pGCu1e^e1_|BOvo2#WiI!mt?;*LrLK9~g?RLSN}qt?f_
zU2K_KZAQDt4YT|xoaja%;}_|*FP)^p@PL>wek(xcY?Du%BRV7YAyGb5fLvBOz)Lc4
z83uly9rm_u1el8ex$Pe?p@t{sp2a7C>K+T>{1p--;X?P&JR}ZpKJV-7_yEG{uBpZ$
z{l>Z>AusS%!VZReTF%TC2VD-sVtbRHgPnA1#bZG(@g=vOoWr5)M2fLPgI2^wNU)cI
zVC4hN&`(pUlk!9Z-jYq(&BgSxnJ|~0NWkAD-*!XoAhnX4Y~Ws5gVrCnEj|C~7%eH!
z2HY0ThqP?A){6nX5mTiU6zxBRt*Q-wjd88}m~3rJqAG4J-|}t5=JC@dkWzuZQZ8&=
z)7f}s)tzL`n_<}r>(&UGkypw?nTEdi_l%hqNpzgdi;@i-O2B|Rvl+jND0tCHG!iU6
zZnEl?dt@z4RJ0{bK9J<IULHnXV7DnJi;QL?(|wK&zuMFNjF;nk*c&-nOrXbt#ORis
z7|=YUUEee|lK$WV<YY~?UzEYFA_3oK?4|6AD(0Ig<cdAOCFH4Jo-lR7{-mMrxr*}}
z!1oh0+$1;v9i)Ln^b}|T+|*O8S`Rnc$X=GvAmy>_q!OLiVeZ2aVh%?Lt)^!cB(zox
zR5YWBHq~-Yg?+UC68p$t;_Qz%7R9Qo;`iwOww^JLI;^c`%V<*Uc*r_x1xZq*HvnZD
zWH24feU5#TL(P_=>XmCxcmf<!mhhgoF#d)2U-kOgr>I7I6=uoWsELy{%B}+k^d7)L
zikhC1<RdCL<ZZqM!(UlsuZXe0y}HBW)=Onfj6KhV*d_yXHDr~&G}uuOd8R2*(_A#c
z1^4eB62tC9pJKEmt(oFpB=CX~WGhlHDV5Auz4a!lEahnVT=xzby@RC0rcYk7hR$Lt
zKu+*s1xcfsYHrLajZA*?nH~b@nY!Kq6MU60#&^1Lm50m2gxycoMbSG^fF@)IW{O<3
z2Lz-&&IA;Y=T&6Ih`NjlkcM1aIGy>CSb*82c?>L46F(sOl()vkpDALucQr$mzII|N
z9j$W<Tq;q+gL${n=9g`ef)1i00B7`95jw>N%QS?s%iUC~1=(}RDmZR~RLG}msg|?9
zjO2C;jUbnq6nJ-!+o6a{r)1tiTBJRmXHb|QYh>;#tr~_3ynt9t0H?xqLz{%z6sAWk
zJ**`u9iD7i!AEtgsv&+@QlPU-(!xEdrQOE`rLMR0WB95d-#9A4`+!<GYbMdX_>6}n
zUw03jo9xqy!#3(_R%C15Y|4S0pvOIRBdJN~9xDe}s;WwSCMn1<`X&55c{j(&a}8DL
zlu3A5ZAE5>P~nCk;wJ^AmJs30vwMSPj0v-b1Ojl`&=e4Ww`c8uPha<Y-VP%B_pFBL
zHZH*w#(`Jfm;pyRz&{?=deh-3#Z8y*lzN3Ew-*eQ0IPH8BQdNP%(o_l-l@O=Ea14+
z<QTMN^}!Qsh@p7mie$qEA@u$!vsq_YKqX1|qjlPBw>Py$>Qh3UAYD-ctrpQotXRL3
z7NK!E-CJxwhi#CUA*(xo{QfA}^b9}tM)6P4{|7zGmCB=we43hox7l<GoJ(9rhC8&T
zrvc=nV1))9-@T}fTuCM=4!&OTw}lj0(q1eZ$77!?#{q(FFT+|x`cKC+0|rOZ8YV%S
zPX%A8agKd-T8SK-Hh(Ml|I#z;B2c5;mIHNaj#PNb|HoNdY!vf$P}X*fyu?T4RK5I5
z^1<ybx|q($O!2w!4F>g^fuUTC2J)}d<~<kySnMmAK+N`e3dU@X&!WWDbcsi}=pwJN
z($00fgoF_*aJm=NWITxUj5IX5=eU`&Bl&rj^kIrtdbW+qJ#XFei|uBF$rNFMO~r&*
zD{AVFC0i$24n(GnXMOYC;yi2gYzr~xEzT(b#Qju#B-y1*Fgd!pCbgwliWx1n^j4Dt
zSj~Pp9j&g0$U#9%Mmh~eSDHqecS-!;!#-ia;*oKFEjjdPf@_2YniH5{WTYrWPhZLH
zcBFbBrLdRNi8zZv>iM2FEU0J)HCZ_D=9<Xc8X<UWOQZL`g*FDDewtZ5JCFp{Wd&y1
z=aZ8@F^j#$GR)K*!eczG^RriR8ktNt2gRL=2Z0D8h&4k;mDVK)Gn~4+G1BmJ8yV^$
zsjUwt7qw7>5Qh^HBp_Ss?Ss9p14p6M!?frn2e{T$9-)Ct<*~Ax;hClsW8+u<$CPQ3
zS_K{v>*GQIIlHA&Gn(RONUP$v1QqS(U;!T8No*CSMdrh}ly_NdAn(`a(zb{s%8zrZ
zlk&72EUv(sbwbGrn&tvYz`70NJ@(^!9t-rI4t(PYc?3?HlkuD=)?i2Ve{G?9CQ?<9
zjDV!;;ThXQkl7Q@MK8tW*_T~L(Aw!Y<}bb{rGF>8OciM9QiA%egN}86>#VhcLW2mJ
zUs6W&4ajH|>Wzeqrhbx1Nna%#d<fQbx4c$^xMfK^Tja3v`{!fkcq9!%&!}bIEDIMf
zq}h<mM(uP|G)evP%?WW)LC@=f_>QWOyo?~}uBKfu7p7fNcRQ3BleYp9(b?k~r+)(@
zF;>XAaWJK|c+>3Ge%<WeWU`^{I`K|hcK43Nw1GC3Kr|6~-T5TB*`0FK8;5@R#u(se
z4;LsscgczOmv8*HTg@+iv>o}8J*#Bv7QT4k_A7!gGH}^*q`J1KuMBtJ0?v$KD`S|r
zQ=49v1j*<2X|8jPlsbJzPt51P<g{3C7z$da+x$kLU@R>DAEG{^BO_Pb6^=|QoxBwW
zj)h`Md~)3GBCtB;=@tk>0-==4RLsc7@Osl4&E2~Y1pM=gC)+j>uWC@o|E6kFL*w|+
zfA2IUseM5l63e=V%3;{KTkjS%+wl9;&kz0yOOl);Wg1MO2nVo;AEA{RFs~u`6?Tuy
zxbRRCT-ZW_k#Wrid+kvpkp;+-mZSpX^62-vNMqghoNBnc>S6}PfzL_73mI9F`7(w^
zz{9YZB+}9Jx0MpQO||*CcW^GEsTYb5hwulMl=|bye)o`HDUXnrUB0j>39@`!J}Ou1
zR8sy!p-L53@~9h|?UsL8Z2BJH-x&ee7TA<vl0{uksge*r<td6!`@e}ko{9XjM?wL2
zimupem)#s$5#j#5K#b9k!pEV%W5~om7)WDuf%miIJ*l4tcw1@QP@Yh|GLEOU8EvXu
zaT0+_z*`%J7pUG3elltlAc729vOdOg-Ev=rLZN1AAtwmCf5O@%`3Zr>$#x$N8s49<
z8;$ECC;p)5w%p(N<^}yc@hC5e25K1pT86aI;+k*E3IT|C?Oxg2TpK7*-Y2}2T+}D>
z)MR#VMw>dOHgBZhpFTjE$L5D(&P0ozSL~m+E?2@szp5s^MWR@Xj7ah;%n;|h)VUcT
z64|wqsOTgidP(C+E<f^sFFBs*=uWY0-bwbmC<wwFpX<xme$s0Wx6+hISUY%K0b+e?
z4EJgJJ*hta?)ha<G<@S1;<37pa+ijg``QBIhlnWE7<R+|pMIJF<c<$)pIZ8p1UE{`
z`W$_Ke~^JZ8o#TF@-lF-S>4Hgo0g1?&FaO$>i<K}@?*yT3H#%ph3p!y@hyW!W%Sqb
z9$6ZhVG#^guM&qpT!Gw?oS2DVuD7uxYWFJ2J^uyR)HX1Ue}#^_AxK>ABWBwyw-NJl
z0f}j|0nT1y$fd$VfTRKQwQu2(Im}7gQwJaL?W_XOY!x_!vLGrf;saR=i?Uc&d9l4l
zLe2(A`gEsew!tG1({2hO2pb3ucNYRk>Nq=7{VCx+sxKyu=>tFr{`i1beKka3Q+9`F
z#b(Gup)1813r5HA5q~?#CMMUc<Xkzj6GHBYw;#1>jgKrh=0AFpc^dRY39A|?e8jJU
zceb7-&?4}>H^h}zOS6rPmPgW54E6-I?K#^+jQ+?%7A_qEq@V36k5M*o`XVKukbVB;
zlQXH6CN-XHssmUq!YcBw-|<Nm-9F6b%hisl+d%|sh}0!nOfNC9irP+UyU1f`nUS+G
zvC+u9JuUAaFCx1I4WIQ(*!FLJ4bxNw-&^dT<s>{U+eWiP!WpFe#u@Q!sX!x5{weB5
zLu1%n={|f5r9d20HxME9I63vP8iDuJzR>&Loi6fR0J+{H_rR;q3zpHl?nQ)&djad<
z)2Dq0k!2t58x5pL7X(q-3QTW6sc&*4sW-C?QU^f3KTRE5vPY~ifF6e>>KR-DebvL%
zj5)WY4Z)k+d0lY{;zCyO8|0sI8oKX{;wg66=n(3*fpdL$NG;X$jKuH2C>HhFvZ>GU
zh^x!?q3w^MzXr2&-QR^C4}-G5jj;FbBC2HFq!zj_W5El+jo3!Y>=^nXry{PdTSv}c
z3m)Kmi=pe8K7xwbBddIz;wL_;LlRexyBdrCorzSOiS=$uu#1<CBv&B-wV$`i-KRBt
zOw*63&|OD&FQa$IedMwvWKcN|E}QxT<KeQA(qJ4dB84Zj3<Fo8lyFDTV*l5e#-vHW
zj$9t+_A|f$2T5~A)~FgWkgn#~pJI&PmL~r}(Nb{~6^HxCC3v*8n}?o*;3#WE^|St~
z?K>`LA8pLDK}FjW`dR$6UlbhE<2Icr=>snzVm{|&nd|`j2&Ku$0bUgKD-!954blFa
zrYT*enaeab<9t#|320h|!R|;>oDbWmseP;V7>%13;E()+d2Ib<v3~{qy-Z{@{xtaN
zpt{H8^WIsj-_mVJ*u(fGp+VtKhKqyg+o*ZTIex|vi{g=D>gUARtg;rt=^vFv=m)a(
zzAd9|JK=taicNCoI3!quKgpWWg1G}cdxRvwaKJgu!C1Xo;<i$5quRV7_@0h~O>O%%
z9bfS~KI=QxyufYfcf;srLACR2$}j{U(g+m+{>t+g1)&2~t-a$M9>+G?aVDN!8MZPt
zVI@|{+Xak%KA*9$Xy?tOjTke8x@0Q`@QIDMla_QqPbdwGJGt~3MR!I67Z7a+PNU?L
z6wNIjE+8Bh10t-8zWrajGTMp`kkP2Z|35QYIqONPSN3Au_&dlygtS?9Th?ni#*7d@
z)5Qa8&2F;N5b%u|@XF;bhRTVpz=)q~@Z)>Vj)>XJ_S=6RvR^yMNr>XCtxIuZG^1Vq
z^;eCK94-9=7HrH4t-w=2@Q-~O?-C1~0Uw0o*?ti<@ES0;uya)qd^7<FhviNGF9BA)
zfp7nqWC0MWpQc;sklqbpZ}ekf9o;QyY4*Ew+P@4Mr`bdW{^W=sw71$$7=bCb{|xsP
zXANU8=8xN`ovN!HWw#IgyKu<G*O<z6R(HO1D0tfgZnJBaYur9t8Z@ZmOH<H)U`D%+
z*wt~A!GmI`D6X&Rzg@9^4{0?hfg0uklP*HuSGF@HJi8)<G>{iffBeYV0g(b0wL$a6
z#H}9+&O%E5Q0cWFzOrB0DHY;sS0ncExx^-Sh`w}}<#D4>ck@50U-PgYb%dm_Y`})`
z1Uf%+jd6M8t}d;UVNrTZk(tt3e(Wm_uBpe>dI;v>Q(3yJ0(W@@Mhnh*i72F7u%tdV
zW>l8jYH7Ed#hr{bbJ8o)^5^7CY|!OC&gj%nl<amioJ!`TzFwCpMmUXsQeB(Lx8}*%
zeZg<!m3bGA<U}6ChF<eoTYLSO=LmN!>=qsIgRH@7g~yw^Y2q~WMG+-Rr2h6z{htJs
z79XIaP`)*eL8mSh8uXnBI6&1k)RD$0ou}oc^!@vSg+g*fM>f&5vvbRo<^9)QU+lEB
z8866RmW)l(;#Tx2d3Xlm2YixXr=w9ZaQ`sxXyOy87vXc^2yrvfg~LBcj-nMV4kEf@
zpHU2(J-%mCHo~uZZ_R3c$q9FXOjRePflp-W$nzH0%Ww~Q#E~8`6F<q>d(}K=j1%fO
zIIrHy8HFGc`eSqA^BLcdLd!atP1Kx!EIKc|Vl4^it8Jg&8uzQIFE?pQb#HLoJPqU5
zi9fpDx?i1sv^0G^q$JEpSbdS%Qr3VjxSsDD<qyicmOqx>&cM?@`-o(Bm&XwKb{lMR
zt5EN*M<-MLJ_#-AR|oT7VvO!!8{a3&pHMpI;4yw;zso?HR?(-JeOIeQK1JXEplT&F
zSgWA2R@W|_wW@zT?W^^N2N|;LZM~Ea^pXk$!_?bdsb7n(ykpR%PacI<Um&?J8~<*|
z|LDU0#y}?C&5Y5QTMDagH>#?F=7HZ(L@}(>`Hs&c^IXkf)dK}d9JD)C(f@Qj<beZ?
z<q3s@$5o=Et=hORBVr$tFEM{L5*oVsBCY0q&xs*Xnz5tG_DdIPI$xwmO_p?3&((ru
zS$Y}YBEW_Vf+T<Gq4q~vXPKKHW@#LR@}Cz@UJ%K8SAXyOsPlq=>OPWW^J`i@{6k;m
z$ztL@R;M*EJsF%)$#X%Cg#nE#eNor=bC8R`tb<rg0rxtuX5SX~t0ex7Y@;SlV$H(a
z=vx67j>evR=r`thzECXF^?u&NyxQ%uFn5uw7l`xLna`GfAYESxW7f*nvp7=IpY9vx
zEli9mkBDaps9U`Fsp$Luvwz+FSe8EPlf!RZSf*Pgc$Y*;az+rFlPG4jNL{b}jT7-?
z5Ivn#g8Y`4>neL~?Lu_MeB-;r44Zjz?a}6km9z!UAxtC3=&n3E{?eeY;(F?lxaTk!
zm-FVkxk*e-zy^`s2f<jWw952JT5@j~wFa*x^j#*`YsYWjH(%}>3tx0EWf6Ht1pMe}
L8*9~TxP<>7l#^<x

literal 0
HcmV?d00001

diff --git a/src/Back.cpp b/src/Back.cpp
index 01c682c8..dc861cfa 100644
--- a/src/Back.cpp
+++ b/src/Back.cpp
@@ -17,6 +17,7 @@
 #include "Draw.h"
 #include "File.h"
 #include "Main.h"
+#include "Map.h"
 
 BACK gBack;
 int gWaterY;
@@ -96,74 +97,81 @@ void PutBack(int fx, int fy)
 			break;
 
 		case BACKGROUND_TYPE_MOVE_DISTANT:
-			for (y = -((fy / 2 / 0x200) % gBack.partsH); y < WINDOW_HEIGHT; y += gBack.partsH)
-				for (x = -((fx / 2 / 0x200) % gBack.partsW); x < WINDOW_WIDTH; x += gBack.partsW)
-					PutBitmap4(&grcGame, x, y, &rect, SURFACE_ID_LEVEL_BACKGROUND);
+			for (y = -(fy / 2 % (gBack.partsH * 0x200)); y < WINDOW_HEIGHT * 0x200; y += gBack.partsH * 0x200)
+				for (x = -(fx / 2 % (gBack.partsW)); x < WINDOW_WIDTH * 0x200; x += gBack.partsW * 0x200)
+					PutBitmap4(&grcGame, x / 0x200, y / 0x200, &rect, SURFACE_ID_LEVEL_BACKGROUND);
 
 			break;
 
 		case BACKGROUND_TYPE_MOVE_NEAR:
-			for (y = -((fy / 0x200) % gBack.partsH); y < WINDOW_HEIGHT; y += gBack.partsH)
-				for (x = -((fx / 0x200) % gBack.partsW); x < WINDOW_WIDTH; x += gBack.partsW)
-					PutBitmap4(&grcGame, x, y, &rect, SURFACE_ID_LEVEL_BACKGROUND);
+			for (y = -(fy % (gBack.partsH * 0x200)); y < WINDOW_HEIGHT * 0x200; y += gBack.partsH * 0x200)
+				for (x = -(fx % (gBack.partsW)); x < WINDOW_WIDTH * 0x200; x += gBack.partsW * 0x200)
+					PutBitmap4(&grcGame, x / 0x200, y / 0x200, &rect, SURFACE_ID_LEVEL_BACKGROUND);
 
 			break;
 
 		case BACKGROUND_TYPE_AUTOSCROLL:
 			for (y = -gBack.partsH; y < WINDOW_HEIGHT; y += gBack.partsH)
-				for (x = -((gBack.fx / 0x200) % gBack.partsW); x < WINDOW_WIDTH; x += gBack.partsW)
-					PutBitmap4(&grcGame, x, y, &rect, SURFACE_ID_LEVEL_BACKGROUND);
+				for (x = -(gBack.fx % (gBack.partsW * 0x200)); x < WINDOW_WIDTH * 0x200; x += gBack.partsW * 0x200)
+					PutBitmap4(&grcGame, x / 0x200, y, &rect, SURFACE_ID_LEVEL_BACKGROUND);
 
 			break;
 
 		case BACKGROUND_TYPE_CLOUDS_WINDY:
 		case BACKGROUND_TYPE_CLOUDS:
 			// Draw sky
+
+			// Draw the top row (including the moon/sun)
 			rect.top = 0;
 			rect.bottom = 88;
 			rect.left = 0;
 			rect.right = 320;
-			PutBitmap4(&grcGame, 0, 0, &rect, SURFACE_ID_LEVEL_BACKGROUND);
+			PutBitmap4(&grcGame, (WINDOW_WIDTH - 320) / 2, 0, &rect, SURFACE_ID_LEVEL_BACKGROUND);
+
+			// Draw the repeating star/sky pattern on each side of the top row
+			if (gBack.type == 6)
+				rect.right = 255;
+			else
+				rect.left = 106;
+
+			for (x = ((WINDOW_WIDTH - 320) / 2); x > 0; x -= (rect.right - rect.left))
+				PutBitmap4(&grcGame, x - (rect.right - rect.left), 0, &rect, SURFACE_ID_LEVEL_BACKGROUND);
+			for (x = ((WINDOW_WIDTH - 320) / 2) + 320; x < WINDOW_WIDTH; x += (rect.right - rect.left))
+				PutBitmap4(&grcGame, x, 0, &rect, SURFACE_ID_LEVEL_BACKGROUND);
+
+			// Draw each cloud layer from top to bottom
 
 			// Draw first cloud layer
 			rect.top = 88;
 			rect.bottom = 123;
-			rect.left = gBack.fx / 2;
-			rect.right = 320;
-			PutBitmap4(&grcGame, 0, 88, &rect, SURFACE_ID_LEVEL_BACKGROUND);
-
 			rect.left = 0;
-			PutBitmap4(&grcGame, 320 - ((gBack.fx / 2) % 320), 88, &rect, SURFACE_ID_LEVEL_BACKGROUND);
+			rect.right = 320;
+			for (x = -((gBack.fx * 0x200) / 2); x < WINDOW_WIDTH * 0x200; x += 320 * 0x200)
+				PutBitmap4(&grcGame, x / 0x200, 88, &rect, SURFACE_ID_LEVEL_BACKGROUND);
 
 			// Draw second cloud layer
 			rect.top = 123;
 			rect.bottom = 146;
-			rect.left = gBack.fx % 320;
-			rect.right = 320;
-			PutBitmap4(&grcGame, 0, 123, &rect, SURFACE_ID_LEVEL_BACKGROUND);
-
 			rect.left = 0;
-			PutBitmap4(&grcGame, 320 - (gBack.fx % 320), 123, &rect, SURFACE_ID_LEVEL_BACKGROUND);
+			rect.right = 320;
+			for (x = -((gBack.fx % 320) * 0x200); x < WINDOW_WIDTH * 0x200; x += 320 * 0x200)
+				PutBitmap4(&grcGame, x / 0x200, 123, &rect, SURFACE_ID_LEVEL_BACKGROUND);
 
 			// Draw third cloud layer
 			rect.top = 146;
 			rect.bottom = 176;
-			rect.left = 2 * gBack.fx % 320;
-			rect.right = 320;
-			PutBitmap4(&grcGame, 0, 146, &rect, SURFACE_ID_LEVEL_BACKGROUND);
-
 			rect.left = 0;
-			PutBitmap4(&grcGame, 320 - ((gBack.fx * 2) % 320), 146, &rect, SURFACE_ID_LEVEL_BACKGROUND);
+			rect.right = 320;
+			for (x = -(((gBack.fx * 2) % 320) * 0x200); x < WINDOW_WIDTH * 0x200; x += 320 * 0x200)
+				PutBitmap4(&grcGame, x / 0x200, 146, &rect, SURFACE_ID_LEVEL_BACKGROUND);
 
 			// Draw fourth cloud layer
 			rect.top = 176;
 			rect.bottom = 240;
-			rect.left = 4 * gBack.fx % 320;
-			rect.right = 320;
-			PutBitmap4(&grcGame, 0, 176, &rect, SURFACE_ID_LEVEL_BACKGROUND);
-
 			rect.left = 0;
-			PutBitmap4(&grcGame, 320 - ((gBack.fx * 4) % 320), 176, &rect, SURFACE_ID_LEVEL_BACKGROUND);
+			rect.right = 320;
+			for (x = -(((gBack.fx * 4) % 320) * 0x200); x < WINDOW_WIDTH * 0x200; x += 320 * 0x200)
+				PutBitmap4(&grcGame, x / 0x200, 176, &rect, SURFACE_ID_LEVEL_BACKGROUND);
 
 			break;
 	}
@@ -172,6 +180,8 @@ void PutBack(int fx, int fy)
 /// Draw background foreground elements - only the water background type makes use of this
 void PutFront(int fx, int fy)
 {
+	short map_w, map_l;
+	GetMapData(0, &map_w, &map_l);
 	int xpos, ypos;
 
 	RECT rcWater[2] = {{0, 0, 32, 16}, {0, 16, 32, 48}};
@@ -190,7 +200,7 @@ void PutFront(int fx, int fy)
 
 			for (y = y_1; y < y_2; ++y)
 			{
-				ypos = ((y * 32 * 0x200) / 0x200) - (fy / 0x200) + (gWaterY / 0x200);
+				ypos = y * 32 - fy / 0x200 + gWaterY / 0x200;
 
 				if (ypos < -32)
 					continue;
@@ -200,7 +210,9 @@ void PutFront(int fx, int fy)
 
 				for (x = x_1; x < x_2; ++x)
 				{
-					xpos = ((x * 32 * 0x200) / 0x200) - (fx / 0x200);
+					xpos = x * 32 - fx / 0x200;
+					if ((map_w - 1) * 16 < WINDOW_WIDTH)
+						fx /= 0x200;
 					PutBitmap3(&grcGame, xpos, ypos, &rcWater[1], SURFACE_ID_LEVEL_BACKGROUND);
 					if (y == 0)
 						PutBitmap3(&grcGame, xpos, ypos, &rcWater[0], SURFACE_ID_LEVEL_BACKGROUND);
diff --git a/src/Backends/Audio/3DS.cpp b/src/Backends/Audio/3DS.cpp
deleted file mode 100644
index a33e136e..00000000
--- a/src/Backends/Audio/3DS.cpp
+++ /dev/null
@@ -1,297 +0,0 @@
-// Released under the MIT licence.
-// See LICENCE.txt for details.
-
-#include "../Audio.h"
-
-#include <math.h>
-#include <stddef.h>
-#include <stdlib.h>
-#include <string.h>
-
-#include <3ds.h>
-
-#include "../Misc.h"
-
-#define MIN(a, b) ((a) < (b) ? (a) : (b))
-#define MAX(a, b) ((a) > (b) ? (a) : (b))
-#define CLAMP(a, min, max) MIN(MAX((a), (min)), (max))
-
-typedef struct AudioBackend_Sound
-{
-	signed char *samples;
-	ndspWaveBuf wave_buffer;
-	unsigned int frequency;
-	float volume;
-	float pan_l;
-	float pan_r;
-	bool looping;
-	int channel;
-	unsigned int identifier;
-} AudioBackend_Sound;
-
-static struct
-{
-	unsigned int sound_identifier;
-	AudioBackend_Sound *sound;
-} channels[24];
-
-static void (*organya_callback)(void);
-static unsigned int organya_callback_timer;
-
-static LightLock organya_mutex;
-
-static Thread organya_thread;
-static bool organya_thread_die;
-
-static void OrganyaThread(void *user_data)
-{
-	(void)user_data;
-
-	while (!organya_thread_die)
-	{
-		LightLock_Lock(&organya_mutex);
-
-		unsigned int sleep_milliseconds = 10;
-
-		if (organya_callback_timer != 0)
-		{
-			organya_callback();
-
-			sleep_milliseconds = organya_callback_timer;
-		}
-
-		LightLock_Unlock(&organya_mutex);
-
-		svcSleepThread(sleep_milliseconds * 1000000);
-	}
-}
-
-static float MillibelToScale(long volume)
-{
-	// Volume is in hundredths of a decibel, from 0 to -10000
-	volume = CLAMP(volume, -10000, 0);
-	return pow(10.0f, volume / 2000.0f);
-}
-
-static int AllocateChannel(AudioBackend_Sound *sound)
-{
-	// Search for a channel which either doesn't have an assigned sound,
-	// or whose assigned sound has since stopped playing.
-	for (int i = 0; i < 24; ++i)
-	{
-		if (channels[i].sound_identifier == 0
-		 || channels[i].sound->wave_buffer.status == NDSP_WBUF_FREE
-		 || channels[i].sound->wave_buffer.status == NDSP_WBUF_DONE)
-		{
-			channels[i].sound_identifier = sound->identifier;
-			channels[i].sound = sound;
-
-			return i;
-		}
-	}
-
-	Backend_PrintInfo("Ran out of sound channels - hey you, whatever you're doing, stop it!");
-
-	return -1;
-}
-
-bool AudioBackend_Init(void)
-{
-	Result rc = ndspInit();
-
-	if (R_SUCCEEDED(rc))
-	{
-		ndspSetOutputMode(NDSP_OUTPUT_STEREO);
-
-		LightLock_Init(&organya_mutex);
-
-		s32 priority = 0x30;
-		svcGetThreadPriority(&priority, CUR_THREAD_HANDLE);
-
-		organya_thread_die = false;
-		organya_thread = threadCreate(OrganyaThread, NULL, 32 * 1024, CLAMP(priority - 1, 0x18, 0x3F), -1, false);
-
-		return true;
-	}
-	else
-	{
-		if (R_SUMMARY(rc) == RS_NOTFOUND && R_MODULE(rc) == RM_DSP)
-			Backend_PrintError("Could not load DSP firmware.\nThe game will not have any audio!\nTo fix this, you need to dump your\n3DS's DSP firmware.\nGoogle it if you're not sure what to do.");
-		else
-			Backend_PrintError("ndspInit failed in AudioBackend_Init");
-	}
-
-	return false;
-}
-
-void AudioBackend_Deinit(void)
-{
-	organya_thread_die = true;
-	threadJoin(organya_thread, UINT64_MAX);
-	threadFree(organya_thread);
-
-	ndspExit();
-}
-
-AudioBackend_Sound* AudioBackend_CreateSound(unsigned int frequency, const unsigned char *samples, size_t length)
-{
-	static unsigned int identifier_allocator;
-
-	AudioBackend_Sound *sound = (AudioBackend_Sound*)malloc(sizeof(AudioBackend_Sound));
-
-	if (sound != NULL)
-	{
-		sound->samples = (signed char*)linearAlloc(length);
-
-		if (sound->samples != NULL)
-		{
-			for (size_t i = 0; i < length; ++i)
-				sound->samples[i] = samples[i] - 0x80;
-
-			DSP_FlushDataCache(sound->samples, length);
-
-			memset(&sound->wave_buffer, 0, sizeof(sound->wave_buffer));
-			sound->wave_buffer.data_vaddr = sound->samples;
-			sound->wave_buffer.nsamples = length;
-
-			sound->frequency = frequency;
-			sound->volume = 1.0f;
-			sound->pan_l = 1.0f;
-			sound->pan_r = 1.0f;
-			sound->looping = false;
-
-			sound->channel = -1;
-
-			do
-			{
-				sound->identifier = ++identifier_allocator;
-			} while (sound->identifier == 0);	// 0 is reserved
-
-			return sound;
-		}
-		else
-		{
-			Backend_PrintError("linearAlloc failed in AudioBackend_CreateSound");
-		}
-
-		free(sound);
-	}
-	else
-	{
-		Backend_PrintError("malloc failed in AudioBackend_CreateSound");
-	}
-
-	return NULL;
-}
-
-void AudioBackend_DestroySound(AudioBackend_Sound *sound)
-{
-	if (sound->channel != -1 && channels[sound->channel].sound_identifier == sound->identifier)
-	{
-		ndspChnWaveBufClear(sound->channel);
-		channels[sound->channel].sound_identifier = 0;
-		channels[sound->channel].sound = NULL;
-	}
-
-	linearFree(sound->samples);
-	free(sound);
-}
-
-void AudioBackend_PlaySound(AudioBackend_Sound *sound, bool looping)
-{
-	if (sound->channel == -1 || channels[sound->channel].sound_identifier != sound->identifier)
-		sound->channel = AllocateChannel(sound);
-
-	bool previous_looping = sound->looping;
-	sound->looping = looping;
-
-	if (sound->channel != -1)
-	{
-		if (sound->wave_buffer.status == NDSP_WBUF_FREE
-		 || sound->wave_buffer.status == NDSP_WBUF_DONE
-		 || previous_looping != looping)
-		{
-			ndspChnWaveBufClear(sound->channel);
-
-			ndspChnSetInterp(sound->channel, NDSP_INTERP_LINEAR);
-			ndspChnSetRate(sound->channel, sound->frequency);
-			ndspChnSetFormat(sound->channel, NDSP_FORMAT_MONO_PCM8);
-
-			sound->wave_buffer.looping = looping;
-
-			float mix[12];
-			memset(mix, 0, sizeof(mix));
-			mix[0] = sound->pan_l * sound->volume;
-			mix[1] = sound->pan_r * sound->volume;
-			ndspChnSetMix(sound->channel, mix);
-
-			ndspChnWaveBufAdd(sound->channel, &sound->wave_buffer);
-		}
-	}
-}
-
-void AudioBackend_StopSound(AudioBackend_Sound *sound)
-{
-	if (sound->channel != -1 && channels[sound->channel].sound_identifier == sound->identifier)
-		ndspChnWaveBufClear(sound->channel);
-}
-
-void AudioBackend_RewindSound(AudioBackend_Sound *sound)
-{
-	(void)sound;
-}
-
-void AudioBackend_SetSoundFrequency(AudioBackend_Sound *sound, unsigned int frequency)
-{
-	sound->frequency = frequency;
-
-	if (sound->channel != -1 && channels[sound->channel].sound_identifier == sound->identifier)
-		ndspChnSetRate(sound->channel, frequency);
-}
-
-void AudioBackend_SetSoundVolume(AudioBackend_Sound *sound, long volume)
-{
-	sound->volume = MillibelToScale(volume);
-
-	if (sound->channel != -1 && channels[sound->channel].sound_identifier == sound->identifier)
-	{
-		float mix[12];
-		memset(mix, 0, sizeof(mix));
-		mix[0] = sound->pan_l * sound->volume;
-		mix[1] = sound->pan_r * sound->volume;
-		ndspChnSetMix(sound->channel, mix);
-	}
-}
-
-void AudioBackend_SetSoundPan(AudioBackend_Sound *sound, long pan)
-{
-	sound->pan_l = MillibelToScale(-pan);
-	sound->pan_r = MillibelToScale(pan);
-
-	if (sound->channel != -1 && channels[sound->channel].sound_identifier == sound->identifier)
-	{
-		float mix[12];
-		memset(mix, 0, sizeof(mix));
-		mix[0] = sound->pan_l * sound->volume;
-		mix[1] = sound->pan_r * sound->volume;
-		ndspChnSetMix(sound->channel, mix);
-	}
-}
-
-void AudioBackend_SetOrganyaCallback(void (*callback)(void))
-{
-	LightLock_Lock(&organya_mutex);
-
-	organya_callback = callback;
-
-	LightLock_Unlock(&organya_mutex);
-}
-
-void AudioBackend_SetOrganyaTimer(unsigned int milliseconds)
-{
-	LightLock_Lock(&organya_mutex);
-
-	organya_callback_timer = milliseconds;
-
-	LightLock_Unlock(&organya_mutex);
-}
diff --git a/src/Backends/Audio/Null.cpp b/src/Backends/Audio/Null.cpp
deleted file mode 100644
index 53e168ae..00000000
--- a/src/Backends/Audio/Null.cpp
+++ /dev/null
@@ -1,74 +0,0 @@
-// Released under the MIT licence.
-// See LICENCE.txt for details.
-
-#include "../Audio.h"
-
-#include <stddef.h>
-
-bool AudioBackend_Init(void)
-{
-	return true;
-}
-
-void AudioBackend_Deinit(void)
-{
-	
-}
-
-AudioBackend_Sound* AudioBackend_CreateSound(unsigned int frequency, const unsigned char *samples, size_t length)
-{
-	(void)frequency;
-	(void)samples;
-	(void)length;
-
-	return NULL;
-}
-
-void AudioBackend_DestroySound(AudioBackend_Sound *sound)
-{
-	(void)sound;
-}
-
-void AudioBackend_PlaySound(AudioBackend_Sound *sound, bool looping)
-{
-	(void)sound;
-	(void)looping;
-}
-
-void AudioBackend_StopSound(AudioBackend_Sound *sound)
-{
-	(void)sound;
-}
-
-void AudioBackend_RewindSound(AudioBackend_Sound *sound)
-{
-	(void)sound;
-}
-
-void AudioBackend_SetSoundFrequency(AudioBackend_Sound *sound, unsigned int frequency)
-{
-	(void)sound;
-	(void)frequency;
-}
-
-void AudioBackend_SetSoundVolume(AudioBackend_Sound *sound, long volume)
-{
-	(void)sound;
-	(void)volume;
-}
-
-void AudioBackend_SetSoundPan(AudioBackend_Sound *sound, long pan)
-{
-	(void)sound;
-	(void)pan;
-}
-
-void AudioBackend_SetOrganyaCallback(void (*callback)(void))
-{
-	(void)callback;
-}
-
-void AudioBackend_SetOrganyaTimer(unsigned int milliseconds)
-{
-	(void)milliseconds;
-}
diff --git a/src/Backends/Audio/SoftwareMixer/3DS.cpp b/src/Backends/Audio/SoftwareMixer/3DS.cpp
deleted file mode 100644
index a8fd1a3e..00000000
--- a/src/Backends/Audio/SoftwareMixer/3DS.cpp
+++ /dev/null
@@ -1,210 +0,0 @@
-// Released under the MIT licence.
-// See LICENCE.txt for details.
-
-#include "Backend.h"
-
-#include <stddef.h>
-#include <string.h>
-
-#include <3ds.h>
-
-#include "../../Misc.h"
-
-#define SAMPLE_RATE 32000       // The native sample rate is 32728.4980469
-#define FRAMES_PER_BUFFER (SAMPLE_RATE / 30) // 33.333 milliseconds
-
-#define MIN(a, b) ((a) < (b) ? (a) : (b))
-#define MAX(a, b) ((a) > (b) ? (a) : (b))
-#define CLAMP(a, min, max) MIN(MAX((a), (min)), (max))
-
-static void (*parent_callback)(long *stream, size_t frames_total);
-
-static short *stream_buffer;
-
-static ndspWaveBuf dsp_buffers[2];
-static bool current_dsp_buffer;
-
-static LightLock mixer_mutex;
-static LightLock organya_mutex;
-
-static LightEvent audio_thread_event;
-
-static Thread audio_thread;
-static bool audio_thread_die;
-
-static void FillBuffer(short *stream, size_t frames_total)
-{
-	size_t frames_done = 0;
-
-	while (frames_done != frames_total)
-	{
-		long mix_buffer[FRAMES_PER_BUFFER * 2];	// 2 because stereo
-
-		size_t subframes = MIN(FRAMES_PER_BUFFER, frames_total - frames_done);
-
-		memset(mix_buffer, 0, subframes * sizeof(long) * 2);
-
-		parent_callback(mix_buffer, subframes);
-
-		for (size_t i = 0; i < subframes * 2; ++i)
-		{
-			if (mix_buffer[i] > 0x7FFF)
-				*stream++ = 0x7FFF;
-			else if (mix_buffer[i] < -0x7FFF)
-				*stream++ = -0x7FFF;
-			else
-				*stream++ = mix_buffer[i];
-		}
-
-		frames_done += subframes;
-	}
-
-	DSP_FlushDataCache(stream, frames_total * sizeof(short) * 2);
-}
-
-static void Callback(void *user_data)
-{
-	(void)user_data;
-
-	LightEvent_Signal(&audio_thread_event);
-}
-
-static void AudioThread(void *user_data)
-{
-	(void)user_data;
-
-	while (!audio_thread_die)
-	{
-		if (dsp_buffers[current_dsp_buffer].status == NDSP_WBUF_DONE)
-		{
-			FillBuffer(dsp_buffers[current_dsp_buffer].data_pcm16, dsp_buffers[current_dsp_buffer].nsamples);
-
-			ndspChnWaveBufAdd(0, &dsp_buffers[current_dsp_buffer]);
-
-			current_dsp_buffer = !current_dsp_buffer;
-		}
-
-		LightEvent_Wait(&audio_thread_event);
-	}
-}
-
-unsigned long SoftwareMixerBackend_Init(void (*callback)(long *stream, size_t frames_total))
-{
-	parent_callback = callback;
-
-	current_dsp_buffer = false;
-
-	stream_buffer = (short*)linearAlloc(FRAMES_PER_BUFFER * sizeof(short) * 2 * 2);
-
-	if (stream_buffer != NULL)
-	{
-		Result rc = ndspInit();
-
-		if (R_SUCCEEDED(rc))
-		{
-			ndspSetCallback(Callback, NULL);
-
-			ndspSetOutputMode(NDSP_OUTPUT_STEREO);
-
-			ndspChnSetInterp(0, NDSP_INTERP_LINEAR);
-			ndspChnSetRate(0, SAMPLE_RATE);
-			ndspChnSetFormat(0, NDSP_FORMAT_STEREO_PCM16);
-
-			float mix[12];
-			mix[0] = 1.0f;
-			mix[1] = 1.0f;
-			mix[2] = 0.0f;
-			mix[3] = 0.0f;
-			mix[4] = 0.0f;
-			mix[5] = 0.0f;
-			mix[6] = 0.0f;
-			mix[7] = 0.0f;
-			mix[8] = 0.0f;
-			mix[9] = 0.0f;
-			mix[10] = 0.0f;
-			mix[11] = 0.0f;
-			ndspChnSetMix(0, mix);
-
-			memset(dsp_buffers, 0, sizeof(dsp_buffers));
-			dsp_buffers[0].data_vaddr = &stream_buffer[FRAMES_PER_BUFFER * 2 * 0];
-			dsp_buffers[0].nsamples = FRAMES_PER_BUFFER;
-			dsp_buffers[1].data_vaddr = &stream_buffer[FRAMES_PER_BUFFER * 2 * 1];
-			dsp_buffers[1].nsamples = FRAMES_PER_BUFFER;
-
-			LightLock_Init(&mixer_mutex);
-			LightLock_Init(&organya_mutex);
-
-			LightEvent_Init(&audio_thread_event, RESET_ONESHOT);
-
-			s32 priority = 0x30;
-			svcGetThreadPriority(&priority, CUR_THREAD_HANDLE);
-
-			audio_thread_die = false;
-			audio_thread = threadCreate(AudioThread, NULL, 32 * 1024, CLAMP(priority - 1, 0x18, 0x3F), -1, false);
-
-			return SAMPLE_RATE;
-		}
-		else
-		{
-			if (R_SUMMARY(rc) == RS_NOTFOUND && R_MODULE(rc) == RM_DSP)
-				Backend_PrintError("Could not load DSP firmware.\nThe game will not have any audio!\nTo fix this, you need to dump your\n3DS's DSP firmware.\nGoogle it if you're not sure what to do.");
-			else
-				Backend_PrintError("ndspInit failed in SoftwareMixerBackend_Init");
-		}
-
-		linearFree(stream_buffer);
-	}
-	else
-	{
-		Backend_PrintError("linearAlloc failed");
-	}
-
-	return 0;
-}
-
-void SoftwareMixerBackend_Deinit(void)
-{
-	ndspSetCallback(NULL, NULL);
-
-	// Kill audio thread
-	audio_thread_die = true;
-	LightEvent_Signal(&audio_thread_event);
-	threadJoin(audio_thread, UINT64_MAX);
-	threadFree(audio_thread);
-
-	ndspChnReset(0);
-
-	ndspExit();
-
-	linearFree(stream_buffer);
-}
-
-bool SoftwareMixerBackend_Start(void)
-{
-	FillBuffer(stream_buffer, FRAMES_PER_BUFFER * 2);
-
-	ndspChnWaveBufAdd(0, &dsp_buffers[0]);
-	ndspChnWaveBufAdd(0, &dsp_buffers[1]);
-
-	return true;
-}
-
-void SoftwareMixerBackend_LockMixerMutex(void)
-{
-	LightLock_Lock(&mixer_mutex);
-}
-
-void SoftwareMixerBackend_UnlockMixerMutex(void)
-{
-	LightLock_Unlock(&mixer_mutex);
-}
-
-void SoftwareMixerBackend_LockOrganyaMutex(void)
-{
-	LightLock_Lock(&organya_mutex);
-}
-
-void SoftwareMixerBackend_UnlockOrganyaMutex(void)
-{
-	LightLock_Unlock(&organya_mutex);
-}
diff --git a/src/Backends/Audio/SoftwareMixer/SDL1.cpp b/src/Backends/Audio/SoftwareMixer/SDL1.cpp
deleted file mode 100644
index 9ad65043..00000000
--- a/src/Backends/Audio/SoftwareMixer/SDL1.cpp
+++ /dev/null
@@ -1,116 +0,0 @@
-// Released under the MIT licence.
-// See LICENCE.txt for details.
-
-#include "Backend.h"
-
-#include <stddef.h>
-#include <string.h>
-#include <string>
-
-#include "SDL.h"
-
-#include "../../Misc.h"
-
-#define MIN(a, b) ((a) < (b) ? (a) : (b))
-
-static void (*parent_callback)(long *stream, size_t frames_total);
-
-static void Callback(void *user_data, Uint8 *stream_uint8, int len)
-{
-	(void)user_data;
-
-	short *stream = (short*)stream_uint8;
-	const size_t frames_total = len / sizeof(short) / 2;
-
-	size_t frames_done = 0;
-
-	while (frames_done != frames_total)
-	{
-		long mix_buffer[0x800 * 2];	// 2 because stereo
-
-		size_t subframes = MIN(0x800, frames_total - frames_done);
-
-		memset(mix_buffer, 0, subframes * sizeof(long) * 2);
-
-		parent_callback(mix_buffer, subframes);
-
-		for (size_t i = 0; i < subframes * 2; ++i)
-		{
-			if (mix_buffer[i] > 0x7FFF)
-				*stream++ = 0x7FFF;
-			else if (mix_buffer[i] < -0x7FFF)
-				*stream++ = -0x7FFF;
-			else
-				*stream++ = mix_buffer[i];
-		}
-
-		frames_done += subframes;
-	}
-}
-
-unsigned long SoftwareMixerBackend_Init(void (*callback)(long *stream, size_t frames_total))
-{
-	if (SDL_InitSubSystem(SDL_INIT_AUDIO) < 0)
-	{
-		std::string errorMessage = std::string("'SDL_InitSubSystem(SDL_INIT_AUDIO)' failed: ") + SDL_GetError();
-		Backend_ShowMessageBox("Fatal error (SDL1 audio backend)", errorMessage.c_str());
-		return false;
-	}
-
-	SDL_AudioSpec specification;
-	specification.freq = 48000;
-	specification.format = AUDIO_S16;
-	specification.channels = 2;
-	specification.samples = 0x400;	// Roughly 10 milliseconds for 48000Hz
-	specification.callback = Callback;
-	specification.userdata = NULL;
-
-	SDL_AudioSpec obtained_specification;
-	if (SDL_OpenAudio(&specification, &obtained_specification) != 0)
-	{
-		std::string error_message = std::string("'SDL_OpenAudio' failed: ") + SDL_GetError();
-		Backend_ShowMessageBox("Fatal error (SDL1 audio backend)", error_message.c_str());
-		return false;
-	}
-
-	char driver[20];
-	Backend_PrintInfo("Selected SDL audio driver: %s", SDL_AudioDriverName(driver, 20));
-
-	parent_callback = callback;
-
-	return obtained_specification.freq;
-}
-
-void SoftwareMixerBackend_Deinit(void)
-{
-	SDL_CloseAudio();
-
-	SDL_QuitSubSystem(SDL_INIT_AUDIO);
-}
-
-bool SoftwareMixerBackend_Start(void)
-{
-	SDL_PauseAudio(0);
-
-	return true;
-}
-
-void SoftwareMixerBackend_LockMixerMutex(void)
-{
-	SDL_LockAudio();
-}
-
-void SoftwareMixerBackend_UnlockMixerMutex(void)
-{
-	SDL_UnlockAudio();
-}
-
-void SoftwareMixerBackend_LockOrganyaMutex(void)
-{
-	SDL_LockAudio();
-}
-
-void SoftwareMixerBackend_UnlockOrganyaMutex(void)
-{
-	SDL_UnlockAudio();
-}
diff --git a/src/Backends/Audio/SoftwareMixer/WiiU.cpp b/src/Backends/Audio/SoftwareMixer/WiiU.cpp
deleted file mode 100644
index f88425ea..00000000
--- a/src/Backends/Audio/SoftwareMixer/WiiU.cpp
+++ /dev/null
@@ -1,237 +0,0 @@
-// Released under the MIT licence.
-// See LICENCE.txt for details.
-
-#include "Backend.h"
-
-#include <math.h>
-#include <stddef.h>
-#include <stdlib.h>
-#include <string.h>
-
-#include <coreinit/cache.h>
-#include <coreinit/mutex.h>
-#include <coreinit/thread.h>
-#include <sndcore2/core.h>
-#include <sndcore2/voice.h>
-#include <sndcore2/drcvs.h>
-
-#define AUDIO_BUFFERS 2	// Double-buffer
-
-#define MIN(a, b) ((a) < (b) ? (a) : (b))
-#define MAX(a, b) ((a) > (b) ? (a) : (b))
-#define CLAMP(x, y, z) MIN(MAX((x), (y)), (z))
-
-static void (*parent_callback)(long *stream, size_t frames_total);
-
-static OSMutex sound_list_mutex;
-static OSMutex organya_mutex;
-
-static AXVoice *voices[2];
-
-static short *stream_buffers[2];
-static long *stream_buffer_long;
-static size_t buffer_length;
-
-static void FrameCallback(void)
-{
-	// We use a double-buffer: while the Wii U is busy playing one half of the buffer, we update the other.
-	// The buffer is 10ms long in total, and this function runs every 3ms.
-
-	// Just assume both voices are in-sync, and only check the first one
-	AXVoiceOffsets offsets;
-	AXGetVoiceOffsets(voices[0], &offsets);
-
-	unsigned int current_buffer = offsets.currentOffset / buffer_length;
-
-	static unsigned int last_buffer = 1;
-
-	if (current_buffer != last_buffer)
-	{
-		// Clear the mixer buffer
-		memset(stream_buffer_long, 0, buffer_length * sizeof(long) * 2);
-
-		// Fill mixer buffer
-		parent_callback(stream_buffer_long, buffer_length);
-
-		// Deinterlate samples, convert them to S16, and write them to the double-buffers
-		short *left_output_buffer = &stream_buffers[0][buffer_length * last_buffer];
-		short *right_output_buffer = &stream_buffers[1][buffer_length * last_buffer];
-
-		long *mixer_buffer_pointer = stream_buffer_long;
-		short *left_output_buffer_pointer = left_output_buffer;
-		short *right_output_buffer_pointer = right_output_buffer;
-
-		for (unsigned int i = 0; i < buffer_length; ++i)
-		{
-			const long left_sample = *mixer_buffer_pointer++;
-			const long right_sample = *mixer_buffer_pointer++;
-
-			// Clamp samples to sane limits, convert to S16, and store in double-buffers
-			if (left_sample > 0x7FFF)
-				*left_output_buffer_pointer++ = 0x7FFF;
-			else if (left_sample < -0x7FFF)
-				*left_output_buffer_pointer++ = -0x7FFF;
-			else
-				*left_output_buffer_pointer++ = (short)left_sample;
-
-			if (right_sample > 0x7FFF)
-				*right_output_buffer_pointer++ = 0x7FFF;
-			else if (right_sample < -0x7FFF)
-				*right_output_buffer_pointer++ = -0x7FFF;
-			else
-				*right_output_buffer_pointer++ = (short)right_sample;
-		}
-
-		// Make sure the sound hardware can see our data
-		DCStoreRange(left_output_buffer, buffer_length * sizeof(short));
-		DCStoreRange(right_output_buffer, buffer_length * sizeof(short));
-
-		last_buffer = current_buffer;
-	}
-}
-
-unsigned long SoftwareMixerBackend_Init(void (*callback)(long *stream, size_t frames_total))
-{
-	if (!AXIsInit())
-	{
-		AXInitParams initparams = {
-			.renderer = AX_INIT_RENDERER_48KHZ,
-			.pipeline = AX_INIT_PIPELINE_SINGLE,
-		};
-
-		AXInitWithParams(&initparams);
-	}
-
-	OSInitMutex(&sound_list_mutex);
-	OSInitMutex(&organya_mutex);
-
-	unsigned long output_frequency = AXGetInputSamplesPerSec();
-
-	buffer_length = output_frequency / 100;	// 10ms buffer
-
-	// Create and initialise two 'voices': each one will stream its own
-	// audio - one for the left speaker, and one for the right. 
-
-	// The software-mixer outputs interlaced samples into a buffer of `long`s,
-	// so create a buffer for it here.
-	stream_buffer_long = (long*)malloc(buffer_length * sizeof(long) * 2);	// `* 2` because it's an interlaced stereo buffer
-
-	if (stream_buffer_long != NULL)
-	{
-		stream_buffers[0] = (short*)malloc(buffer_length * sizeof(short) * AUDIO_BUFFERS);
-
-		if (stream_buffers[0] != NULL)
-		{
-			stream_buffers[1] = (short*)malloc(buffer_length * sizeof(short) * AUDIO_BUFFERS);
-
-			if (stream_buffers[1] != NULL)
-			{
-				voices[0] = AXAcquireVoice(31, NULL, NULL);
-
-				if (voices[0] != NULL)
-				{
-					voices[1] = AXAcquireVoice(31, NULL, NULL);
-
-					if (voices[1] != NULL)
-					{
-						for (unsigned int i = 0; i < 2; ++i)
-						{
-							AXVoiceBegin(voices[i]);
-
-							AXSetVoiceType(voices[i], 0);
-
-							AXVoiceVeData vol = {.volume = 0x8000};
-							AXSetVoiceVe(voices[i], &vol);
-
-							AXVoiceDeviceMixData mix_data[6];
-							memset(mix_data, 0, sizeof(mix_data));
-							mix_data[i].bus[0].volume = 0x8000;	// Voice 1 goes on the left speaker - voice 2 goes on the right speaker
-
-							AXSetVoiceDeviceMix(voices[i], AX_DEVICE_TYPE_DRC, 0, mix_data);
-							AXSetVoiceDeviceMix(voices[i], AX_DEVICE_TYPE_TV, 0, mix_data);
-
-							AXSetVoiceSrcRatio(voices[i], 1.0f);	// We use the native sample rate
-							AXSetVoiceSrcType(voices[i], AX_VOICE_SRC_TYPE_NONE);
-
-							AXVoiceOffsets offs = {
-								.dataType = AX_VOICE_FORMAT_LPCM16,
-								.loopingEnabled = AX_VOICE_LOOP_ENABLED,
-								.loopOffset = 0,
-								.endOffset = (buffer_length * AUDIO_BUFFERS) - 1,	// -1 or else you'll get popping!
-								.currentOffset = 0,
-								.data = stream_buffers[i]
-							};
-							AXSetVoiceOffsets(voices[i], &offs);
-
-							AXVoiceEnd(voices[i]);
-						}
-
-						parent_callback = callback;
-
-						// Register the frame callback.
-						// Apparently, this fires every 3ms - we will use
-						// it to update the stream buffers when needed.
-						AXRegisterAppFrameCallback(FrameCallback);
-
-						return output_frequency;
-					}
-
-					AXFreeVoice(voices[0]);
-				}
-
-				free(stream_buffers[1]);
-			}
-
-			free(stream_buffers[0]);
-		}
-
-		free(stream_buffer_long);
-	}
-
-	AXQuit();
-
-	return 0;
-}
-
-void SoftwareMixerBackend_Deinit(void)
-{
-	AXRegisterAppFrameCallback(NULL);
-
-	AXFreeVoice(voices[1]);
-	AXFreeVoice(voices[0]);
-
-	free(stream_buffers[1]);
-	free(stream_buffers[0]);
-
-	free(stream_buffer_long);
-
-	AXQuit();
-}
-
-bool SoftwareMixerBackend_Start(void)
-{
-	AXSetVoiceState(voices[0], AX_VOICE_STATE_PLAYING);
-	AXSetVoiceState(voices[1], AX_VOICE_STATE_PLAYING);
-
-	return true;
-}
-
-void SoftwareMixerBackend_LockMixerMutex(void)
-{
-	OSLockMutex(&sound_list_mutex);
-}
-
-void SoftwareMixerBackend_UnlockMixerMutex(void)
-{
-	OSUnlockMutex(&sound_list_mutex);
-}
-
-void SoftwareMixerBackend_LockOrganyaMutex(void)
-{
-	OSLockMutex(&organya_mutex);
-}
-
-void SoftwareMixerBackend_UnlockOrganyaMutex(void)
-{
-	OSUnlockMutex(&organya_mutex);
-}
diff --git a/src/Backends/Audio/SoftwareMixer/miniaudio.cpp b/src/Backends/Audio/SoftwareMixer/miniaudio.cpp
deleted file mode 100644
index b3021734..00000000
--- a/src/Backends/Audio/SoftwareMixer/miniaudio.cpp
+++ /dev/null
@@ -1,170 +0,0 @@
-// Released under the MIT licence.
-// See LICENCE.txt for details.
-
-#include "Backend.h"
-
-#include <stddef.h>
-#include <string.h>
-
-#define MINIAUDIO_IMPLEMENTATION
-#define MA_NO_DECODING
-#define MA_NO_ENCODING
-#define MA_NO_WAV
-#define MA_NO_FLAC
-#define MA_NO_MP3
-#define MA_API static
-#include "../../../../external/miniaudio.h"
-
-#include "../../Misc.h"
-
-#define MIN(a, b) ((a) < (b) ? (a) : (b))
-
-static void (*parent_callback)(long *stream, size_t frames_total);
-
-static ma_context context;
-static ma_device device;
-static ma_mutex mutex;
-static ma_mutex organya_mutex;
-
-static void Callback(ma_device *device, void *output_stream, const void *input_stream, ma_uint32 frames_total)
-{
-	(void)device;
-	(void)input_stream;
-
-	short *stream = (short*)output_stream;
-
-	size_t frames_done = 0;
-
-	while (frames_done != frames_total)
-	{
-		long mix_buffer[0x800 * 2];	// 2 because stereo
-
-		size_t subframes = MIN(0x800, frames_total - frames_done);
-
-		memset(mix_buffer, 0, subframes * sizeof(long) * 2);
-
-		parent_callback(mix_buffer, subframes);
-
-		for (size_t i = 0; i < subframes * 2; ++i)
-		{
-			if (mix_buffer[i] > 0x7FFF)
-				*stream++ = 0x7FFF;
-			else if (mix_buffer[i] < -0x7FFF)
-				*stream++ = -0x7FFF;
-			else
-				*stream++ = mix_buffer[i];
-		}
-
-		frames_done += subframes;
-	}
-}
-
-unsigned long SoftwareMixerBackend_Init(void (*callback)(long *stream, size_t frames_total))
-{
-	ma_device_config config = ma_device_config_init(ma_device_type_playback);
-	config.playback.pDeviceID = NULL;
-	config.playback.format = ma_format_s16;
-	config.playback.channels = 2;
-	config.sampleRate = 0;	// Let miniaudio decide what sample rate to use
-	config.dataCallback = Callback;
-	config.pUserData = NULL;
-
-	ma_result return_value;
-
-	return_value = ma_context_init(NULL, 0, NULL, &context);
-
-	if (return_value == MA_SUCCESS)
-	{
-		return_value = ma_device_init(&context, &config, &device);
-
-		if (return_value == MA_SUCCESS)
-		{
-			return_value = ma_mutex_init(&mutex);
-
-			if (return_value == MA_SUCCESS)
-			{
-				return_value = ma_mutex_init(&organya_mutex);
-
-				if (return_value == MA_SUCCESS)
-				{
-					parent_callback = callback;
-
-					return device.sampleRate;
-				}
-				else
-				{
-					Backend_PrintError("Failed to create organya mutex: %s", ma_result_description(return_value));
-				}
-
-				ma_mutex_uninit(&mutex);
-			}
-			else
-			{
-				Backend_PrintError("Failed to create mutex: %s", ma_result_description(return_value));
-			}
-
-			ma_device_uninit(&device);
-		}
-		else
-		{
-			Backend_PrintError("Failed to initialize playback device: %s", ma_result_description(return_value));
-		}
-
-		ma_context_uninit(&context);
-	}
-	else
-	{
-		Backend_PrintError("Failed to initialize context: %s", ma_result_description(return_value));
-	}
-
-	return 0;
-}
-
-void SoftwareMixerBackend_Deinit(void)
-{
-	ma_result return_value = ma_device_stop(&device);
-
-	if (return_value != MA_SUCCESS)
-		Backend_PrintError("Failed to stop playback device: %s", ma_result_description(return_value));
-
-	ma_mutex_uninit(&organya_mutex);
-
-	ma_mutex_uninit(&mutex);
-
-	ma_device_uninit(&device);
-
-	ma_context_uninit(&context);
-}
-
-bool SoftwareMixerBackend_Start(void)
-{
-	ma_result return_value = ma_device_start(&device);
-
-	if (return_value != MA_SUCCESS)
-	{
-		Backend_PrintError("Failed to start playback device: %s", ma_result_description(return_value));
-		return false;
-	}
-
-	return true;
-}
-
-void SoftwareMixerBackend_LockMixerMutex(void)
-{
-	ma_mutex_lock(&mutex);
-}
-
-void SoftwareMixerBackend_UnlockMixerMutex(void)
-{
-	ma_mutex_unlock(&mutex);
-}
-
-void SoftwareMixerBackend_LockOrganyaMutex(void)
-{
-	ma_mutex_lock(&organya_mutex);
-}
-
-void SoftwareMixerBackend_UnlockOrganyaMutex(void)
-{
-	ma_mutex_unlock(&organya_mutex);
-}
diff --git a/src/Backends/Audio/WiiU.cpp b/src/Backends/Audio/WiiU.cpp
deleted file mode 100644
index 8e615d9a..00000000
--- a/src/Backends/Audio/WiiU.cpp
+++ /dev/null
@@ -1,425 +0,0 @@
-// Released under the MIT licence.
-// See LICENCE.txt for details.
-
-// This darned thing doesn't work - sounds just randomly refuse to play,
-// particularly the ones used by Organya.
-
-// If anyone could figure out what causes this, that would be great.
-
-#include "../Audio.h"
-
-#include <math.h>
-#include <stddef.h>
-#include <stdlib.h>
-#include <string.h>
-
-#include <coreinit/cache.h>
-#include <coreinit/mutex.h>
-#include <coreinit/thread.h>
-#include <sndcore2/core.h>
-#include <sndcore2/voice.h>
-#include <sndcore2/drcvs.h>
-
-#define MIN(a, b) ((a) < (b) ? (a) : (b))
-#define MAX(a, b) ((a) > (b) ? (a) : (b))
-#define CLAMP(x, y, z) MIN(MAX((x), (y)), (z))
-
-struct AudioBackend_Sound
-{
-	signed char *samples;
-	size_t length;
-	AXVoice *voice;
-	unsigned int frequency;
-	unsigned short volume;
-	unsigned short pan_l;
-	unsigned short pan_r;
-
-	struct AudioBackend_Sound *next;
-};
-
-static void (*organya_callback)(void);
-static unsigned int organya_milliseconds;
-
-static unsigned long ticks_per_second;
-
-static OSMutex sound_list_mutex;
-static OSMutex organya_mutex;
-
-static AudioBackend_Sound *sound_list_head;
-
-static void CullVoices(void)
-{
-	// Free any voices that aren't playing anymore
-	OSLockMutex(&sound_list_mutex);
-
-	for (AudioBackend_Sound *sound = sound_list_head; sound != NULL; sound = sound->next)
-	{
-		if (sound->voice != NULL)
-		{
-			if (!AXIsVoiceRunning(sound->voice))
-			{
-				AXVoiceBegin(sound->voice);
-				AXFreeVoice(sound->voice);
-				AXVoiceEnd(sound->voice);
-				sound->voice = NULL;
-			}
-		}
-	}
-
-	OSUnlockMutex(&sound_list_mutex);
-}
-
-static double MillibelToScale(long volume)
-{
-	// Volume is in hundredths of a decibel, from 0 to -10000
-	volume = CLAMP(volume, -10000, 0);
-	return pow(10.0, volume / 2000.0);
-}
-
-static unsigned long GetTicksMilliseconds(void)
-{
-	static uint64_t accumulator;
-
-	static unsigned long last_tick;
-
-	unsigned long current_tick = OSGetTick();
-
-	accumulator += current_tick - last_tick;
-
-	last_tick = current_tick;
-
-	return (accumulator * 1000) / ticks_per_second;
-}
-
-static int ThreadFunction(int argc, const char *argv[])
-{
-	for (;;)
-	{
-		OSTestThreadCancel();
-
-		OSLockMutex(&organya_mutex);
-
-		if (organya_milliseconds == 0)
-		{
-			OSUnlockMutex(&organya_mutex);
-
-			// Do nothing
-			OSSleepTicks(ticks_per_second / 1000);
-		}
-		else
-		{
-			OSUnlockMutex(&organya_mutex);
-
-			// Update Organya
-			static unsigned long next_ticks;
-
-			for (;;)
-			{
-				unsigned long ticks = GetTicksMilliseconds();
-
-				if (ticks >= next_ticks)
-					break;
-
-				OSSleepTicks(ticks_per_second / 1000);
-			}
-
-			OSLockMutex(&organya_mutex);
-			next_ticks += organya_milliseconds;
-			OSUnlockMutex(&organya_mutex);
-
-			OSLockMutex(&sound_list_mutex);
-			organya_callback();
-			OSUnlockMutex(&sound_list_mutex);
-		}
-	}
-
-	return 0;
-}
-
-bool AudioBackend_Init(void)
-{
-	if (!AXIsInit())
-	{
-		AXInitParams initparams = {
-			.renderer = AX_INIT_RENDERER_48KHZ,
-			.pipeline = AX_INIT_PIPELINE_SINGLE,
-		};
-
-		AXInitWithParams(&initparams);
-	}
-
-	ticks_per_second = OSGetSystemInfo()->busClockSpeed / 4;
-
-	OSInitMutex(&sound_list_mutex);
-	OSInitMutex(&organya_mutex);
-
-	OSRunThread(OSGetDefaultThread(0), ThreadFunction, 0, NULL);
-
-	return true;
-}
-
-void AudioBackend_Deinit(void)
-{
-	OSCancelThread(OSGetDefaultThread(0));
-
-	OSJoinThread(OSGetDefaultThread(0), NULL);
-
-	AXQuit();
-}
-
-AudioBackend_Sound* AudioBackend_CreateSound(unsigned int frequency, const unsigned char *samples, size_t length)
-{
-	AudioBackend_Sound *sound = (AudioBackend_Sound*)malloc(sizeof(AudioBackend_Sound));
-
-	if (sound != NULL)
-	{
-		signed char *samples_copy = (signed char*)malloc(length);
-
-		if (samples_copy != NULL)
-		{
-			// Convert to signed
-			for (size_t i = 0; i < length; ++i)
-				samples_copy[i] = samples[i] - 0x80;
-
-			DCStoreRange(samples_copy, length);
-
-			sound->samples = samples_copy;
-			sound->length = length;
-			sound->voice = NULL;
-			sound->frequency = frequency;
-			sound->volume = 0x8000;
-			sound->pan_l = 0x8000;
-			sound->pan_r = 0x8000;
-
-			OSLockMutex(&sound_list_mutex);
-			sound->next = sound_list_head;
-			sound_list_head = sound;
-			OSUnlockMutex(&sound_list_mutex);
-
-			return sound;
-		}
-
-		free(sound);
-	}
-
-	return NULL;
-}
-
-void AudioBackend_DestroySound(AudioBackend_Sound *sound)
-{
-	if (sound == NULL)
-		return;
-
-	OSLockMutex(&sound_list_mutex);
-
-	// Unhook sound from the linked-list
-	for (AudioBackend_Sound **sound_pointer = &sound_list_head; *sound_pointer != NULL; sound_pointer = &(*sound_pointer)->next)
-	{
-		if (*sound_pointer == sound)
-		{
-			*sound_pointer = sound->next;
-			break;
-		}
-	}
-
-	OSUnlockMutex(&sound_list_mutex);
-
-	if (sound->voice != NULL)
-	{
-		AXVoiceBegin(sound->voice);
-		AXFreeVoice(sound->voice);
-		AXVoiceEnd(sound->voice);
-	}
-
-	free(sound->samples);
-	free(sound);
-}
-
-void AudioBackend_PlaySound(AudioBackend_Sound *sound, bool looping)
-{
-	if (sound == NULL)
-		return;
-
-	CullVoices();
-
-	OSLockMutex(&sound_list_mutex);
-
-	if (sound->voice == NULL)
-	{
-		AXVoice *voice = AXAcquireVoice(31, NULL, NULL);
-
-		if (voice != NULL)
-		{
-			AXVoiceBegin(voice);
-
-			AXSetVoiceType(voice, 0);
-
-			AXVoiceVeData vol = {.volume = sound->volume};
-			AXSetVoiceVe(voice, &vol);
-
-			AXVoiceDeviceMixData mix_data[6];
-			memset(mix_data, 0, sizeof(mix_data));
-			mix_data[0].bus[0].volume = sound->pan_l;
-			mix_data[1].bus[0].volume = sound->pan_r;
-
-			AXSetVoiceDeviceMix(voice, AX_DEVICE_TYPE_DRC, 0, mix_data);
-			AXSetVoiceDeviceMix(voice, AX_DEVICE_TYPE_TV, 0, mix_data);
-
-			float srcratio = (float)sound->frequency / (float)AXGetInputSamplesPerSec();
-			AXSetVoiceSrcRatio(voice, srcratio);
-			AXSetVoiceSrcType(voice, AX_VOICE_SRC_TYPE_LINEAR);
-
-			AXVoiceOffsets offs;
-			offs.dataType = AX_VOICE_FORMAT_LPCM8;
-			offs.endOffset = sound->length;
-			offs.loopingEnabled = AX_VOICE_LOOP_DISABLED;
-			offs.loopOffset = 0;
-			offs.currentOffset = 0;
-			offs.data = sound->samples;
-			AXSetVoiceOffsets(voice, &offs);
-
-			AXVoiceEnd(voice);
-
-			sound->voice = voice;
-		}
-	}
-
-	if (sound->voice != NULL)
-	{
-		AXVoiceBegin(sound->voice);
-
-		AXSetVoiceLoop(sound->voice, looping ? AX_VOICE_LOOP_ENABLED : AX_VOICE_LOOP_DISABLED);
-		AXSetVoiceState(sound->voice, AX_VOICE_STATE_PLAYING);
-
-		AXVoiceEnd(sound->voice);
-	}
-
-	OSUnlockMutex(&sound_list_mutex);
-}
-
-void AudioBackend_StopSound(AudioBackend_Sound *sound)
-{
-	if (sound == NULL)
-		return;
-
-	OSLockMutex(&sound_list_mutex);
-
-	if (sound->voice != NULL)
-	{
-		AXVoiceBegin(sound->voice);
-
-		AXSetVoiceState(sound->voice, AX_VOICE_STATE_STOPPED);
-
-		AXVoiceEnd(sound->voice);
-	}
-
-	OSUnlockMutex(&sound_list_mutex);
-}
-
-void AudioBackend_RewindSound(AudioBackend_Sound *sound)
-{
-	if (sound == NULL)
-		return;
-
-	OSLockMutex(&sound_list_mutex);
-
-	if (sound->voice != NULL)
-	{
-		AXVoiceBegin(sound->voice);
-
-		AXSetVoiceCurrentOffset(sound->voice, 0);
-
-		AXVoiceEnd(sound->voice);
-	}
-
-	OSUnlockMutex(&sound_list_mutex);
-}
-
-void AudioBackend_SetSoundFrequency(AudioBackend_Sound *sound, unsigned int frequency)
-{
-	if (sound == NULL)
-		return;
-
-	OSLockMutex(&sound_list_mutex);
-
-	sound->frequency = frequency;
-
-	if (sound->voice != NULL)
-	{
-		AXVoiceBegin(sound->voice);
-
-		float srcratio = (float)frequency / (float)AXGetInputSamplesPerSec();
-		AXSetVoiceSrcRatio(sound->voice, srcratio);
-
-		AXVoiceEnd(sound->voice);
-	}
-
-	OSUnlockMutex(&sound_list_mutex);
-}
-
-void AudioBackend_SetSoundVolume(AudioBackend_Sound *sound, long volume)
-{
-	if (sound == NULL)
-		return;
-
-	OSLockMutex(&sound_list_mutex);
-
-	sound->volume = (unsigned short)(0x8000 * MillibelToScale(volume));
-
-	if (sound->voice != NULL)
-	{
-		AXVoiceBegin(sound->voice);
-
-		AXVoiceVeData vol = {.volume = sound->volume};
-
-		AXSetVoiceVe(sound->voice, &vol);
-
-		AXVoiceEnd(sound->voice);
-	}
-
-	OSUnlockMutex(&sound_list_mutex);
-}
-
-void AudioBackend_SetSoundPan(AudioBackend_Sound *sound, long pan)
-{
-	if (sound == NULL)
-		return;
-
-	OSLockMutex(&sound_list_mutex);
-
-	sound->pan_l = (unsigned short)(0x8000 * MillibelToScale(-pan));
-	sound->pan_r = (unsigned short)(0x8000 * MillibelToScale(pan));
-
-	if (sound->voice != NULL)
-	{
-		AXVoiceBegin(sound->voice);
-
-		AXVoiceDeviceMixData mix_data[6];
-		memset(mix_data, 0, sizeof(mix_data));
-		mix_data[0].bus[0].volume = sound->pan_l;
-		mix_data[1].bus[0].volume = sound->pan_r;
-
-		AXSetVoiceDeviceMix(sound->voice, AX_DEVICE_TYPE_DRC, 0, mix_data);
-		AXSetVoiceDeviceMix(sound->voice, AX_DEVICE_TYPE_TV, 0, mix_data);
-
-		AXVoiceEnd(sound->voice);
-	}
-
-	OSUnlockMutex(&sound_list_mutex);
-}
-
-void AudioBackend_SetOrganyaCallback(void (*callback)(void))
-{
-	// As far as thread-safety goes - this is guarded by
-	// `organya_milliseconds`, which is guarded by `organya_mutex`.
-	organya_callback = callback;
-}
-
-void AudioBackend_SetOrganyaTimer(unsigned int milliseconds)
-{
-	OSLockMutex(&organya_mutex);
-
-	organya_milliseconds = milliseconds;
-
-	OSUnlockMutex(&organya_mutex);
-}
diff --git a/src/Backends/Controller/GLFW3.cpp b/src/Backends/Controller/GLFW3.cpp
deleted file mode 100644
index ea73ce48..00000000
--- a/src/Backends/Controller/GLFW3.cpp
+++ /dev/null
@@ -1,172 +0,0 @@
-// Released under the MIT licence.
-// See LICENCE.txt for details.
-
-#include "../Controller.h"
-
-#include <stddef.h>
-#include <stdlib.h>
-
-#define GLFW_INCLUDE_NONE
-#include <GLFW/glfw3.h>
-
-#include "../Misc.h"
-
-#define DEADZONE (10000.0f / 32767.0f)
-
-static bool joystick_connected;
-static int connected_joystick_id;
-
-static float *axis_neutrals;
-
-static void JoystickCallback(int joystick_id, int event)
-{
-	switch (event)
-	{
-		case GLFW_CONNECTED:
-			Backend_PrintInfo("Joystick #%d connected - %s", joystick_id, glfwGetJoystickName(joystick_id));
-
-			if (!joystick_connected)
-			{
-				int total_axes;
-				const float *axes = glfwGetJoystickAxes(joystick_id, &total_axes);
-
-				int total_buttons;
-				const unsigned char *buttons = glfwGetJoystickButtons(joystick_id, &total_buttons);
-
-				if (total_axes >= 2 && total_buttons >= 6)
-				{
-#if GLFW_VERSION_MAJOR > 3 || (GLFW_VERSION_MAJOR == 3 && GLFW_VERSION_MINOR >= 3)
-					if (glfwJoystickIsGamepad(joystick_id) == GLFW_TRUE)	// Avoid selecting things like laptop touchpads
-#endif
-					{
-						// Set up neutral axes
-						axis_neutrals = (float*)malloc(sizeof(float) * total_axes);
-
-						if (axis_neutrals != NULL)
-						{
-							for (int i = 0; i < total_axes; ++i)
-								axis_neutrals[i] = axes[i];
-
-							Backend_PrintInfo("Joystick #%d selected\n", joystick_id);
-							joystick_connected = true;
-							connected_joystick_id = joystick_id;
-						}
-						else
-						{
-							Backend_PrintError("Couldn't allocate memory for joystick axes");
-						}
-					}
-				}
-			}
-
-			break;
-
-		case GLFW_DISCONNECTED:
-			if (joystick_connected && joystick_id == connected_joystick_id)
-			{
-				Backend_PrintInfo("Joystick #%d disconnected", connected_joystick_id);
-				joystick_connected = false;
-
-				free(axis_neutrals);
-			}
-
-			break;
-	}
-}
-
-bool ControllerBackend_Init(void)
-{
-	// Connect joysticks that are already plugged-in
-	for (int i = GLFW_JOYSTICK_1; i < GLFW_JOYSTICK_LAST; ++i)
-		if (glfwJoystickPresent(i) == GLFW_TRUE)
-			JoystickCallback(i, GLFW_CONNECTED);
-
-	// Set-up the callback for future (dis)connections
-	glfwSetJoystickCallback(JoystickCallback);
-
-	return true;
-}
-
-void ControllerBackend_Deinit(void)
-{
-	glfwSetJoystickCallback(NULL);
-
-	joystick_connected = false;
-	connected_joystick_id = 0;
-
-	free(axis_neutrals);
-	axis_neutrals = NULL;
-}
-
-bool ControllerBackend_GetJoystickStatus(bool **buttons, unsigned int *button_count, short **axes, unsigned int *axis_count)
-{
-	if (!joystick_connected)
-		return false;
-
-	int total_glfw_buttons;
-	const unsigned char *glfw_buttons = glfwGetJoystickButtons(connected_joystick_id, &total_glfw_buttons);
-
-	int total_glfw_axes;
-	const float *glfw_axes = glfwGetJoystickAxes(connected_joystick_id, &total_glfw_axes);
-
-	int total_glfw_hats = 0;
-#if GLFW_VERSION_MAJOR > 3 || (GLFW_VERSION_MAJOR == 3 && GLFW_VERSION_MINOR >= 3)
-	const unsigned char *glfw_hats = glfwGetJoystickHats(connected_joystick_id, &total_glfw_hats);
-#endif
-
-	*button_count = total_glfw_buttons + total_glfw_axes * 2 + total_glfw_hats * 4;
-	*axis_count = total_glfw_axes;
-
-	static bool *button_buffer = NULL;
-	static short *axis_buffer = NULL;
-
-	bool *new_button_buffer = (bool*)realloc(button_buffer, *button_count * sizeof(bool));
-	short *new_axis_buffer = (short*)realloc(axis_buffer, *axis_count * sizeof(short));
-
-	if (new_button_buffer == NULL || new_axis_buffer == NULL)
-		return false;
-
-	button_buffer = new_button_buffer;
-	axis_buffer = new_axis_buffer;
-
-	//////////////////////////
-	// Handle button inputs //
-	//////////////////////////
-
-	unsigned int current_button = 0;
-
-	// Start with the joystick buttons
-	for (int i = 0; i < total_glfw_buttons; ++i)
-		button_buffer[current_button++] = glfw_buttons[i] == GLFW_PRESS;
-
-	// Then the joystick axes
-	for (int i = 0; i < total_glfw_axes; ++i)
-	{
-		button_buffer[current_button++] = glfw_axes[i] < axis_neutrals[i] - DEADZONE;
-		button_buffer[current_button++] = glfw_axes[i] > axis_neutrals[i] + DEADZONE;
-	}
-
-#if GLFW_VERSION_MAJOR > 3 || (GLFW_VERSION_MAJOR == 3 && GLFW_VERSION_MINOR >= 3)
-	// Then the joystick hats
-	for (int i = 0; i < total_glfw_hats; ++i)
-	{
-		button_buffer[current_button++] = glfw_hats[i] & GLFW_HAT_UP;
-		button_buffer[current_button++] = glfw_hats[i] & GLFW_HAT_RIGHT;
-		button_buffer[current_button++] = glfw_hats[i] & GLFW_HAT_DOWN;
-		button_buffer[current_button++] = glfw_hats[i] & GLFW_HAT_LEFT;
-	}
-#endif
-
-	*buttons = button_buffer;
-
-	////////////////////////
-	// Handle axis inputs //
-	////////////////////////
-
-	for (int i = 0; i < total_glfw_axes; ++i)
-		axis_buffer[i] = (short)(glfw_axes[i] * 0x7FFF);
-
-	*axes = axis_buffer;
-
-	return true;
-}
diff --git a/src/Backends/Controller/Null.cpp b/src/Backends/Controller/Null.cpp
deleted file mode 100644
index f77a2fdd..00000000
--- a/src/Backends/Controller/Null.cpp
+++ /dev/null
@@ -1,24 +0,0 @@
-// Released under the MIT licence.
-// See LICENCE.txt for details.
-
-#include "../Controller.h"
-
-bool ControllerBackend_Init(void)
-{
-	return false;
-}
-
-void ControllerBackend_Deinit(void)
-{
-	
-}
-
-bool ControllerBackend_GetJoystickStatus(bool **buttons, unsigned int *button_count, short **axes, unsigned int *axis_count)
-{
-	(void)buttons;
-	(void)button_count;
-	(void)axes;
-	(void)axis_count;
-
-	return false;
-}
diff --git a/src/Backends/Platform/3DS.cpp b/src/Backends/Platform/3DS.cpp
deleted file mode 100644
index ee0cda26..00000000
--- a/src/Backends/Platform/3DS.cpp
+++ /dev/null
@@ -1,152 +0,0 @@
-// Released under the MIT licence.
-// See LICENCE.txt for details.
-
-#include "../Misc.h"
-
-#include <stdarg.h>
-#include <stdio.h>
-#include <string.h>
-#include <string>
-
-#include <sys/stat.h>
-#include <sys/types.h>
-
-#include <3ds.h>
-
-bool Backend_Init(void (*drag_and_drop_callback)(const char *path), void (*window_focus_callback)(bool focus))
-{
-	(void)drag_and_drop_callback;
-	(void)window_focus_callback;
-
-	gfxInitDefault();
-	consoleInit(GFX_BOTTOM, NULL);
-
-	if (R_SUCCEEDED(romfsInit()))
-	{
-//		osSetSpeedupEnable(true); // Enable New3DS speedup, since this doesn't run very well on Old3DSs yet
-
-		return true;
-	}
-	else
-	{
-		Backend_PrintError("Could not initialise romfs");
-	}
-
-	return false;
-}
-
-void Backend_Deinit(void)
-{
-	romfsExit();
-
-	gfxExit();
-}
-
-void Backend_PostWindowCreation(void)
-{
-	// Nothing to do here
-}
-
-bool Backend_GetPaths(std::string *module_path, std::string *data_path)
-{
-	// Create the CSE2 folder if it doesn't already exist
-	mkdir("sdmc:/3ds", 0777);
-	mkdir("sdmc:/3ds/data", 0777);
-	mkdir("sdmc:/3ds/data/cse2", 0777);
-
-	// Configuration files and save data goes on the read-write SD card
-	*module_path = "sdmc:/3ds/data/cse2";
-
-	// Data goes in the read-only ROMFS
-	*data_path = "romfs:";
-
-	return true;
-}
-
-void Backend_HideMouse(void)
-{
-	
-}
-
-void Backend_SetWindowIcon(const unsigned char *rgb_pixels, size_t width, size_t height)
-{
-	(void)rgb_pixels;
-	(void)width;
-	(void)height;
-}
-
-void Backend_SetCursor(const unsigned char *rgba_pixels, size_t width, size_t height)
-{
-	(void)rgba_pixels;
-	(void)width;
-	(void)height;
-}
-
-void Backend_EnableDragAndDrop(void)
-{
-	
-}
-
-bool Backend_SystemTask(bool active)
-{
-	(void)active;
-
-	return true;
-}
-
-void Backend_GetKeyboardState(bool *keyboard_state)
-{
-	memset(keyboard_state, 0, sizeof(bool) * BACKEND_KEYBOARD_TOTAL);
-
-	// Read controller
-	hidScanInput();
-
-	u32 buttons = hidKeysHeld();
-
-	keyboard_state[BACKEND_KEYBOARD_UP] |= buttons & KEY_UP;
-	keyboard_state[BACKEND_KEYBOARD_DOWN] |= buttons & KEY_DOWN;
-	keyboard_state[BACKEND_KEYBOARD_LEFT] |= buttons & KEY_LEFT;
-	keyboard_state[BACKEND_KEYBOARD_RIGHT] |= buttons & KEY_RIGHT;
-	keyboard_state[BACKEND_KEYBOARD_Z] |= buttons & KEY_B;                               // Jump
-	keyboard_state[BACKEND_KEYBOARD_X] |= buttons & KEY_Y;                               // Shoot
-	keyboard_state[BACKEND_KEYBOARD_Q] |= buttons & (KEY_A | KEY_START);                 // Inventory
-	keyboard_state[BACKEND_KEYBOARD_W] |= buttons & (KEY_X | KEY_SELECT);                // Map
-	keyboard_state[BACKEND_KEYBOARD_A] |= buttons & (KEY_L | KEY_ZR | KEY_CSTICK_LEFT);  // Weapon left
-	keyboard_state[BACKEND_KEYBOARD_S] |= buttons & (KEY_R | KEY_ZL | KEY_CSTICK_RIGHT); // Weapon right
-}
-
-void Backend_ShowMessageBox(const char *title, const char *message)
-{
-	Backend_PrintInfo("ShowMessageBox - %s - %s", title, message);
-}
-
-ATTRIBUTE_FORMAT_PRINTF(1, 2) void Backend_PrintError(const char *format, ...)
-{
-	va_list argumentList;
-	va_start(argumentList, format);
-	fputs("ERROR: ", stderr);
-	vfprintf(stderr, format, argumentList);
-	fputc('\n', stderr);
-	va_end(argumentList);
-}
-
-ATTRIBUTE_FORMAT_PRINTF(1, 2) void Backend_PrintInfo(const char *format, ...)
-{
-	va_list argumentList;
-	va_start(argumentList, format);
-	fputs("INFO: ", stdout);
-	vfprintf(stdout, format, argumentList);
-	fputc('\n', stdout);
-	va_end(argumentList);
-}
-
-unsigned long Backend_GetTicks(void)
-{
-	return svcGetSystemTick() / CPU_TICKS_PER_MSEC;
-}
-
-void Backend_Delay(unsigned int ticks)
-{
-	// svcSleepThread measures in nanoseconds
-	svcSleepThread(ticks * 1000000);
-}
diff --git a/src/Backends/Platform/GLFW3.cpp b/src/Backends/Platform/GLFW3.cpp
deleted file mode 100644
index ce2eb013..00000000
--- a/src/Backends/Platform/GLFW3.cpp
+++ /dev/null
@@ -1,309 +0,0 @@
-// Released under the MIT licence.
-// See LICENCE.txt for details.
-
-#include "../Misc.h"
-
-#include <stdarg.h>
-#include <stddef.h>
-#include <stdio.h>
-#include <stdlib.h>
-#include <string.h>
-#include <string>
-
-#if __cplusplus >= 201103L
-	#include <chrono>
-	#include <thread>
-#elif defined(_WIN32)
-	#include "windows.h"
-#else
-	#include <unistd.h>
-#endif
-
-#include <GLFW/glfw3.h>
-
-#include "../Rendering.h"
-#include "../Shared/GLFW3.h"
-#include "../../Attributes.h"
-
-#define DO_KEY(GLFW_KEY, BACKEND_KEY) \
-	case GLFW_KEY: \
-		keyboard_state[BACKEND_KEY] = action == GLFW_PRESS; \
-		break;
-
-static bool keyboard_state[BACKEND_KEYBOARD_TOTAL];
-
-static GLFWcursor* cursor;
-
-static void (*drag_and_drop_callback)(const char *path);
-static void (*window_focus_callback)(bool focus);
-
-static void KeyCallback(GLFWwindow *window, int key, int scancode, int action, int mods)
-{
-	(void)window;
-	(void)scancode;
-	(void)mods;
-
-	switch (action)
-	{
-		case GLFW_RELEASE:
-		case GLFW_PRESS:
-			switch (key)
-			{
-				DO_KEY(GLFW_KEY_A, BACKEND_KEYBOARD_A)
-				DO_KEY(GLFW_KEY_B, BACKEND_KEYBOARD_B)
-				DO_KEY(GLFW_KEY_C, BACKEND_KEYBOARD_C)
-				DO_KEY(GLFW_KEY_D, BACKEND_KEYBOARD_D)
-				DO_KEY(GLFW_KEY_E, BACKEND_KEYBOARD_E)
-				DO_KEY(GLFW_KEY_F, BACKEND_KEYBOARD_F)
-				DO_KEY(GLFW_KEY_G, BACKEND_KEYBOARD_G)
-				DO_KEY(GLFW_KEY_H, BACKEND_KEYBOARD_H)
-				DO_KEY(GLFW_KEY_I, BACKEND_KEYBOARD_I)
-				DO_KEY(GLFW_KEY_J, BACKEND_KEYBOARD_J)
-				DO_KEY(GLFW_KEY_K, BACKEND_KEYBOARD_K)
-				DO_KEY(GLFW_KEY_L, BACKEND_KEYBOARD_L)
-				DO_KEY(GLFW_KEY_M, BACKEND_KEYBOARD_M)
-				DO_KEY(GLFW_KEY_N, BACKEND_KEYBOARD_N)
-				DO_KEY(GLFW_KEY_O, BACKEND_KEYBOARD_O)
-				DO_KEY(GLFW_KEY_P, BACKEND_KEYBOARD_P)
-				DO_KEY(GLFW_KEY_Q, BACKEND_KEYBOARD_Q)
-				DO_KEY(GLFW_KEY_R, BACKEND_KEYBOARD_R)
-				DO_KEY(GLFW_KEY_S, BACKEND_KEYBOARD_S)
-				DO_KEY(GLFW_KEY_T, BACKEND_KEYBOARD_T)
-				DO_KEY(GLFW_KEY_U, BACKEND_KEYBOARD_U)
-				DO_KEY(GLFW_KEY_V, BACKEND_KEYBOARD_V)
-				DO_KEY(GLFW_KEY_W, BACKEND_KEYBOARD_W)
-				DO_KEY(GLFW_KEY_X, BACKEND_KEYBOARD_X)
-				DO_KEY(GLFW_KEY_Y, BACKEND_KEYBOARD_Y)
-				DO_KEY(GLFW_KEY_Z, BACKEND_KEYBOARD_Z)
-				DO_KEY(GLFW_KEY_0, BACKEND_KEYBOARD_0)
-				DO_KEY(GLFW_KEY_1, BACKEND_KEYBOARD_1)
-				DO_KEY(GLFW_KEY_2, BACKEND_KEYBOARD_2)
-				DO_KEY(GLFW_KEY_3, BACKEND_KEYBOARD_3)
-				DO_KEY(GLFW_KEY_4, BACKEND_KEYBOARD_4)
-				DO_KEY(GLFW_KEY_5, BACKEND_KEYBOARD_5)
-				DO_KEY(GLFW_KEY_6, BACKEND_KEYBOARD_6)
-				DO_KEY(GLFW_KEY_7, BACKEND_KEYBOARD_7)
-				DO_KEY(GLFW_KEY_8, BACKEND_KEYBOARD_8)
-				DO_KEY(GLFW_KEY_9, BACKEND_KEYBOARD_9)
-				DO_KEY(GLFW_KEY_F1, BACKEND_KEYBOARD_F1)
-				DO_KEY(GLFW_KEY_F2, BACKEND_KEYBOARD_F2)
-				DO_KEY(GLFW_KEY_F3, BACKEND_KEYBOARD_F3)
-				DO_KEY(GLFW_KEY_F4, BACKEND_KEYBOARD_F4)
-				DO_KEY(GLFW_KEY_F5, BACKEND_KEYBOARD_F5)
-				DO_KEY(GLFW_KEY_F6, BACKEND_KEYBOARD_F6)
-				DO_KEY(GLFW_KEY_F7, BACKEND_KEYBOARD_F7)
-				DO_KEY(GLFW_KEY_F8, BACKEND_KEYBOARD_F8)
-				DO_KEY(GLFW_KEY_F9, BACKEND_KEYBOARD_F9)
-				DO_KEY(GLFW_KEY_F10, BACKEND_KEYBOARD_F10)
-				DO_KEY(GLFW_KEY_F11, BACKEND_KEYBOARD_F11)
-				DO_KEY(GLFW_KEY_F12, BACKEND_KEYBOARD_F12)
-				DO_KEY(GLFW_KEY_UP, BACKEND_KEYBOARD_UP)
-				DO_KEY(GLFW_KEY_DOWN, BACKEND_KEYBOARD_DOWN)
-				DO_KEY(GLFW_KEY_LEFT, BACKEND_KEYBOARD_LEFT)
-				DO_KEY(GLFW_KEY_RIGHT, BACKEND_KEYBOARD_RIGHT)
-				DO_KEY(GLFW_KEY_ESCAPE, BACKEND_KEYBOARD_ESCAPE)
-				DO_KEY(GLFW_KEY_GRAVE_ACCENT, BACKEND_KEYBOARD_BACK_QUOTE)
-				DO_KEY(GLFW_KEY_TAB, BACKEND_KEYBOARD_TAB)
-				DO_KEY(GLFW_KEY_CAPS_LOCK, BACKEND_KEYBOARD_CAPS_LOCK)
-				DO_KEY(GLFW_KEY_LEFT_SHIFT, BACKEND_KEYBOARD_LEFT_SHIFT)
-				DO_KEY(GLFW_KEY_LEFT_CONTROL, BACKEND_KEYBOARD_LEFT_CTRL)
-				DO_KEY(GLFW_KEY_LEFT_ALT, BACKEND_KEYBOARD_LEFT_ALT)
-				DO_KEY(GLFW_KEY_SPACE, BACKEND_KEYBOARD_SPACE)
-				DO_KEY(GLFW_KEY_RIGHT_ALT, BACKEND_KEYBOARD_RIGHT_ALT)
-				DO_KEY(GLFW_KEY_RIGHT_CONTROL, BACKEND_KEYBOARD_RIGHT_CTRL)
-				DO_KEY(GLFW_KEY_RIGHT_SHIFT, BACKEND_KEYBOARD_RIGHT_SHIFT)
-				DO_KEY(GLFW_KEY_ENTER, BACKEND_KEYBOARD_ENTER)
-				DO_KEY(GLFW_KEY_BACKSPACE, BACKEND_KEYBOARD_BACKSPACE)
-				DO_KEY(GLFW_KEY_MINUS, BACKEND_KEYBOARD_MINUS)
-				DO_KEY(GLFW_KEY_EQUAL, BACKEND_KEYBOARD_EQUALS)
-				DO_KEY(GLFW_KEY_LEFT_BRACKET, BACKEND_KEYBOARD_LEFT_BRACKET)
-				DO_KEY(GLFW_KEY_RIGHT_BRACKET, BACKEND_KEYBOARD_RIGHT_BRACKET)
-				DO_KEY(GLFW_KEY_BACKSLASH, BACKEND_KEYBOARD_BACK_SLASH)
-				DO_KEY(GLFW_KEY_SEMICOLON, BACKEND_KEYBOARD_SEMICOLON)
-				DO_KEY(GLFW_KEY_APOSTROPHE, BACKEND_KEYBOARD_APOSTROPHE)
-				DO_KEY(GLFW_KEY_COMMA, BACKEND_KEYBOARD_COMMA)
-				DO_KEY(GLFW_KEY_PERIOD, BACKEND_KEYBOARD_PERIOD)
-				DO_KEY(GLFW_KEY_SLASH, BACKEND_KEYBOARD_FORWARD_SLASH)
-
-				default:
-					break;
-			}
-
-			break;
-	}
-}
-
-static void WindowFocusCallback(GLFWwindow *window, int focused)
-{
-	(void)window;
-
-	window_focus_callback(focused);
-}
-
-static void WindowSizeCallback(GLFWwindow *window, int width, int height)
-{
-	(void)window;
-
-	RenderBackend_HandleWindowResize(width, height);
-}
-
-static void DragAndDropCallback(GLFWwindow *window, int count, const char **paths)
-{
-	(void)window;
-	(void)count;
-
-	drag_and_drop_callback(paths[0]);
-}
-
-static void ErrorCallback(int code, const char *description)
-{
-	Backend_PrintError("GLFW error received (%d): %s", code, description);
-}
-
-bool Backend_Init(void (*drag_and_drop_callback_param)(const char *path), void (*window_focus_callback_param)(bool focus))
-{
-	drag_and_drop_callback = drag_and_drop_callback_param;
-	window_focus_callback = window_focus_callback_param;
-
-	glfwSetErrorCallback(ErrorCallback);
-
-	if (glfwInit() == GL_TRUE)
-		return true;
-
-	Backend_ShowMessageBox("Fatal error", "Could not initialise GLFW3");
-
-	return false;
-}
-
-void Backend_Deinit(void)
-{
-	if (cursor != NULL)
-		glfwDestroyCursor(cursor);
-
-	glfwTerminate();
-}
-
-void Backend_PostWindowCreation(void)
-{
-	// Hook callbacks
-	glfwSetKeyCallback(window, KeyCallback);
-	glfwSetWindowFocusCallback(window, WindowFocusCallback);
-	glfwSetWindowSizeCallback(window, WindowSizeCallback);
-}
-
-bool Backend_GetPaths(std::string *module_path, std::string *data_path)
-{
-	(void)module_path;
-	(void)data_path;
-
-	// GLFW3 doesn't seem to have a mechanism for this
-	return false;
-}
-
-void Backend_HideMouse(void)
-{
-	glfwSetInputMode(window, GLFW_CURSOR, GLFW_CURSOR_HIDDEN);
-}
-
-void Backend_SetWindowIcon(const unsigned char *rgb_pixels, size_t width, size_t height)
-{
-	// Convert to RGBA, since that's the only thing GLFW3 accepts
-	unsigned char *rgba_pixels = (unsigned char*)malloc(width * height * 4);
-
-	const unsigned char *rgb_pointer = rgb_pixels;
-	unsigned char *rgba_pointer = rgba_pixels;
-
-	if (rgba_pixels != NULL)
-	{
-		for (size_t y = 0; y < height; ++y)
-		{
-			for (size_t x = 0; x < width; ++x)
-			{
-				*rgba_pointer++ = *rgb_pointer++;
-				*rgba_pointer++ = *rgb_pointer++;
-				*rgba_pointer++ = *rgb_pointer++;
-				*rgba_pointer++ = 0xFF;
-			}
-		}
-
-		GLFWimage glfw_image = {(int)width, (int)height, rgba_pixels};
-		glfwSetWindowIcon(window, 1, &glfw_image);
-
-		free(rgba_pixels);
-	}
-}
-
-void Backend_SetCursor(const unsigned char *rgba_pixels, size_t width, size_t height)
-{
-	GLFWimage glfw_image = {(int)width, (int)height, (unsigned char*)rgba_pixels};
-	cursor = glfwCreateCursor(&glfw_image, 0, 0);
-
-	if (cursor != NULL)
-		glfwSetCursor(window, cursor);
-}
-
-void Backend_EnableDragAndDrop(void)
-{
-	glfwSetDropCallback(window, DragAndDropCallback);
-}
-
-bool Backend_SystemTask(bool active)
-{
-	if (glfwWindowShouldClose(window))
-		return false;
-
-	if (active)
-		glfwPollEvents();
-	else
-		glfwWaitEvents();
-
-	return true;
-}
-
-void Backend_GetKeyboardState(bool *out_keyboard_state)
-{
-	memcpy(out_keyboard_state, keyboard_state, sizeof(keyboard_state));
-}
-
-void Backend_ShowMessageBox(const char *title, const char *message)
-{
-	// GLFW3 doesn't have a message box
-	Backend_PrintInfo("ShowMessageBox - '%s' - '%s'\n", title, message);
-}
-
-ATTRIBUTE_FORMAT_PRINTF(1, 2) void Backend_PrintError(const char *format, ...)
-{
-	va_list argumentList;
-	va_start(argumentList, format);
-	fputs("ERROR: ", stderr);
-	vfprintf(stderr, format, argumentList);
-	fputc('\n', stderr);
-	va_end(argumentList);
-}
-
-ATTRIBUTE_FORMAT_PRINTF(1, 2) void Backend_PrintInfo(const char *format, ...)
-{
-	va_list argumentList;
-	va_start(argumentList, format);
-	fputs("INFO: ", stdout);
-	vfprintf(stdout, format, argumentList);
-	fputc('\n', stdout);
-	va_end(argumentList);
-}
-
-unsigned long Backend_GetTicks(void)
-{
-	return (unsigned long)(glfwGetTime() * 1000.0);
-}
-
-void Backend_Delay(unsigned int ticks)
-{
-#if __cplusplus >= 201103L
-	// GLFW3 doesn't have a delay function, so here's some butt-ugly C++11
-	std::this_thread::sleep_for(std::chrono::milliseconds(ticks));
-#elif defined(_WIN32)
-	Sleep(ticks);
-#else
-	usleep(ticks * 1000);
-#endif
-}
diff --git a/src/Backends/Platform/Null.cpp b/src/Backends/Platform/Null.cpp
deleted file mode 100644
index 826bca09..00000000
--- a/src/Backends/Platform/Null.cpp
+++ /dev/null
@@ -1,100 +0,0 @@
-// Released under the MIT licence.
-// See LICENCE.txt for details.
-
-#include "../Misc.h"
-
-#include <string>
-
-#include "../../Attributes.h"
-
-bool Backend_Init(void (*drag_and_drop_callback)(const char *path), void (*window_focus_callback)(bool focus))
-{
-	(void)drag_and_drop_callback;
-	(void)window_focus_callback;
-
-	return true;
-}
-
-void Backend_Deinit(void)
-{
-	
-}
-
-void Backend_PostWindowCreation(void)
-{
-	
-}
-
-bool Backend_GetPaths(std::string *module_path, std::string *data_path)
-{
-	(void)module_path;
-	(void)data_path;
-
-	return false;
-}
-
-void Backend_HideMouse(void)
-{
-	
-}
-
-void Backend_SetWindowIcon(const unsigned char *rgb_pixels, size_t width, size_t height)
-{
-	(void)rgb_pixels;
-	(void)width;
-	(void)height;
-}
-
-void Backend_SetCursor(const unsigned char *rgba_pixels, size_t width, size_t height)
-{
-	(void)rgba_pixels;
-	(void)width;
-	(void)height;
-}
-
-void Backend_EnableDragAndDrop(void)
-{
-	
-}
-
-bool Backend_SystemTask(bool active)
-{
-	(void)active;
-
-	return true;
-}
-
-void Backend_GetKeyboardState(bool *keyboard_state)
-{
-	(void)keyboard_state;
-}
-
-void Backend_ShowMessageBox(const char *title, const char *message)
-{
-	(void)title;
-	(void)message;
-}
-
-ATTRIBUTE_FORMAT_PRINTF(1, 2) void Backend_PrintError(const char *format, ...)
-{
-	(void)format;
-}
-
-ATTRIBUTE_FORMAT_PRINTF(1, 2) void Backend_PrintInfo(const char *format, ...)
-{
-	(void)format;
-}
-
-unsigned long Backend_GetTicks(void)
-{
-	static unsigned long fake_ticks = 0;
-
-	fake_ticks += 1000 / 50;
-
-	return fake_ticks;
-}
-
-void Backend_Delay(unsigned int ticks)
-{
-	(void)ticks;
-}
diff --git a/src/Backends/Platform/SDL1.cpp b/src/Backends/Platform/SDL1.cpp
deleted file mode 100644
index 05ebf2f7..00000000
--- a/src/Backends/Platform/SDL1.cpp
+++ /dev/null
@@ -1,260 +0,0 @@
-// Released under the MIT licence.
-// See LICENCE.txt for details.
-
-#include "../Misc.h"
-
-#include <stdarg.h>
-#include <stddef.h>
-#include <stdio.h>
-#include <stdlib.h>
-#include <string.h>
-#include <string>
-
-#include "SDL.h"
-
-#include "../Rendering.h"
-#include "../../Attributes.h"
-
-#define DO_KEY(SDL_KEY, BACKEND_KEY) \
-	case SDL_KEY: \
-		keyboard_state[BACKEND_KEY] = event.key.type == SDL_KEYDOWN; \
-		break;
-
-static bool keyboard_state[BACKEND_KEYBOARD_TOTAL];
-
-static void (*window_focus_callback)(bool focus);
-
-bool Backend_Init(void (*drag_and_drop_callback_param)(const char *path), void (*window_focus_callback_param)(bool focus))
-{
-	window_focus_callback = window_focus_callback_param;
-
-	if (SDL_Init(SDL_INIT_VIDEO) == 0)
-	{
-		char driver[20];
-		if (SDL_VideoDriverName(driver, 20) != NULL)
-		{
-			Backend_PrintInfo("Selected SDL video driver: %s", driver);
-
-			return true;
-		}
-		else
-		{
-			Backend_PrintError("No SDL video driver initialized!");
-			SDL_Quit();
-		}
-	}
-	else
-	{
-		std::string error_message = std::string("Could not initialise SDL: ") + SDL_GetError();
-		Backend_ShowMessageBox("Fatal error", error_message.c_str());
-	}
-
-	return false;
-}
-
-void Backend_Deinit(void)
-{
-	SDL_Quit();
-}
-
-void Backend_PostWindowCreation(void)
-{
-}
-
-bool Backend_GetPaths(std::string *module_path, std::string *data_path)
-{
-	(void)module_path;
-	(void)data_path;
-
-	return false;
-}
-
-void Backend_HideMouse(void)
-{
-	SDL_ShowCursor(SDL_DISABLE);
-}
-
-void Backend_SetWindowIcon(const unsigned char *rgb_pixels, size_t width, size_t height)
-{
-	SDL_Surface *surface = SDL_CreateRGBSurfaceFrom((void*)rgb_pixels, width, height, 24, width * 3, 0x0000FF, 0x00FF00, 0xFF0000, 0);
-
-	if (surface != NULL)
-	{
-		SDL_WM_SetIcon(surface, NULL);
-		SDL_FreeSurface(surface);
-	}
-	else
-	{
-		Backend_PrintError("Couldn't create RGB surface for window icon: %s", SDL_GetError());
-	}
-}
-
-void Backend_SetCursor(const unsigned char *rgb_pixels, size_t width, size_t height)
-{
-	(void)rgb_pixels;
-	(void)width;
-	(void)height;
-	// SDL1 only supports black and white cursors
-}
-
-void Backend_EnableDragAndDrop(void)
-{
-}
-
-bool Backend_SystemTask(bool active)
-{
-	if (!active)
-		if (!SDL_WaitEvent(NULL))
-			return false;
-
-	SDL_Event event;
-
-	while (SDL_PollEvent(&event))
-	{
-		switch (event.type)
-		{
-			case SDL_KEYUP:
-			case SDL_KEYDOWN:
-				switch (event.key.keysym.sym)
-				{
-					DO_KEY(SDLK_a, BACKEND_KEYBOARD_A)
-					DO_KEY(SDLK_b, BACKEND_KEYBOARD_B)
-					DO_KEY(SDLK_c, BACKEND_KEYBOARD_C)
-					DO_KEY(SDLK_d, BACKEND_KEYBOARD_D)
-					DO_KEY(SDLK_e, BACKEND_KEYBOARD_E)
-					DO_KEY(SDLK_f, BACKEND_KEYBOARD_F)
-					DO_KEY(SDLK_g, BACKEND_KEYBOARD_G)
-					DO_KEY(SDLK_h, BACKEND_KEYBOARD_H)
-					DO_KEY(SDLK_i, BACKEND_KEYBOARD_I)
-					DO_KEY(SDLK_j, BACKEND_KEYBOARD_J)
-					DO_KEY(SDLK_k, BACKEND_KEYBOARD_K)
-					DO_KEY(SDLK_l, BACKEND_KEYBOARD_L)
-					DO_KEY(SDLK_m, BACKEND_KEYBOARD_M)
-					DO_KEY(SDLK_n, BACKEND_KEYBOARD_N)
-					DO_KEY(SDLK_o, BACKEND_KEYBOARD_O)
-					DO_KEY(SDLK_p, BACKEND_KEYBOARD_P)
-					DO_KEY(SDLK_q, BACKEND_KEYBOARD_Q)
-					DO_KEY(SDLK_r, BACKEND_KEYBOARD_R)
-					DO_KEY(SDLK_s, BACKEND_KEYBOARD_S)
-					DO_KEY(SDLK_t, BACKEND_KEYBOARD_T)
-					DO_KEY(SDLK_u, BACKEND_KEYBOARD_U)
-					DO_KEY(SDLK_v, BACKEND_KEYBOARD_V)
-					DO_KEY(SDLK_w, BACKEND_KEYBOARD_W)
-					DO_KEY(SDLK_x, BACKEND_KEYBOARD_X)
-					DO_KEY(SDLK_y, BACKEND_KEYBOARD_Y)
-					DO_KEY(SDLK_z, BACKEND_KEYBOARD_Z)
-					DO_KEY(SDLK_0, BACKEND_KEYBOARD_0)
-					DO_KEY(SDLK_1, BACKEND_KEYBOARD_1)
-					DO_KEY(SDLK_2, BACKEND_KEYBOARD_2)
-					DO_KEY(SDLK_3, BACKEND_KEYBOARD_3)
-					DO_KEY(SDLK_4, BACKEND_KEYBOARD_4)
-					DO_KEY(SDLK_5, BACKEND_KEYBOARD_5)
-					DO_KEY(SDLK_6, BACKEND_KEYBOARD_6)
-					DO_KEY(SDLK_7, BACKEND_KEYBOARD_7)
-					DO_KEY(SDLK_8, BACKEND_KEYBOARD_8)
-					DO_KEY(SDLK_9, BACKEND_KEYBOARD_9)
-					DO_KEY(SDLK_F1, BACKEND_KEYBOARD_F1)
-					DO_KEY(SDLK_F2, BACKEND_KEYBOARD_F2)
-					DO_KEY(SDLK_F3, BACKEND_KEYBOARD_F3)
-					DO_KEY(SDLK_F4, BACKEND_KEYBOARD_F4)
-					DO_KEY(SDLK_F5, BACKEND_KEYBOARD_F5)
-					DO_KEY(SDLK_F6, BACKEND_KEYBOARD_F6)
-					DO_KEY(SDLK_F7, BACKEND_KEYBOARD_F7)
-					DO_KEY(SDLK_F8, BACKEND_KEYBOARD_F8)
-					DO_KEY(SDLK_F9, BACKEND_KEYBOARD_F9)
-					DO_KEY(SDLK_F10, BACKEND_KEYBOARD_F10)
-					DO_KEY(SDLK_F11, BACKEND_KEYBOARD_F11)
-					DO_KEY(SDLK_F12, BACKEND_KEYBOARD_F12)
-					DO_KEY(SDLK_UP, BACKEND_KEYBOARD_UP)
-					DO_KEY(SDLK_DOWN, BACKEND_KEYBOARD_DOWN)
-					DO_KEY(SDLK_LEFT, BACKEND_KEYBOARD_LEFT)
-					DO_KEY(SDLK_RIGHT, BACKEND_KEYBOARD_RIGHT)
-					DO_KEY(SDLK_ESCAPE, BACKEND_KEYBOARD_ESCAPE)
-					DO_KEY(SDLK_BACKQUOTE, BACKEND_KEYBOARD_BACK_QUOTE)
-					DO_KEY(SDLK_TAB, BACKEND_KEYBOARD_TAB)
-					DO_KEY(SDLK_CAPSLOCK, BACKEND_KEYBOARD_CAPS_LOCK)
-					DO_KEY(SDLK_LSHIFT, BACKEND_KEYBOARD_LEFT_SHIFT)
-					DO_KEY(SDLK_LCTRL, BACKEND_KEYBOARD_LEFT_CTRL)
-					DO_KEY(SDLK_LALT, BACKEND_KEYBOARD_LEFT_ALT)
-					DO_KEY(SDLK_SPACE, BACKEND_KEYBOARD_SPACE)
-					DO_KEY(SDLK_RALT, BACKEND_KEYBOARD_RIGHT_ALT)
-					DO_KEY(SDLK_RCTRL, BACKEND_KEYBOARD_RIGHT_CTRL)
-					DO_KEY(SDLK_RSHIFT, BACKEND_KEYBOARD_RIGHT_SHIFT)
-					DO_KEY(SDLK_RETURN, BACKEND_KEYBOARD_ENTER)
-					DO_KEY(SDLK_BACKSPACE, BACKEND_KEYBOARD_BACKSPACE)
-					DO_KEY(SDLK_MINUS, BACKEND_KEYBOARD_MINUS)
-					DO_KEY(SDLK_EQUALS, BACKEND_KEYBOARD_EQUALS)
-					DO_KEY(SDLK_LEFTBRACKET, BACKEND_KEYBOARD_LEFT_BRACKET)
-					DO_KEY(SDLK_RIGHTBRACKET, BACKEND_KEYBOARD_RIGHT_BRACKET)
-					DO_KEY(SDLK_BACKSLASH, BACKEND_KEYBOARD_BACK_SLASH)
-					DO_KEY(SDLK_SEMICOLON, BACKEND_KEYBOARD_SEMICOLON)
-					DO_KEY(SDLK_QUOTE, BACKEND_KEYBOARD_APOSTROPHE)
-					DO_KEY(SDLK_COMMA, BACKEND_KEYBOARD_COMMA)
-					DO_KEY(SDLK_PERIOD, BACKEND_KEYBOARD_PERIOD)
-					DO_KEY(SDLK_SLASH, BACKEND_KEYBOARD_FORWARD_SLASH)
-
-					default:
-						break;
-				}
-
-				break;
-
-			case SDL_ACTIVEEVENT:
-				if (event.active.state & SDL_APPINPUTFOCUS)
-				{
-					window_focus_callback(event.active.gain);
-				}
-
-				break;
-
-			case SDL_VIDEORESIZE:
-				RenderBackend_HandleWindowResize(event.resize.w, event.resize.h);
-				break;
-
-			case SDL_QUIT:
-				return false;
-		}
-	}
-
-	return true;
-}
-
-void Backend_GetKeyboardState(bool *out_keyboard_state)
-{
-	memcpy(out_keyboard_state, keyboard_state, sizeof(keyboard_state));
-}
-
-void Backend_ShowMessageBox(const char *title, const char *message)
-{
-	Backend_PrintInfo("ShowMessageBox - '%s' - '%s'\n", title, message);
-}
-
-ATTRIBUTE_FORMAT_PRINTF(1, 2) void Backend_PrintError(const char *format, ...)
-{
-	va_list argumentList;
-	va_start(argumentList, format);
-	fputs("ERROR: ", stderr);
-	vfprintf(stderr, format, argumentList);
-	fputc('\n', stderr);
-	va_end(argumentList);
-}
-
-ATTRIBUTE_FORMAT_PRINTF(1, 2) void Backend_PrintInfo(const char *format, ...)
-{
-	va_list argumentList;
-	va_start(argumentList, format);
-	fputs("INFO: ", stdout);
-	vfprintf(stdout, format, argumentList);
-	fputc('\n', stdout);
-	va_end(argumentList);
-}
-
-unsigned long Backend_GetTicks(void)
-{
-	return SDL_GetTicks();
-}
-
-void Backend_Delay(unsigned int ticks)
-{
-	SDL_Delay(ticks);
-}
diff --git a/src/Backends/Platform/SDL2.cpp b/src/Backends/Platform/SDL2.cpp
index b52aa5e3..618340b6 100644
--- a/src/Backends/Platform/SDL2.cpp
+++ b/src/Backends/Platform/SDL2.cpp
@@ -9,6 +9,7 @@
 #include <stdlib.h>
 #include <string.h>
 #include <string>
+#include <psp2/io/stat.h>
 
 #include "SDL.h"
 
@@ -94,30 +95,10 @@ void Backend_PostWindowCreation(void)
 
 bool Backend_GetPaths(std::string *module_path, std::string *data_path)
 {
-#ifdef _WIN32
-	// SDL_GetBasePath returns a UTF-8 string, but Windows' fopen uses (extended?) ASCII.
-	// This is apparently a problem for accented characters, as they will make fopen fail.
-	// So, instead, we rely on argv[0], as that will put the accented characters in a
-	// format Windows will understand.
-	(void)module_path;
-	(void)data_path;
-
-	return false;
-#else
-	char *base_path = SDL_GetBasePath();
-	if (base_path == NULL)
-		return false;
-
-	// Trim the trailing '/'
-	size_t base_path_length = strlen(base_path);
-	base_path[base_path_length - 1] = '\0';
-	*module_path = base_path;
-	SDL_free(base_path);
-
-	*data_path = *module_path + "/data";
-
+	sceIoMkdir("ux0:/data/CaveStory", 0777);
+	*module_path = "ux0:/data/CaveStory";
+	*data_path = "app0:/data";
 	return true;
-#endif
 }
 
 void Backend_HideMouse(void)
diff --git a/src/Backends/Platform/WiiU.cpp b/src/Backends/Platform/WiiU.cpp
deleted file mode 100644
index 7321cab6..00000000
--- a/src/Backends/Platform/WiiU.cpp
+++ /dev/null
@@ -1,200 +0,0 @@
-// Released under the MIT licence.
-// See LICENCE.txt for details.
-
-#include "../Misc.h"
-
-#include <stdarg.h>
-#include <stddef.h>
-#include <stdio.h>
-#include <string.h>
-#include <string>
-
-#include <coreinit/thread.h>
-#include <padscore/kpad.h>
-#include <vpad/input.h>
-#include <whb/log.h>
-#include <whb/log_udp.h>
-#include <whb/proc.h>
-#include <whb/sdcard.h>
-
-static unsigned long ticks_per_second;
-
-bool Backend_Init(void (*drag_and_drop_callback)(const char *path), void (*window_focus_callback)(bool focus))
-{
-	(void)drag_and_drop_callback;
-	(void)window_focus_callback;
-
-	WHBProcInit();
-
-	if (!WHBMountSdCard())
-		return FALSE;
-
-	VPADInit();
-
-	WPADInit();
-	KPADInit();
-
-	// Enable Wii U Pro Controllers to be connected
-	WPADEnableURCC(1);
-
-	WHBLogUdpInit();
-
-	ticks_per_second = OSGetSystemInfo()->busClockSpeed / 4;
-
-	return true;
-}
-
-void Backend_Deinit(void)
-{
-	WHBLogUdpDeinit();
-
-	WPADShutdown();
-
-	VPADShutdown();
-
-	WHBUnmountSdCard();
-
-	WHBProcShutdown();
-}
-
-void Backend_PostWindowCreation(void)
-{
-	
-}
-
-bool Backend_GetPaths(std::string *module_path, std::string *data_path)
-{
-	*module_path = WHBGetSdCardMountPath();
-#ifdef JAPANESE
-	*module_path += "/CSE2-portable-jp";
-#else
-	*module_path += "/CSE2-portable-en";
-#endif
-
-	*data_path = *module_path + "/data";
-
-	return true;
-}
-
-void Backend_HideMouse(void)
-{
-	
-}
-
-void Backend_SetWindowIcon(const unsigned char *rgb_pixels, size_t width, size_t height)
-{
-	(void)rgb_pixels;
-	(void)width;
-	(void)height;
-}
-
-void Backend_SetCursor(const unsigned char *rgba_pixels, size_t width, size_t height)
-{
-	(void)rgba_pixels;
-	(void)width;
-	(void)height;
-}
-
-void Backend_EnableDragAndDrop(void)
-{
-	
-}
-
-bool Backend_SystemTask(bool active)
-{
-	(void)active;
-
-	return WHBProcIsRunning();
-}
-
-void Backend_GetKeyboardState(bool *keyboard_state)
-{
-	memset(keyboard_state, 0, sizeof(bool) * BACKEND_KEYBOARD_TOTAL);
-
-	// Read gamepad
-	static uint32_t vpad_buttons;
-
-	VPADStatus vpad_status;
-	if (VPADRead(VPAD_CHAN_0, &vpad_status, 1, NULL) == 1)
-		vpad_buttons = vpad_status.hold;
-
-	keyboard_state[BACKEND_KEYBOARD_UP] |= vpad_buttons & (VPAD_BUTTON_UP | VPAD_STICK_L_EMULATION_UP);
-	keyboard_state[BACKEND_KEYBOARD_DOWN] |= vpad_buttons & (VPAD_BUTTON_DOWN | VPAD_STICK_L_EMULATION_DOWN);
-	keyboard_state[BACKEND_KEYBOARD_LEFT] |= vpad_buttons & (VPAD_BUTTON_LEFT | VPAD_STICK_L_EMULATION_LEFT);
-	keyboard_state[BACKEND_KEYBOARD_RIGHT] |= vpad_buttons & (VPAD_BUTTON_RIGHT | VPAD_STICK_L_EMULATION_RIGHT);
-	keyboard_state[BACKEND_KEYBOARD_Z] |= vpad_buttons & VPAD_BUTTON_B;                       // Jump
-	keyboard_state[BACKEND_KEYBOARD_X] |= vpad_buttons & VPAD_BUTTON_Y;                       // Shoot
-	keyboard_state[BACKEND_KEYBOARD_Q] |= vpad_buttons & (VPAD_BUTTON_A | VPAD_BUTTON_PLUS);  // Inventory
-	keyboard_state[BACKEND_KEYBOARD_W] |= vpad_buttons & (VPAD_BUTTON_X | VPAD_BUTTON_MINUS); // Map
-	keyboard_state[BACKEND_KEYBOARD_A] |= vpad_buttons & (VPAD_BUTTON_L | VPAD_BUTTON_ZL | VPAD_STICK_R_EMULATION_LEFT);  // Weapon left
-	keyboard_state[BACKEND_KEYBOARD_S] |= vpad_buttons & (VPAD_BUTTON_R | VPAD_BUTTON_ZR | VPAD_STICK_R_EMULATION_RIGHT); // Weapon right
-
-	// Read Wii U Pro Controller
-	static uint32_t kpad_buttons;
-
-	KPADStatus kpad_status;
-	if (KPADRead(WPAD_CHAN_0, &kpad_status, 1) == 1)
-		kpad_buttons = kpad_status.pro.hold;
-
-	keyboard_state[BACKEND_KEYBOARD_UP] |= kpad_buttons & (WPAD_PRO_BUTTON_UP | WPAD_PRO_STICK_L_EMULATION_UP);
-	keyboard_state[BACKEND_KEYBOARD_DOWN] |= kpad_buttons & (WPAD_PRO_BUTTON_DOWN | WPAD_PRO_STICK_L_EMULATION_DOWN);
-	keyboard_state[BACKEND_KEYBOARD_LEFT] |= kpad_buttons & (WPAD_PRO_BUTTON_LEFT | WPAD_PRO_STICK_L_EMULATION_LEFT);
-	keyboard_state[BACKEND_KEYBOARD_RIGHT] |= kpad_buttons & (WPAD_PRO_BUTTON_RIGHT | WPAD_PRO_STICK_L_EMULATION_RIGHT);
-	keyboard_state[BACKEND_KEYBOARD_Z] |= kpad_buttons & WPAD_PRO_BUTTON_B;                           // Jump
-	keyboard_state[BACKEND_KEYBOARD_X] |= kpad_buttons & WPAD_PRO_BUTTON_Y;                           // Shoot
-	keyboard_state[BACKEND_KEYBOARD_Q] |= kpad_buttons & (WPAD_PRO_BUTTON_A | WPAD_PRO_BUTTON_PLUS);  // Inventory
-	keyboard_state[BACKEND_KEYBOARD_W] |= kpad_buttons & (WPAD_PRO_BUTTON_X | WPAD_PRO_BUTTON_MINUS); // Map
-	keyboard_state[BACKEND_KEYBOARD_A] |= kpad_buttons & (WPAD_PRO_TRIGGER_L | WPAD_PRO_TRIGGER_ZL | WPAD_PRO_STICK_R_EMULATION_LEFT);  // Weapon left
-	keyboard_state[BACKEND_KEYBOARD_S] |= kpad_buttons & (WPAD_PRO_TRIGGER_R | WPAD_PRO_TRIGGER_ZR | WPAD_PRO_STICK_R_EMULATION_RIGHT); // Weapon right
-}
-
-void Backend_ShowMessageBox(const char *title, const char *message)
-{
-	Backend_PrintInfo("ShowMessageBox - %s - %s", title, message);
-}
-
-ATTRIBUTE_FORMAT_PRINTF(1, 2) void Backend_PrintError(const char *format, ...)
-{
-	char message_buffer[0x100];
-
-	va_list argument_list;
-	va_start(argument_list, format);
-	vsnprintf(message_buffer, sizeof(message_buffer), format, argument_list);
-	va_end(argument_list);
-
-	WHBLogPrint("ERROR:");
-	WHBLogPrint(message_buffer);
-}
-
-ATTRIBUTE_FORMAT_PRINTF(1, 2) void Backend_PrintInfo(const char *format, ...)
-{
-	char message_buffer[0x100];
-
-	va_list argument_list;
-	va_start(argument_list, format);
-	vsnprintf(message_buffer, sizeof(message_buffer), format, argument_list);
-	va_end(argument_list);
-
-	WHBLogPrint("INFO:");
-	WHBLogPrint(message_buffer);
-}
-
-unsigned long Backend_GetTicks(void)
-{
-	static uint64_t accumulator;
-
-	static unsigned long last_tick;
-
-	unsigned long current_tick = OSGetTick();
-
-	accumulator += current_tick - last_tick;
-
-	last_tick = current_tick;
-
-	return (accumulator * 1000) / ticks_per_second;
-}
-
-void Backend_Delay(unsigned int ticks)
-{
-	OSSleepTicks((ticks * ticks_per_second) / 1000);
-}
diff --git a/src/Backends/Rendering/3DS.cpp b/src/Backends/Rendering/3DS.cpp
deleted file mode 100644
index 7d7a405e..00000000
--- a/src/Backends/Rendering/3DS.cpp
+++ /dev/null
@@ -1,501 +0,0 @@
-// Released under the MIT licence.
-// See LICENCE.txt for details.
-
-#include "../Rendering.h"
-
-#include <stddef.h>
-#include <stdlib.h>
-#include <string.h>
-
-#include <3ds.h>
-#include <citro3d.h>
-#include <citro2d.h>
-
-#include "../Misc.h"
-
-#define MIN(a, b) ((a) < (b) ? (a) : (b))
-#define MAX(a, b) ((a) > (b) ? (a) : (b))
-
-// Used to transfer the final rendered display to the framebuffer
-#define DISPLAY_TRANSFER_FLAGS \
-	(GX_TRANSFER_FLIP_VERT(0) | GX_TRANSFER_OUT_TILED(0) | GX_TRANSFER_RAW_COPY(0) | \
-	GX_TRANSFER_IN_FORMAT(GX_TRANSFER_FMT_RGBA8) | GX_TRANSFER_OUT_FORMAT(GX_TRANSFER_FMT_RGB8) | \
-	GX_TRANSFER_SCALING(GX_TRANSFER_SCALE_NO))
-
-// Used to convert textures to 3DS tiled format
-#define TEXTURE_TRANSFER_FLAGS \
-	(GX_TRANSFER_FLIP_VERT(0) | GX_TRANSFER_OUT_TILED(1) | GX_TRANSFER_RAW_COPY(0) | \
-	GX_TRANSFER_IN_FORMAT(GX_TRANSFER_FMT_RGBA8) | GX_TRANSFER_OUT_FORMAT(GX_TRANSFER_FMT_RGBA8) | \
-	GX_TRANSFER_SCALING(GX_TRANSFER_SCALE_NO))
-
-typedef struct RenderBackend_Surface
-{
-	C3D_Tex texture;
-	C3D_RenderTarget *render_target;
-} RenderBackend_Surface;
-
-typedef struct RenderBackend_GlyphAtlas
-{
-	C3D_Tex texture;
-	unsigned char *local_texture_buffer;
-} RenderBackend_GlyphAtlas;
-
-static RenderBackend_GlyphAtlas *glyph_atlas;
-static RenderBackend_Surface *glyph_destination_surface;
-static C2D_ImageTint glyph_tint;
-
-static C3D_RenderTarget *screen_render_target;
-
-static RenderBackend_Surface *framebuffer_surface;
-static size_t framebuffer_surface_width;
-static size_t framebuffer_surface_height;
-
-static bool frame_started;
-
-static size_t RoundUpToPowerOfTwo(size_t value)
-{
-	size_t accumulator = 1;
-
-	while (accumulator < value)
-		accumulator <<= 1;
-
-	return accumulator;
-}
-
-static void EnableAlpha(bool enabled)
-{
-	static bool previous_setting = true;
-
-	if (enabled != previous_setting)
-	{
-		// Setting will not take effect mid-frame, so
-		// break-up the current frame if we have to.
-		if (frame_started)
-			C2D_Flush();
-
-		if (enabled)
-			C3D_AlphaBlend(GPU_BLEND_ADD, GPU_BLEND_ADD, GPU_SRC_ALPHA, GPU_ONE_MINUS_SRC_ALPHA, GPU_SRC_ALPHA, GPU_ONE_MINUS_SRC_ALPHA);
-		else
-			C3D_AlphaBlend(GPU_BLEND_ADD, GPU_BLEND_ADD, GPU_ONE, GPU_ZERO, GPU_ONE, GPU_ZERO);
-
-		previous_setting = enabled;
-	}
-}
-
-static void SelectRenderTarget(C3D_RenderTarget *render_target)
-{
-	static C3D_RenderTarget *previous_render_target = NULL;
-
-	if (render_target != previous_render_target)
-	{
-		previous_render_target = render_target;
-
-		C2D_SceneBegin(render_target);
-	}
-}
-
-static void BeginRendering(void)
-{
-	if (!frame_started)
-	{
-		C3D_FrameBegin(0);
-		frame_started = true;
-	}
-}
-
-static void EndRendering(void)
-{
-	if (frame_started)
-	{
-		C3D_FrameEnd(0);
-		frame_started = false;
-	}
-}
-
-RenderBackend_Surface* RenderBackend_Init(const char *window_title, size_t screen_width, size_t screen_height, bool fullscreen)
-{
-	if (C3D_Init(C3D_DEFAULT_CMDBUF_SIZE))
-	{
-		if (C2D_Init(C2D_DEFAULT_MAX_OBJECTS))
-		{
-			C2D_Prepare();
-
-			C3D_DepthTest(false, GPU_GEQUAL, GPU_WRITE_ALL);
-
-			screen_render_target = C3D_RenderTargetCreate(240, 400, GPU_RB_RGBA8, -1);
-
-			if (screen_render_target != NULL)
-			{
-				C3D_RenderTargetSetOutput(screen_render_target, GFX_TOP, GFX_LEFT, DISPLAY_TRANSFER_FLAGS);
-
-				framebuffer_surface = RenderBackend_CreateSurface(screen_width, screen_height, true);
-
-				if (framebuffer_surface != NULL)
-				{
-					framebuffer_surface_width = screen_width;
-					framebuffer_surface_height = screen_height;
-
-					return framebuffer_surface;
-				}
-				else
-				{
-					Backend_PrintError("RenderBackend_CreateSurface failed in RenderBackend_Init");
-				}
-
-				C3D_RenderTargetDelete(screen_render_target);
-			}
-			else
-			{
-				Backend_PrintError("C2D_CreateScreenTarget failed in RenderBackend_Init");
-			}
-
-			C2D_Fini();
-		}
-		else
-		{
-			Backend_PrintError("C2D_Init failed in RenderBackend_Init");
-		}
-
-		C3D_Fini();
-	}
-	else
-	{
-		Backend_PrintError("C3D_Init failed in RenderBackend_Init");
-	}
-
-	return NULL;
-}
-
-void RenderBackend_Deinit(void)
-{
-	// Just in case
-	EndRendering();
-
-	RenderBackend_FreeSurface(framebuffer_surface);
-
-	C3D_RenderTargetDelete(screen_render_target);
-
-	C2D_Fini();
-	C3D_Fini();
-}
-
-void RenderBackend_DrawScreen(void)
-{
-	EndRendering();
-
-	EnableAlpha(false);
-
-	const float texture_left = 0.0f;
-	const float texture_top = 0.0f;
-	const float texture_right = (float)framebuffer_surface_width / framebuffer_surface->texture.width;
-	const float texture_bottom = (float)framebuffer_surface_height / framebuffer_surface->texture.height;
-
-	Tex3DS_SubTexture subtexture;
-	subtexture.width = framebuffer_surface_width;
-	subtexture.height = framebuffer_surface_height;
-	subtexture.left = texture_left;
-	subtexture.top = 1.0f - texture_top;
-	subtexture.right = texture_right;
-	subtexture.bottom = 1.0f - texture_bottom;
-
-	C2D_Image image;
-	image.tex = &framebuffer_surface->texture;
-	image.subtex = &subtexture;
-
-	C3D_FrameBegin(C3D_FRAME_SYNCDRAW);
-
-	C2D_TargetClear(screen_render_target, C2D_Color32(0, 0, 0, 0xFF));
-
-	SelectRenderTarget(screen_render_target);
-
-	C2D_DrawImageAt(image, (400 - framebuffer_surface_width) / 2, (240 - framebuffer_surface_height) / 2, 0.0f);
-
-	C3D_FrameEnd(0);
-}
-
-RenderBackend_Surface* RenderBackend_CreateSurface(size_t width, size_t height, bool render_target)
-{
-	// Just in case
-	EndRendering();
-
-	RenderBackend_Surface *surface = (RenderBackend_Surface*)malloc(sizeof(RenderBackend_Surface));
-
-	if (surface != NULL)
-	{
-		surface->render_target = NULL;
-
-		memset(&surface->texture, 0, sizeof(surface->texture));
-
-		if ((render_target ? C3D_TexInitVRAM : C3D_TexInit)(&surface->texture, RoundUpToPowerOfTwo(width), RoundUpToPowerOfTwo(height), GPU_RGBA8))
-		{
-			C3D_TexSetFilter(&surface->texture, GPU_NEAREST, GPU_NEAREST);
-
-			if (!render_target)
-			{
-				return surface;
-			}
-			else
-			{
-				surface->render_target = C3D_RenderTargetCreateFromTex(&surface->texture, GPU_TEXFACE_2D, 0, -1);
-
-				if (surface->render_target != NULL)
-				{
-					C2D_TargetClear(surface->render_target, C2D_Color32(0, 0, 0, 0xFF));
-
-					return surface;
-				}
-				else
-				{
-					Backend_PrintError("C3D_RenderTargetCreateFromTex failed in RenderBackend_CreateSurface");
-				}
-			}
-
-			C3D_TexDelete(&surface->texture);
-		}
-		else
-		{
-			Backend_PrintError("C3D_TexInit/C3D_TexInitVRAM failed in RenderBackend_CreateSurface");
-		}
-
-		free(surface);
-	}
-
-	return NULL;
-}
-
-void RenderBackend_FreeSurface(RenderBackend_Surface *surface)
-{
-	// Just in case
-	EndRendering();
-
-	if (surface->render_target != NULL)
-		C3D_RenderTargetDelete(surface->render_target);
-
-	C3D_TexDelete(&surface->texture);
-
-	free(surface);
-}
-
-bool RenderBackend_IsSurfaceLost(RenderBackend_Surface *surface)
-{
-	(void)surface;
-
-	return false;
-}
-
-void RenderBackend_RestoreSurface(RenderBackend_Surface *surface)
-{
-	(void)surface;
-}
-
-void RenderBackend_UploadSurface(RenderBackend_Surface *surface, const unsigned char *pixels, size_t width, size_t height)
-{
-	// If we upload while drawing, we get corruption (visible after stage transitions)
-	EndRendering();
-
-	unsigned char *abgr_buffer = (unsigned char*)linearAlloc(surface->texture.width * surface->texture.height * 4);
-
-	if (abgr_buffer != NULL)
-	{
-		const unsigned char *src = pixels;
-
-		// Convert from colour-keyed RGB to ABGR
-		for (size_t h = 0; h < height; ++h)
-		{
-			unsigned char *dst = &abgr_buffer[h * surface->texture.width * 4];
-
-			for (size_t w = 0; w < width; ++w)
-			{
-				unsigned char r = *src++;
-				unsigned char g = *src++;
-				unsigned char b = *src++;
-
-				*dst++ = r == 0 && g == 0 && b == 0 ? 0 : 0xFF;
-				*dst++ = b;
-				*dst++ = g;
-				*dst++ = r;
-			}
-		}
-
-		GSPGPU_FlushDataCache(abgr_buffer, surface->texture.width * surface->texture.height * 4);
-
-		C3D_SyncDisplayTransfer((u32*)abgr_buffer, GX_BUFFER_DIM(surface->texture.width, surface->texture.height), (u32*)surface->texture.data, GX_BUFFER_DIM(surface->texture.width, surface->texture.height), TEXTURE_TRANSFER_FLAGS);
-
-		linearFree(abgr_buffer);
-	}
-	else
-	{
-		Backend_PrintError("Couldn't allocate memory for RenderBackend_UploadSurface");
-	}
-}
-
-void RenderBackend_Blit(RenderBackend_Surface *source_surface, const RenderBackend_Rect *rect, RenderBackend_Surface *destination_surface, long x, long y, bool colour_key)
-{
-	EnableAlpha(colour_key);
-
-	BeginRendering();
-
-	const float texture_left = (float)rect->left / source_surface->texture.width;
-	const float texture_top = (float)(source_surface->texture.height - rect->top) / source_surface->texture.height;
-	const float texture_right = (float)rect->right / source_surface->texture.width;
-	const float texture_bottom = (float)(source_surface->texture.height - rect->bottom) / source_surface->texture.height;
-
-	Tex3DS_SubTexture subtexture;
-	subtexture.width = rect->right - rect->left;
-	subtexture.height = rect->bottom - rect->top;
-	subtexture.left = texture_left;
-	subtexture.top = texture_top;
-	subtexture.right = texture_right;
-	subtexture.bottom = texture_bottom;
-
-	C2D_Image image;
-	image.tex = &source_surface->texture;
-	image.subtex = &subtexture;
-
-	SelectRenderTarget(destination_surface->render_target);
-
-	C2D_DrawImageAt(image, x, y, 0.0f);
-}
-
-void RenderBackend_ColourFill(RenderBackend_Surface *surface, const RenderBackend_Rect *rect, unsigned char red, unsigned char green, unsigned char blue)
-{
-	EnableAlpha(false);
-
-	BeginRendering();
-
-	SelectRenderTarget(surface->render_target);
-
-	C2D_DrawRectSolid(rect->left, rect->top, 0.0f, rect->right - rect->left, rect->bottom - rect->top, C2D_Color32(red, green, blue, red == 0 && green == 0 && blue == 0 ? 0 : 0xFF));
-}
-
-RenderBackend_GlyphAtlas* RenderBackend_CreateGlyphAtlas(size_t width, size_t height)
-{
-	// Just in case
-	EndRendering();
-
-	RenderBackend_GlyphAtlas *atlas = (RenderBackend_GlyphAtlas*)malloc(sizeof(RenderBackend_GlyphAtlas));
-
-	if (atlas != NULL)
-	{
-		width = RoundUpToPowerOfTwo(width);
-		height = RoundUpToPowerOfTwo(height);
-
-		atlas->local_texture_buffer = (unsigned char*)linearAlloc(width * height * 4);
-
-		if (atlas->local_texture_buffer != NULL)
-		{
-			memset(&atlas->texture, 0, sizeof(atlas->texture));
-
-			if (C3D_TexInit(&atlas->texture, width, height, GPU_RGBA8))
-			{
-				C3D_TexSetFilter(&atlas->texture, GPU_NEAREST, GPU_NEAREST);
-
-				return atlas;
-			}
-			else
-			{
-				Backend_PrintError("C3D_TexInit failed in RenderBackend_CreateGlyphAtlas");
-			}
-
-			linearFree(atlas->local_texture_buffer);
-		}
-		else
-		{
-			Backend_PrintError("linearAlloc failed in RenderBackend_CreateGlyphAtlas");
-		}
-
-		free(atlas);
-	}
-	else
-	{
-		Backend_PrintError("malloc failed in RenderBackend_CreateGlyphAtlas");
-	}
-
-
-	return NULL;
-}
-
-void RenderBackend_DestroyGlyphAtlas(RenderBackend_GlyphAtlas *atlas)
-{
-	// Just in case
-	EndRendering();
-
-	C3D_TexDelete(&atlas->texture);
-	linearFree(atlas->local_texture_buffer);
-	free(atlas);
-}
-
-void RenderBackend_UploadGlyph(RenderBackend_GlyphAtlas *atlas, size_t x, size_t y, const unsigned char *pixels, size_t width, size_t height, size_t pitch)
-{
-	// This might be needed, but right now it actually *causes*
-	// corruption rather than prevent it, so it's been disabled
-	// (it causes the 'Studio Pixel presents' text to appear incomplete).
-//	EndRendering();
-
-	for (size_t h = 0; h < height; ++h)
-	{
-		const unsigned char *source_pointer = &pixels[h * pitch];
-		unsigned char *destination_pointer = &atlas->local_texture_buffer[((y + h) * atlas->texture.width + x) * 4];
-
-		for (size_t w = 0; w < width; ++w)
-		{
-			*destination_pointer++ = *source_pointer++;
-			*destination_pointer++ = 0xFF;
-			*destination_pointer++ = 0xFF;
-			*destination_pointer++ = 0xFF;
-		}
-	}
-
-	GSPGPU_FlushDataCache(atlas->local_texture_buffer, atlas->texture.width * atlas->texture.height * 4);
-
-	C3D_SyncDisplayTransfer((u32*)atlas->local_texture_buffer, GX_BUFFER_DIM(atlas->texture.width, atlas->texture.height), (u32*)atlas->texture.data, GX_BUFFER_DIM(atlas->texture.width, atlas->texture.height), TEXTURE_TRANSFER_FLAGS);
-}
-
-void RenderBackend_PrepareToDrawGlyphs(RenderBackend_GlyphAtlas *atlas, RenderBackend_Surface *destination_surface, unsigned char red, unsigned char green, unsigned char blue)
-{
-	EnableAlpha(true);
-
-	glyph_atlas = atlas;
-	glyph_destination_surface = destination_surface;
-
-	C2D_PlainImageTint(&glyph_tint, C2D_Color32(red, green, blue, 0xFF), 1.0f);
-}
-
-void RenderBackend_DrawGlyph(long x, long y, size_t glyph_x, size_t glyph_y, size_t glyph_width, size_t glyph_height)
-{
-	BeginRendering();
-
-	SelectRenderTarget(glyph_destination_surface->render_target);
-
-	const float texture_left = (float)glyph_x / glyph_atlas->texture.width;
-	const float texture_top = (float)(glyph_atlas->texture.height - glyph_y) / glyph_atlas->texture.height;
-	const float texture_right = (float)(glyph_x + glyph_width) / glyph_atlas->texture.width;
-	const float texture_bottom = (float)(glyph_atlas->texture.height - (glyph_y + glyph_height)) / glyph_atlas->texture.height;
-
-	Tex3DS_SubTexture subtexture;
-	subtexture.width = glyph_width;
-	subtexture.height = glyph_height;
-	subtexture.left = texture_left;
-	subtexture.top = texture_top;
-	subtexture.right = texture_right;
-	subtexture.bottom = texture_bottom;
-
-	C2D_Image image;
-	image.tex = &glyph_atlas->texture;
-	image.subtex = &subtexture;
-
-	C2D_DrawImageAt(image, x, y, 0.0f, &glyph_tint);
-}
-
-void RenderBackend_HandleRenderTargetLoss(void)
-{
-	// No problem for us
-}
-
-void RenderBackend_HandleWindowResize(size_t width, size_t height)
-{
-	(void)width;
-	(void)height;
-
-	// Will never happen
-}
diff --git a/src/Backends/Rendering/OpenGL3.cpp b/src/Backends/Rendering/OpenGL3.cpp
deleted file mode 100644
index 3c5b3887..00000000
--- a/src/Backends/Rendering/OpenGL3.cpp
+++ /dev/null
@@ -1,1089 +0,0 @@
-// Released under the MIT licence.
-// See LICENCE.txt for details.
-
-// Dual OpenGL 3.2 and OpenGL ES 2.0 renderer
-
-#include "../Rendering.h"
-
-#include <stddef.h>
-#include <stdlib.h>
-#include <string.h>
-
-#ifdef USE_OPENGLES2
-#include <GLES2/gl2.h>
-#else
-#include <glad/glad.h>
-#endif
-
-#include "../Misc.h"
-#include "Window/OpenGL.h"
-
-#define MIN(a,b) ((a) < (b) ? (a) : (b))
-#define MAX(a,b) ((a) > (b) ? (a) : (b))
-
-#define ATTRIBUTE_INPUT_VERTEX_COORDINATES 1
-#define ATTRIBUTE_INPUT_TEXTURE_COORDINATES 2
-
-typedef enum RenderMode
-{
-	MODE_BLANK,
-	MODE_DRAW_SURFACE,
-	MODE_DRAW_SURFACE_WITH_TRANSPARENCY,
-	MODE_COLOUR_FILL,
-	MODE_DRAW_GLYPH
-} RenderMode;
-
-typedef struct RenderBackend_Surface
-{
-	GLuint texture_id;
-	size_t width;
-	size_t height;
-} RenderBackend_Surface;
-
-typedef struct RenderBackend_GlyphAtlas
-{
-	GLuint texture_id;
-	size_t width;
-	size_t height;
-} RenderBackend_GlyphAtlas;
-
-typedef struct Coordinate2D
-{
-	GLfloat x;
-	GLfloat y;
-} Coordinate2D;
-
-typedef struct Vertex
-{
-	Coordinate2D position;
-	Coordinate2D texture;
-} Vertex;
-
-typedef struct VertexBufferSlot
-{
-	Vertex vertices[2][3];
-} VertexBufferSlot;
-
-static struct
-{
-	GLuint id;
-	struct
-	{
-		GLint vertex_transform;
-		GLint texture_coordinate_transform;
-	} uniforms;
-} program_texture;
-
-static struct
-{
-	GLuint id;
-	struct
-	{
-		GLint vertex_transform;
-		GLint texture_coordinate_transform;
-	} uniforms;
-} program_texture_colour_key;
-
-static struct
-{
-	GLuint id;
-	struct
-	{
-		GLint vertex_transform;
-		GLint colour;
-	} uniforms;
-} program_colour_fill;
-
-static struct
-{
-	GLuint id;
-	struct
-	{
-		GLint vertex_transform;
-		GLint texture_coordinate_transform;
-		GLint colour;
-	} uniforms;
-} program_glyph;
-
-
-#ifndef USE_OPENGLES2
-static GLuint vertex_array_id;
-#endif
-static GLuint vertex_buffer_id;
-static GLuint framebuffer_id;
-
-static VertexBufferSlot *local_vertex_buffer;
-static size_t local_vertex_buffer_size;
-static size_t current_vertex_buffer_slot;
-
-static RenderMode last_render_mode;
-static GLuint last_source_texture;
-static GLuint last_destination_texture;
-
-static RenderBackend_Surface *framebuffer_surface;
-static RenderBackend_Surface *upscaled_framebuffer_surface;
-static RenderBackend_Surface window_surface;
-
-static RenderBackend_Rect window_rect;
-
-#ifdef USE_OPENGLES2
-static const GLchar *vertex_shader_plain = " \
-#version 100\n \
-uniform mat4 vertex_transform; \
-attribute vec2 input_vertex_coordinates; \
-void main() \
-{ \
-	gl_Position = vec4(input_vertex_coordinates.xy, 0.0, 1.0) * vertex_transform; \
-} \
-";
-
-static const GLchar *vertex_shader_texture = " \
-#version 100\n \
-uniform mat4 vertex_transform; \
-uniform vec2 texture_coordinate_transform; \
-attribute vec2 input_vertex_coordinates; \
-attribute vec2 input_texture_coordinates; \
-varying vec2 texture_coordinates; \
-void main() \
-{ \
-	texture_coordinates = input_texture_coordinates * texture_coordinate_transform; \
-	gl_Position = vec4(input_vertex_coordinates.xy, 0.0, 1.0) * vertex_transform; \
-} \
-";
-
-static const GLchar *fragment_shader_texture = " \
-#version 100\n \
-precision mediump float; \
-uniform sampler2D tex; \
-varying vec2 texture_coordinates; \
-void main() \
-{ \
-	gl_FragColor = texture2D(tex, texture_coordinates); \
-} \
-";
-
-static const GLchar *fragment_shader_texture_colour_key = " \
-#version 100\n \
-precision mediump float; \
-uniform sampler2D tex; \
-varying vec2 texture_coordinates; \
-void main() \
-{ \
-	vec4 colour = texture2D(tex, texture_coordinates); \
-\
-	if (colour.xyz == vec3(0.0f, 0.0f, 0.0f)) \
-		discard; \
-\
-	gl_FragColor = colour; \
-} \
-";
-
-static const GLchar *fragment_shader_colour_fill = " \
-#version 100\n \
-precision mediump float; \
-uniform vec4 colour; \
-void main() \
-{ \
-	gl_FragColor = colour; \
-} \
-";
-
-static const GLchar *fragment_shader_glyph = " \
-#version 100\n \
-precision mediump float; \
-uniform sampler2D tex; \
-uniform vec4 colour; \
-varying vec2 texture_coordinates; \
-void main() \
-{ \
-	gl_FragColor = colour * vec4(1.0, 1.0, 1.0, texture2D(tex, texture_coordinates).r); \
-} \
-";
-
-#else
-
-static const GLchar *vertex_shader_plain = " \
-#version 150 core\n \
-uniform mat4 vertex_transform; \
-in vec2 input_vertex_coordinates; \
-void main() \
-{ \
-	gl_Position = vec4(input_vertex_coordinates.xy, 0.0, 1.0) * vertex_transform; \
-} \
-";
-
-static const GLchar *vertex_shader_texture = " \
-#version 150 core\n \
-uniform mat4 vertex_transform; \
-uniform vec2 texture_coordinate_transform; \
-in vec2 input_vertex_coordinates; \
-in vec2 input_texture_coordinates; \
-out vec2 texture_coordinates; \
-void main() \
-{ \
-	texture_coordinates = input_texture_coordinates * texture_coordinate_transform; \
-	gl_Position = vec4(input_vertex_coordinates.xy, 0.0, 1.0) * vertex_transform; \
-} \
-";
-
-static const GLchar *fragment_shader_texture = " \
-#version 150 core\n \
-uniform sampler2D tex; \
-in vec2 texture_coordinates; \
-out vec4 fragment; \
-void main() \
-{ \
-	fragment = texture(tex, texture_coordinates); \
-} \
-";
-
-static const GLchar *fragment_shader_texture_colour_key = " \
-#version 150 core\n \
-uniform sampler2D tex; \
-in vec2 texture_coordinates; \
-out vec4 fragment; \
-void main() \
-{ \
-	vec4 colour = texture(tex, texture_coordinates); \
-\
-	if (colour.xyz == vec3(0.0f, 0.0f, 0.0f)) \
-		discard; \
-\
-	fragment = colour; \
-} \
-";
-
-static const GLchar *fragment_shader_colour_fill = " \
-#version 150 core\n \
-uniform vec4 colour; \
-out vec4 fragment; \
-void main() \
-{ \
-	fragment = colour; \
-} \
-";
-
-static const GLchar *fragment_shader_glyph = " \
-#version 150 core\n \
-uniform sampler2D tex; \
-uniform vec4 colour; \
-in vec2 texture_coordinates; \
-out vec4 fragment; \
-void main() \
-{ \
-	fragment = colour * vec4(1.0, 1.0, 1.0, texture(tex, texture_coordinates).r); \
-} \
-";
-#endif
-
-// A little forward-declaration for some internal functions
-static void Blit(RenderBackend_Surface *source_surface, const RenderBackend_Rect *source_rect, RenderBackend_Surface *destination_surface, const RenderBackend_Rect *destination_rect, bool colour_key);
-static RenderBackend_Surface* CreateSurface(size_t width, size_t height, bool linear_filter);
-
-// This was used back when CSE2 used GLEW instead of glad
-/*
-static void GLAPIENTRY MessageCallback(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *message, const void* userParam)
-{
-	(void)source;
-	(void)type;
-	(void)id;
-	(void)length;
-	(void)userParam;
-
-	if (severity != GL_DEBUG_SEVERITY_NOTIFICATION)
-		Backend_PrintInfo("OpenGL debug: %s", message);
-}
-*/
-
-static void SetTextureUploadAlignment(size_t pitch)
-{
-	const GLint alignments[8] = {8, 1, 2, 1, 4, 1, 2, 1};
-
-	glPixelStorei(GL_UNPACK_ALIGNMENT, alignments[pitch & 7]);
-}
-
-////////////////////////
-// Shader compilation //
-////////////////////////
-
-static GLuint CompileShader(const char *vertex_shader_source, const char *fragment_shader_source)
-{
-	GLint shader_status;
-
-	GLuint program_id = glCreateProgram();
-
-	// Compile vertex shader
-	GLuint vertex_shader = glCreateShader(GL_VERTEX_SHADER);
-	glShaderSource(vertex_shader, 1, &vertex_shader_source, NULL);
-	glCompileShader(vertex_shader);
-
-	glGetShaderiv(vertex_shader, GL_COMPILE_STATUS, &shader_status);
-	if (shader_status != GL_TRUE)
-	{
-		char buffer[0x400];
-		glGetShaderInfoLog(vertex_shader, sizeof(buffer), NULL, buffer);
-		Backend_PrintError("Vertex shader error: %s", buffer);
-		return 0;
-	}
-
-	glAttachShader(program_id, vertex_shader);
-
-	// Compile fragment shader
-	GLuint fragment_shader = glCreateShader(GL_FRAGMENT_SHADER);
-	glShaderSource(fragment_shader, 1, &fragment_shader_source, NULL);
-	glCompileShader(fragment_shader);
-
-	glGetShaderiv(fragment_shader, GL_COMPILE_STATUS, &shader_status);
-	if (shader_status != GL_TRUE)
-	{
-		char buffer[0x400];
-		glGetShaderInfoLog(fragment_shader, sizeof(buffer), NULL, buffer);
-		Backend_PrintError("Fragment shader error: %s", buffer);
-		return 0;
-	}
-
-	glAttachShader(program_id, fragment_shader);
-
-	// Link shaders
-	glBindAttribLocation(program_id, ATTRIBUTE_INPUT_VERTEX_COORDINATES, "input_vertex_coordinates");
-	glBindAttribLocation(program_id, ATTRIBUTE_INPUT_TEXTURE_COORDINATES, "input_texture_coordinates");
-
-	glLinkProgram(program_id);
-
-	glGetProgramiv(program_id, GL_LINK_STATUS, &shader_status);
-	if (shader_status != GL_TRUE)
-	{
-		char buffer[0x400];
-		glGetProgramInfoLog(program_id, sizeof(buffer), NULL, buffer);
-		Backend_PrintError("Shader linker error: %s", buffer);
-		return 0;
-	}
-
-	return program_id;
-}
-
-//////////////////////////////
-// Vertex buffer management //
-//////////////////////////////
-
-static VertexBufferSlot* GetVertexBufferSlot(void)
-{
-	++current_vertex_buffer_slot;
-
-	// Check if buffer needs expanding
-	if (current_vertex_buffer_slot > local_vertex_buffer_size)
-	{
-		local_vertex_buffer_size = 1;
-
-		while (current_vertex_buffer_slot > local_vertex_buffer_size)
-			local_vertex_buffer_size <<= 1;
-
-		VertexBufferSlot *new_vertex_buffer = (VertexBufferSlot*)realloc(local_vertex_buffer, local_vertex_buffer_size * sizeof(VertexBufferSlot));
-
-		if (new_vertex_buffer != NULL)
-		{
-			local_vertex_buffer = new_vertex_buffer;
-		}
-		else
-		{
-			Backend_PrintError("Couldn't expand vertex buffer");
-			return NULL;
-		}
-	}
-
-	return &local_vertex_buffer[current_vertex_buffer_slot - 1];
-}
-
-static void FlushVertexBuffer(void)
-{
-	if (current_vertex_buffer_slot == 0)
-		return;
-
-	glBufferData(GL_ARRAY_BUFFER, current_vertex_buffer_slot * sizeof(VertexBufferSlot), local_vertex_buffer, GL_STREAM_DRAW);
-
-	glDrawArrays(GL_TRIANGLES, 0, 6 * current_vertex_buffer_slot);
-
-	current_vertex_buffer_slot = 0;
-}
-
-#ifndef USE_OPENGLES2
-
-static const char* GetOpenGLErrorCodeDescription(GLenum error_code)
-{
-	switch (error_code)
-	{
-		case GL_NO_ERROR:
-			return "No error";
-
-		case GL_INVALID_ENUM:
-			return "An unacceptable value was specified for enumerated argument";
-
-		case GL_INVALID_VALUE:
-			return "A numeric argument is out of range";
-
-		case GL_INVALID_OPERATION:
-			return "The specified operation is not allowed in the current state";
-
-		case GL_INVALID_FRAMEBUFFER_OPERATION:
-			return "The framebuffer object is not complete";
-
-		case GL_OUT_OF_MEMORY:
-			return "There is not enough memory left to execute the command";
-
-		/*
-		 * For some reason glad does not define these even though they are there in OpenGL 3.2
-		 */
-
-/*
-		case GL_STACK_UNDERFLOW:
-			return "An attempt has been made to perform an operation that would cause an internal stack to underflow";
-
-		case GL_STACK_OVERFLOW:
-			return "An attempt has been made to perform an operation that would cause an internal stack to overflow";
-*/
-
-		default:
-			return "Unknown error";
-	}
-}
-
-static void PostGLCallCallback(const char *name, void *function_pointer, int length_arguments, ...)
-{
-	(void)function_pointer;
-	(void)length_arguments;
-
-	GLenum error_code = glad_glGetError();	// Manually use glad_glGetError. Otherwise, glad_debug_glGetError would be called and we'd get infinite recursion into this function
-
-	if (error_code != GL_NO_ERROR)
-		Backend_PrintError("Error %d in %s: %s", error_code, name, GetOpenGLErrorCodeDescription(error_code));
-}
-
-#endif
-
-///////////////////////////////////
-// Render-backend initialisation //
-///////////////////////////////////
-
-RenderBackend_Surface* RenderBackend_Init(const char *window_title, size_t screen_width, size_t screen_height, bool fullscreen)
-{
-#ifndef USE_OPENGLES2
-	glad_set_post_callback(PostGLCallCallback);
-#endif
-
-	size_t actual_screen_width = screen_width;
-	size_t actual_screen_height = screen_height;
-
-	if (WindowBackend_OpenGL_CreateWindow(window_title, &actual_screen_width, &actual_screen_height, fullscreen))
-	{
-		Backend_PrintInfo("GL_VENDOR = %s", glGetString(GL_VENDOR));
-		Backend_PrintInfo("GL_RENDERER = %s", glGetString(GL_RENDERER));
-		Backend_PrintInfo("GL_VERSION = %s", glGetString(GL_VERSION));
-		Backend_PrintInfo("GL_SHADING_LANGUAGE_VERSION = %s", glGetString(GL_SHADING_LANGUAGE_VERSION));
-
-		// Set up blending (only used for font-rendering)
-		glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
-
-		//glEnable(GL_DEBUG_OUTPUT);
-		//glDebugMessageCallback(MessageCallback, 0);
-
-		glClearColor(0.0f, 0.0f, 0.0f, 1.0f);
-		glClear(GL_COLOR_BUFFER_BIT);
-
-	#ifndef USE_OPENGLES2
-		// Set up Vertex Array Object
-		glGenVertexArrays(1, &vertex_array_id);
-		glBindVertexArray(vertex_array_id);
-	#endif
-
-		// Set up Vertex Buffer Object
-		glGenBuffers(1, &vertex_buffer_id);
-		glBindBuffer(GL_ARRAY_BUFFER, vertex_buffer_id);
-		glVertexAttribPointer(ATTRIBUTE_INPUT_VERTEX_COORDINATES, 2, GL_FLOAT, GL_FALSE, sizeof(Vertex), (GLvoid*)offsetof(Vertex, position));
-		glVertexAttribPointer(ATTRIBUTE_INPUT_TEXTURE_COORDINATES, 2, GL_FLOAT, GL_FALSE, sizeof(Vertex), (GLvoid*)offsetof(Vertex, texture));
-
-		// Set up the vertex attributes
-		glEnableVertexAttribArray(ATTRIBUTE_INPUT_VERTEX_COORDINATES);
-
-		// Set up our shaders
-		program_texture.id = CompileShader(vertex_shader_texture, fragment_shader_texture);
-		program_texture_colour_key.id = CompileShader(vertex_shader_texture, fragment_shader_texture_colour_key);
-		program_colour_fill.id = CompileShader(vertex_shader_plain, fragment_shader_colour_fill);
-		program_glyph.id = CompileShader(vertex_shader_texture, fragment_shader_glyph);
-
-		if (program_texture.id != 0 && program_texture_colour_key.id != 0 && program_colour_fill.id != 0 && program_glyph.id != 0)
-		{
-			// Get shader uniforms
-			program_texture.uniforms.texture_coordinate_transform = glGetUniformLocation(program_texture.id, "texture_coordinate_transform");
-			program_texture.uniforms.vertex_transform = glGetUniformLocation(program_texture.id, "vertex_transform");
-
-			program_texture_colour_key.uniforms.texture_coordinate_transform = glGetUniformLocation(program_texture_colour_key.id, "texture_coordinate_transform");
-			program_texture_colour_key.uniforms.vertex_transform = glGetUniformLocation(program_texture_colour_key.id, "vertex_transform");
-
-			program_colour_fill.uniforms.vertex_transform = glGetUniformLocation(program_colour_fill.id, "vertex_transform");
-			program_colour_fill.uniforms.colour = glGetUniformLocation(program_colour_fill.id, "colour");
-
-			program_glyph.uniforms.texture_coordinate_transform = glGetUniformLocation(program_glyph.id, "texture_coordinate_transform");
-			program_glyph.uniforms.vertex_transform = glGetUniformLocation(program_glyph.id, "vertex_transform");
-			program_glyph.uniforms.colour = glGetUniformLocation(program_glyph.id, "colour");
-
-			// Set up framebuffer (used for surface-to-surface blitting)
-			glGenFramebuffers(1, &framebuffer_id);
-			glBindFramebuffer(GL_FRAMEBUFFER, framebuffer_id);
-
-			// Set up framebuffer screen texture (used for screen-to-surface blitting)
-			framebuffer_surface = RenderBackend_CreateSurface(screen_width, screen_height, true);
-
-			// Set up window surface
-			window_surface.texture_id = 0;
-
-			RenderBackend_HandleWindowResize(actual_screen_width, actual_screen_height);
-
-			return framebuffer_surface;
-		}
-
-		if (program_glyph.id != 0)
-			glDeleteProgram(program_glyph.id);
-
-		if (program_colour_fill.id != 0)
-			glDeleteProgram(program_colour_fill.id);
-
-		if (program_texture_colour_key.id != 0)
-			glDeleteProgram(program_texture_colour_key.id);
-
-		if (program_texture.id != 0)
-			glDeleteProgram(program_texture.id);
-
-		glDeleteBuffers(1, &vertex_buffer_id);
-	#ifndef USE_OPENGLES2
-		glDeleteVertexArrays(1, &vertex_array_id);
-	#endif
-	}
-
-	return NULL;
-}
-
-void RenderBackend_Deinit(void)
-{
-	free(local_vertex_buffer);
-
-	if (upscaled_framebuffer_surface != NULL)
-		RenderBackend_FreeSurface(upscaled_framebuffer_surface);
-	RenderBackend_FreeSurface(framebuffer_surface);
-	glDeleteFramebuffers(1, &framebuffer_id);
-	glDeleteProgram(program_glyph.id);
-	glDeleteProgram(program_colour_fill.id);
-	glDeleteProgram(program_texture_colour_key.id);
-	glDeleteProgram(program_texture.id);
-	glDeleteBuffers(1, &vertex_buffer_id);
-#ifndef USE_OPENGLES2
-	glDeleteVertexArrays(1, &vertex_array_id);
-#endif
-
-	WindowBackend_OpenGL_DestroyWindow();
-}
-
-void RenderBackend_DrawScreen(void)
-{
-	RenderBackend_Rect framebuffer_rect;
-	framebuffer_rect.left = 0;
-	framebuffer_rect.top = 0;
-	framebuffer_rect.right = framebuffer_surface->width;
-	framebuffer_rect.bottom = framebuffer_surface->height;
-
-	if (upscaled_framebuffer_surface == NULL)
-	{
-		Blit(framebuffer_surface, &framebuffer_rect, &window_surface, &window_rect, false);
-	}
-	else
-	{
-		RenderBackend_Rect upscaled_framebuffer_rect;
-		upscaled_framebuffer_rect.left = 0;
-		upscaled_framebuffer_rect.top = 0;
-		upscaled_framebuffer_rect.right = upscaled_framebuffer_surface->width;
-		upscaled_framebuffer_rect.bottom = upscaled_framebuffer_surface->height;
-
-		Blit(framebuffer_surface, &framebuffer_rect, upscaled_framebuffer_surface, &upscaled_framebuffer_rect, false);
-		Blit(upscaled_framebuffer_surface, &upscaled_framebuffer_rect, &window_surface, &window_rect, false);
-	}
-
-	// Target actual screen, and not our framebuffer
-	glBindFramebuffer(GL_FRAMEBUFFER, 0);
-
-	// According to https://www.khronos.org/opengl/wiki/Common_Mistakes#Swap_Buffers
-	// the buffer should always be cleared, even if it seems unnecessary
-	glClear(GL_COLOR_BUFFER_BIT);
-
-	// Flush the vertex buffer, which will render to the screen
-	FlushVertexBuffer();
-
-	WindowBackend_OpenGL_Display();
-
-	// Switch back to our framebuffer
-	glBindFramebuffer(GL_FRAMEBUFFER, framebuffer_id);
-}
-
-////////////////////////
-// Surface management //
-////////////////////////
-
-static RenderBackend_Surface* CreateSurface(size_t width, size_t height, bool linear_filter)
-{
-	RenderBackend_Surface *surface = (RenderBackend_Surface*)malloc(sizeof(RenderBackend_Surface));
-
-	if (surface == NULL)
-		return NULL;
-
-	glGenTextures(1, &surface->texture_id);
-	glBindTexture(GL_TEXTURE_2D, surface->texture_id);
-#ifdef USE_OPENGLES2
-	glTexImage2D(GL_TEXTURE_2D, 0, GL_RGB, width, height, 0, GL_RGB, GL_UNSIGNED_BYTE, NULL);
-#else
-	glTexImage2D(GL_TEXTURE_2D, 0, GL_RGB8, width, height, 0, GL_RGB, GL_UNSIGNED_BYTE, NULL);
-#endif
-	glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, linear_filter ? GL_LINEAR : GL_NEAREST);
-	glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, linear_filter ? GL_LINEAR : GL_NEAREST);
-	glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE);
-	glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE);
-#ifndef USE_OPENGLES2
-	glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_R, GL_CLAMP_TO_EDGE);
-#endif
-
-	glBindTexture(GL_TEXTURE_2D, last_source_texture);
-
-	surface->width = width;
-	surface->height = height;
-
-	return surface;
-}
-
-RenderBackend_Surface* RenderBackend_CreateSurface(size_t width, size_t height, bool render_target)
-{
-	(void)render_target;
-
-	return CreateSurface(width, height, false);
-}
-
-void RenderBackend_FreeSurface(RenderBackend_Surface *surface)
-{
-	// Flush the vertex buffer if we're about to destroy its texture
-	if (surface->texture_id == last_source_texture)
-	{
-		FlushVertexBuffer();
-		last_source_texture = 0;
-	}
-
-	if (surface->texture_id == last_destination_texture)
-	{
-		FlushVertexBuffer();
-		last_destination_texture = 0;
-	}
-
-	glDeleteTextures(1, &surface->texture_id);
-	free(surface);
-}
-
-bool RenderBackend_IsSurfaceLost(RenderBackend_Surface *surface)
-{
-	(void)surface;
-
-	return false;
-}
-
-void RenderBackend_RestoreSurface(RenderBackend_Surface *surface)
-{
-	(void)surface;
-}
-
-void RenderBackend_UploadSurface(RenderBackend_Surface *surface, const unsigned char *pixels, size_t width, size_t height)
-{
-	// Flush the vertex buffer if we're about to modify its texture
-	if (surface->texture_id == last_source_texture || surface->texture_id == last_destination_texture)
-		FlushVertexBuffer();
-
-	SetTextureUploadAlignment(width * 3);
-	glBindTexture(GL_TEXTURE_2D, surface->texture_id);
-	glTexSubImage2D(GL_TEXTURE_2D, 0, 0, 0, width, height, GL_RGB, GL_UNSIGNED_BYTE, pixels);
-	glBindTexture(GL_TEXTURE_2D, last_source_texture);
-}
-
-/////////////
-// Drawing //
-/////////////
-
-static void Blit(RenderBackend_Surface *source_surface, const RenderBackend_Rect *source_rect, RenderBackend_Surface *destination_surface, const RenderBackend_Rect *destination_rect, bool colour_key)
-{
-	const RenderMode render_mode = (colour_key ? MODE_DRAW_SURFACE_WITH_TRANSPARENCY : MODE_DRAW_SURFACE);
-
-	// Flush vertex data if a context-change is needed
-	if (last_render_mode != render_mode || last_source_texture != source_surface->texture_id || last_destination_texture != destination_surface->texture_id)
-	{
-		FlushVertexBuffer();
-
-		last_render_mode = render_mode;
-		last_source_texture = source_surface->texture_id;
-		last_destination_texture = destination_surface->texture_id;
-
-		// Point our framebuffer to the destination texture
-		glFramebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_TEXTURE_2D, destination_surface->texture_id, 0);
-
-		glViewport(0, 0, destination_surface->width, destination_surface->height);
-
-		GLfloat vertex_transform[4 * 4] = {
-			2.0f / destination_surface->width, 0.0f, 0.0f, -1.0f,
-			0.0f, 2.0f / destination_surface->height, 0.0f, -1.0f,
-			0.0f, 0.0f, 0.0f, 0.0f,
-			0.0f, 0.0f, 0.0f, 1.0f,
-		};
-
-		// Invert the Y-axis when drawing to the screen, since everything is upside-down in OpenGL for some reason
-		if (destination_surface->texture_id == 0)
-		{
-			vertex_transform[4 + 1] = -vertex_transform[4 + 1];
-			vertex_transform[4 + 3] = -vertex_transform[4 + 3];
-		}
-
-		// Switch to colour-key shader if we have to
-		glUseProgram(colour_key ? program_texture_colour_key.id : program_texture.id);
-		glUniform2f(colour_key ? program_texture_colour_key.uniforms.texture_coordinate_transform : program_texture.uniforms.texture_coordinate_transform, 1.0f / source_surface->width, 1.0f / source_surface->height);
-		glUniformMatrix4fv(colour_key ? program_texture_colour_key.uniforms.vertex_transform : program_texture.uniforms.vertex_transform, 1, GL_FALSE, vertex_transform);
-
-		glDisable(GL_BLEND);
-
-		// Enable texture coordinates, since this uses textures
-		glEnableVertexAttribArray(ATTRIBUTE_INPUT_TEXTURE_COORDINATES);
-
-		glBindTexture(GL_TEXTURE_2D, source_surface->texture_id);
-	}
-
-	// Add data to the vertex queue
-	VertexBufferSlot *vertex_buffer_slot = GetVertexBufferSlot();
-
-	if (vertex_buffer_slot != NULL)
-	{
-		const GLfloat vertex_left = destination_rect->left;
-		const GLfloat vertex_top = destination_rect->top;
-		const GLfloat vertex_right = destination_rect->right;
-		const GLfloat vertex_bottom = destination_rect->bottom;
-
-		vertex_buffer_slot->vertices[0][0].position.x = vertex_left;
-		vertex_buffer_slot->vertices[0][0].position.y = vertex_top;
-		vertex_buffer_slot->vertices[0][1].position.x = vertex_right;
-		vertex_buffer_slot->vertices[0][1].position.y = vertex_top;
-		vertex_buffer_slot->vertices[0][2].position.x = vertex_right;
-		vertex_buffer_slot->vertices[0][2].position.y = vertex_bottom;
-
-		vertex_buffer_slot->vertices[1][0].position.x = vertex_left;
-		vertex_buffer_slot->vertices[1][0].position.y = vertex_top;
-		vertex_buffer_slot->vertices[1][1].position.x = vertex_right;
-		vertex_buffer_slot->vertices[1][1].position.y = vertex_bottom;
-		vertex_buffer_slot->vertices[1][2].position.x = vertex_left;
-		vertex_buffer_slot->vertices[1][2].position.y = vertex_bottom;
-
-		const GLfloat texture_left = source_rect->left;
-		const GLfloat texture_top = source_rect->top;
-		const GLfloat texture_right = source_rect->right;
-		const GLfloat texture_bottom = source_rect->bottom;
-
-		vertex_buffer_slot->vertices[0][0].texture.x = texture_left;
-		vertex_buffer_slot->vertices[0][0].texture.y = texture_top;
-		vertex_buffer_slot->vertices[0][1].texture.x = texture_right;
-		vertex_buffer_slot->vertices[0][1].texture.y = texture_top;
-		vertex_buffer_slot->vertices[0][2].texture.x = texture_right;
-		vertex_buffer_slot->vertices[0][2].texture.y = texture_bottom;
-
-		vertex_buffer_slot->vertices[1][0].texture.x = texture_left;
-		vertex_buffer_slot->vertices[1][0].texture.y = texture_top;
-		vertex_buffer_slot->vertices[1][1].texture.x = texture_right;
-		vertex_buffer_slot->vertices[1][1].texture.y = texture_bottom;
-		vertex_buffer_slot->vertices[1][2].texture.x = texture_left;
-		vertex_buffer_slot->vertices[1][2].texture.y = texture_bottom;
-	}
-}
-
-void RenderBackend_Blit(RenderBackend_Surface *source_surface, const RenderBackend_Rect *rect, RenderBackend_Surface *destination_surface, long x, long y, bool colour_key)
-{
-	const RenderBackend_Rect destination_rect = {x, y, x + (rect->right - rect->left), y + (rect->bottom - rect->top)};
-
-	Blit(source_surface, rect, destination_surface, &destination_rect, colour_key);
-}
-
-void RenderBackend_ColourFill(RenderBackend_Surface *surface, const RenderBackend_Rect *rect, unsigned char red, unsigned char green, unsigned char blue)
-{
-	static unsigned char last_red;
-	static unsigned char last_green;
-	static unsigned char last_blue;
-
-	// Flush vertex data if a context-change is needed
-	if (last_render_mode != MODE_COLOUR_FILL || last_destination_texture != surface->texture_id || last_red != red || last_green != green || last_blue != blue)
-	{
-		FlushVertexBuffer();
-
-		last_render_mode = MODE_COLOUR_FILL;
-		last_source_texture = 0;
-		last_destination_texture = surface->texture_id;
-		last_red = red;
-		last_green = green;
-		last_blue = blue;
-
-		// Point our framebuffer to the destination texture
-		glFramebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_TEXTURE_2D, surface->texture_id, 0);
-		glViewport(0, 0, surface->width, surface->height);
-
-		const GLfloat vertex_transform[4 * 4] = {
-			2.0f / surface->width, 0.0f, 0.0f, -1.0f,
-			0.0f, 2.0f / surface->height, 0.0f, -1.0f,
-			0.0f, 0.0f, 0.0f, 0.0f,
-			0.0f, 0.0f, 0.0f, 1.0f,
-		};
-
-		glUseProgram(program_colour_fill.id);
-		glUniformMatrix4fv(program_colour_fill.uniforms.vertex_transform, 1, GL_FALSE, vertex_transform);
-
-		glDisable(GL_BLEND);
-
-		// Disable texture coordinate array, since this doesn't use textures
-		glDisableVertexAttribArray(ATTRIBUTE_INPUT_TEXTURE_COORDINATES);
-
-		glUniform4f(program_colour_fill.uniforms.colour, red / 255.0f, green / 255.0f, blue / 255.0f, 1.0f);
-	}
-
-	// Add data to the vertex queue
-	VertexBufferSlot *vertex_buffer_slot = GetVertexBufferSlot();
-
-	if (vertex_buffer_slot != NULL)
-	{
-		const GLfloat vertex_left = rect->left;
-		const GLfloat vertex_top = rect->top;
-		const GLfloat vertex_right = rect->right;
-		const GLfloat vertex_bottom = rect->bottom;
-
-		vertex_buffer_slot->vertices[0][0].position.x = vertex_left;
-		vertex_buffer_slot->vertices[0][0].position.y = vertex_top;
-		vertex_buffer_slot->vertices[0][1].position.x = vertex_right;
-		vertex_buffer_slot->vertices[0][1].position.y = vertex_top;
-		vertex_buffer_slot->vertices[0][2].position.x = vertex_right;
-		vertex_buffer_slot->vertices[0][2].position.y = vertex_bottom;
-
-		vertex_buffer_slot->vertices[1][0].position.x = vertex_left;
-		vertex_buffer_slot->vertices[1][0].position.y = vertex_top;
-		vertex_buffer_slot->vertices[1][1].position.x = vertex_right;
-		vertex_buffer_slot->vertices[1][1].position.y = vertex_bottom;
-		vertex_buffer_slot->vertices[1][2].position.x = vertex_left;
-		vertex_buffer_slot->vertices[1][2].position.y = vertex_bottom;
-	}
-}
-
-//////////////////////
-// Glyph management //
-//////////////////////
-
-RenderBackend_GlyphAtlas* RenderBackend_CreateGlyphAtlas(size_t width, size_t height)
-{
-	RenderBackend_GlyphAtlas *atlas = (RenderBackend_GlyphAtlas*)malloc(sizeof(RenderBackend_GlyphAtlas));
-
-	if (atlas != NULL)
-	{
-		atlas->width = width;
-		atlas->height = height;
-
-		glGenTextures(1, &atlas->texture_id);
-		glBindTexture(GL_TEXTURE_2D, atlas->texture_id);
-
-	#ifdef USE_OPENGLES2
-		glTexImage2D(GL_TEXTURE_2D, 0, GL_LUMINANCE, width, height, 0, GL_LUMINANCE, GL_UNSIGNED_BYTE, NULL);
-	#else
-		glTexImage2D(GL_TEXTURE_2D, 0, GL_R8, width, height, 0, GL_RED, GL_UNSIGNED_BYTE, NULL);
-	#endif
-
-		glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST);
-		glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST);
-		glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE);
-		glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE);
-	#ifndef USE_OPENGLES2
-		glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_R, GL_CLAMP_TO_EDGE);
-	#endif
-
-		glBindTexture(GL_TEXTURE_2D, last_source_texture);
-	}
-
-	return atlas;
-}
-
-void RenderBackend_DestroyGlyphAtlas(RenderBackend_GlyphAtlas *atlas)
-{
-	glDeleteTextures(1, &atlas->texture_id);
-	free(atlas);
-}
-
-void RenderBackend_UploadGlyph(RenderBackend_GlyphAtlas *atlas, size_t x, size_t y, const unsigned char *pixels, size_t width, size_t height, size_t pitch)
-{
-#ifdef USE_OPENGLES2
-	unsigned char *buffer = (unsigned char*)malloc(width * height);
-
-	if (buffer == NULL)
-		return;
-
-	for (size_t y = 0; y < height; ++y)
-		memcpy (&buffer[y * width], &pixels[y * pitch], width);
-#else
-	const unsigned char *buffer = pixels;
-
-	glPixelStorei(GL_UNPACK_ROW_LENGTH, pitch);
-#endif
-
-	SetTextureUploadAlignment(width);
-	glBindTexture(GL_TEXTURE_2D, atlas->texture_id);
-#ifdef USE_OPENGLES2
-	glTexSubImage2D(GL_TEXTURE_2D, 0, x, y, width, height, GL_LUMINANCE, GL_UNSIGNED_BYTE, buffer);
-#else
-	glTexSubImage2D(GL_TEXTURE_2D, 0, x, y, width, height, GL_RED, GL_UNSIGNED_BYTE, buffer);
-#endif
-	glBindTexture(GL_TEXTURE_2D, last_source_texture);
-
-#ifdef USE_OPENGLES2
-	free(buffer);
-#else
-	glPixelStorei(GL_UNPACK_ROW_LENGTH, 0);
-#endif
-}
-
-void RenderBackend_PrepareToDrawGlyphs(RenderBackend_GlyphAtlas *atlas, RenderBackend_Surface *destination_surface, unsigned char red, unsigned char green, unsigned char blue)
-{
-	static unsigned char last_red;
-	static unsigned char last_green;
-	static unsigned char last_blue;
-
-	// Flush vertex data if a context-change is needed
-	if (last_render_mode != MODE_DRAW_GLYPH || last_source_texture != atlas->texture_id || last_destination_texture != destination_surface->texture_id || last_red != red || last_green != green || last_blue != blue)
-	{
-		FlushVertexBuffer();
-
-		last_render_mode = MODE_DRAW_GLYPH;
-		last_source_texture = atlas->texture_id;
-		last_destination_texture = destination_surface->texture_id;
-		last_red = red;
-		last_green = green;
-		last_blue = blue;
-
-		const GLfloat vertex_transform[4 * 4] = {
-			2.0f / destination_surface->width, 0.0f, 0.0f, -1.0f,
-			0.0f, 2.0f / destination_surface->height, 0.0f, -1.0f,
-			0.0f, 0.0f, 1.0f, 0.0f,
-			0.0f, 0.0f, 0.0f, 1.0f,
-		};
-
-		glUseProgram(program_glyph.id);
-		glUniform2f(program_glyph.uniforms.texture_coordinate_transform, 1.0f / atlas->width, 1.0f / atlas->height);
-		glUniform4f(program_glyph.uniforms.colour, red / 255.0f, green / 255.0f, blue / 255.0f, 1.0f);
-		glUniformMatrix4fv(program_glyph.uniforms.vertex_transform, 1, GL_FALSE, vertex_transform);
-
-		// Point our framebuffer to the destination texture
-		glFramebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_TEXTURE_2D, destination_surface->texture_id, 0);
-		glViewport(0, 0, destination_surface->width, destination_surface->height);
-
-		glEnable(GL_BLEND);
-
-		// Enable texture coordinates, since this uses textures
-		glEnableVertexAttribArray(ATTRIBUTE_INPUT_TEXTURE_COORDINATES);
-
-		glBindTexture(GL_TEXTURE_2D, atlas->texture_id);
-	}
-}
-
-void RenderBackend_DrawGlyph(long x, long y, size_t glyph_x, size_t glyph_y, size_t glyph_width, size_t glyph_height)
-{
-	// Add data to the vertex queue
-	VertexBufferSlot *vertex_buffer_slot = GetVertexBufferSlot();
-
-	if (vertex_buffer_slot != NULL)
-	{
-		const GLfloat vertex_left = x;
-		const GLfloat vertex_top = y;
-		const GLfloat vertex_right = x + glyph_width;
-		const GLfloat vertex_bottom = y + glyph_height;
-
-		vertex_buffer_slot->vertices[0][0].position.x = vertex_left;
-		vertex_buffer_slot->vertices[0][0].position.y = vertex_top;
-		vertex_buffer_slot->vertices[0][1].position.x = vertex_right;
-		vertex_buffer_slot->vertices[0][1].position.y = vertex_top;
-		vertex_buffer_slot->vertices[0][2].position.x = vertex_right;
-		vertex_buffer_slot->vertices[0][2].position.y = vertex_bottom;
-
-		vertex_buffer_slot->vertices[1][0].position.x = vertex_left;
-		vertex_buffer_slot->vertices[1][0].position.y = vertex_top;
-		vertex_buffer_slot->vertices[1][1].position.x = vertex_right;
-		vertex_buffer_slot->vertices[1][1].position.y = vertex_bottom;
-		vertex_buffer_slot->vertices[1][2].position.x = vertex_left;
-		vertex_buffer_slot->vertices[1][2].position.y = vertex_bottom;
-
-		const GLfloat texture_left = glyph_x;
-		const GLfloat texture_top = glyph_y;
-		const GLfloat texture_right = glyph_x + glyph_width;
-		const GLfloat texture_bottom = glyph_y + glyph_height;
-
-		vertex_buffer_slot->vertices[0][0].texture.x = texture_left;
-		vertex_buffer_slot->vertices[0][0].texture.y = texture_top;
-		vertex_buffer_slot->vertices[0][1].texture.x = texture_right;
-		vertex_buffer_slot->vertices[0][1].texture.y = texture_top;
-		vertex_buffer_slot->vertices[0][2].texture.x = texture_right;
-		vertex_buffer_slot->vertices[0][2].texture.y = texture_bottom;
-
-		vertex_buffer_slot->vertices[1][0].texture.x = texture_left;
-		vertex_buffer_slot->vertices[1][0].texture.y = texture_top;
-		vertex_buffer_slot->vertices[1][1].texture.x = texture_right;
-		vertex_buffer_slot->vertices[1][1].texture.y = texture_bottom;
-		vertex_buffer_slot->vertices[1][2].texture.x = texture_left;
-		vertex_buffer_slot->vertices[1][2].texture.y = texture_bottom;
-	}
-}
-
-///////////
-// Misc. //
-///////////
-
-void RenderBackend_HandleRenderTargetLoss(void)
-{
-	// No problem for us
-}
-
-void RenderBackend_HandleWindowResize(size_t width, size_t height)
-{
-	size_t upscale_factor = MAX(1, MIN((width + framebuffer_surface->width / 2) / framebuffer_surface->width, (height + framebuffer_surface->height / 2) / framebuffer_surface->height));
-
-	size_t upscaled_framebuffer_width = framebuffer_surface->width * upscale_factor;
-	size_t upscaled_framebuffer_height = framebuffer_surface->height * upscale_factor;
-
-	if (upscaled_framebuffer_surface != NULL)
-	{
-		RenderBackend_FreeSurface(upscaled_framebuffer_surface);
-		upscaled_framebuffer_surface = NULL;
-	}
-
-	// Create rect that forces 4:3 no matter what size the window is
-	if (width * upscaled_framebuffer_height >= upscaled_framebuffer_width * height) // Fancy way to do `if (width / height >= upscaled_framebuffer->width / upscaled_framebuffer->height)` without floats
-	{
-		window_rect.right = (height * upscaled_framebuffer_width) / upscaled_framebuffer_height;
-		window_rect.bottom = height;
-	}
-	else
-	{
-		window_rect.right = width;
-		window_rect.bottom = (width * upscaled_framebuffer_height) / upscaled_framebuffer_width;
-	}
-
-	window_rect.left = (width - window_rect.right) / 2;
-	window_rect.top = (height - window_rect.bottom) / 2;
-	window_rect.right += window_rect.left;
-	window_rect.bottom += window_rect.top;
-
-	window_surface.width = width;
-	window_surface.height = height;
-
-	if ((window_rect.right - window_rect.left) % framebuffer_surface->width != 0 || (window_rect.bottom - window_rect.top) % framebuffer_surface->height != 0)
-	{
-		upscaled_framebuffer_surface = CreateSurface(upscaled_framebuffer_width, upscaled_framebuffer_height, true);
-
-		if (upscaled_framebuffer_surface == NULL)
-			Backend_PrintError("Couldn't regenerate upscaled framebuffer");
-	}
-}
diff --git a/src/Backends/Rendering/OpenGLES2.cpp b/src/Backends/Rendering/OpenGLES2.cpp
deleted file mode 100644
index f24f8577..00000000
--- a/src/Backends/Rendering/OpenGLES2.cpp
+++ /dev/null
@@ -1,4 +0,0 @@
-// I would use -DUSE_OPENGLES2 when RENDERER=OpenGLES2 is passed instead, but CMake likes to rebuild the entire
-// project if I do that, and Make doesn't bother rebuilding anything at all. This method avoids both of those problems.
-#define USE_OPENGLES2
-#include "OpenGL3.cpp"
diff --git a/src/Backends/Rendering/SDLSurface.cpp b/src/Backends/Rendering/SDLSurface.cpp
deleted file mode 100644
index 5dd48453..00000000
--- a/src/Backends/Rendering/SDLSurface.cpp
+++ /dev/null
@@ -1,277 +0,0 @@
-// Released under the MIT licence.
-// See LICENCE.txt for details.
-
-#include "../Rendering.h"
-
-#include <stddef.h>
-#include <stdlib.h>
-#include <string.h>
-#include <string>
-
-#include "SDL.h"
-
-#include "../Misc.h"
-#include "../Shared/SDL.h"
-
-typedef struct RenderBackend_Surface
-{
-	SDL_Surface *sdlsurface;
-} RenderBackend_Surface;
-
-typedef struct RenderBackend_GlyphAtlas
-{
-	SDL_Surface *sdlsurface;
-} RenderBackend_GlyphAtlas;
-
-SDL_Window *window;
-
-static SDL_Surface *window_sdlsurface;
-
-static RenderBackend_Surface framebuffer;
-
-static RenderBackend_GlyphAtlas *glyph_atlas;
-static RenderBackend_Surface *glyph_destination_surface;
-
-static void RectToSDLRect(const RenderBackend_Rect *rect, SDL_Rect *sdl_rect)
-{
-	sdl_rect->x = (int)rect->left;
-	sdl_rect->y = (int)rect->top;
-	sdl_rect->w = (int)(rect->right - rect->left);
-	sdl_rect->h = (int)(rect->bottom - rect->top);
-
-	if (sdl_rect->w < 0)
-		sdl_rect->w = 0;
-
-	if (sdl_rect->h < 0)
-		sdl_rect->h = 0;
-}
-
-RenderBackend_Surface* RenderBackend_Init(const char *window_title, size_t screen_width, size_t screen_height, bool fullscreen)
-{
-	window = SDL_CreateWindow(window_title, SDL_WINDOWPOS_CENTERED, SDL_WINDOWPOS_CENTERED, screen_width, screen_height, 0);
-
-	if (window != NULL)
-	{
-		if (fullscreen)
-			if (SDL_SetWindowFullscreen(window, SDL_WINDOW_FULLSCREEN) < 0)
-				Backend_PrintError("Could not set window to fullscreen: %s", SDL_GetError());
-
-		window_sdlsurface = SDL_GetWindowSurface(window);
-
-		if (window_sdlsurface != NULL)
-		{
-			framebuffer.sdlsurface = SDL_CreateRGBSurfaceWithFormat(0, window_sdlsurface->w, window_sdlsurface->h, 0, SDL_PIXELFORMAT_RGB24);
-
-			if (framebuffer.sdlsurface != NULL)
-			{
-				Backend_PostWindowCreation();
-
-				return &framebuffer;
-			}
-
-			std::string error_message = std::string("Could not create framebuffer surface: ") + SDL_GetError();
-			Backend_ShowMessageBox("Fatal error (SDLSurface rendering backend)", error_message.c_str());
-		}
-		else
-		{
-			std::string error_message = std::string("Could not get SDL surface of the window: ") + SDL_GetError();
-			Backend_ShowMessageBox("Fatal error (SDLSurface rendering backend)", error_message.c_str());
-		}
-
-		SDL_DestroyWindow(window);
-	}
-	else
-	{
-		std::string error_message = std::string("Could not create window: ") + SDL_GetError();
-		Backend_ShowMessageBox("Fatal error (SDLSurface rendering backend)", error_message.c_str());
-	}
-
-	return NULL;
-}
-
-void RenderBackend_Deinit(void)
-{
-	SDL_FreeSurface(framebuffer.sdlsurface);
-	SDL_DestroyWindow(window);
-}
-
-void RenderBackend_DrawScreen(void)
-{
-	if (SDL_BlitSurface(framebuffer.sdlsurface, NULL, window_sdlsurface, NULL) < 0)
-		Backend_PrintError("Couldn't blit framebuffer surface to window surface: %s", SDL_GetError());
-
-	if (SDL_UpdateWindowSurface(window) < 0)
-		Backend_PrintError("Couldn't put window surface on screen: %s", SDL_GetError());
-}
-
-RenderBackend_Surface* RenderBackend_CreateSurface(size_t width, size_t height, bool render_target)
-{
-	(void)render_target;
-
-	RenderBackend_Surface *surface = (RenderBackend_Surface*)malloc(sizeof(RenderBackend_Surface));
-
-	if (surface == NULL)
-		return NULL;
-
-	surface->sdlsurface = SDL_CreateRGBSurfaceWithFormat(0, width, height, 0, SDL_PIXELFORMAT_RGB24);
-
-	if (surface->sdlsurface == NULL)
-	{
-		free(surface);
-		return NULL;
-	}
-
-	return surface;
-}
-
-void RenderBackend_FreeSurface(RenderBackend_Surface *surface)
-{
-	SDL_FreeSurface(surface->sdlsurface);
-	free(surface);
-}
-
-bool RenderBackend_IsSurfaceLost(RenderBackend_Surface *surface)
-{
-	(void)surface;
-
-	return false;
-}
-
-void RenderBackend_RestoreSurface(RenderBackend_Surface *surface)
-{
-	(void)surface;
-}
-
-void RenderBackend_UploadSurface(RenderBackend_Surface *surface, const unsigned char *pixels, size_t width, size_t height)
-{
-	if (SDL_LockSurface(surface->sdlsurface) == 0)
-	{
-		for (size_t y = 0; y < height; ++y)
-			memcpy(&((unsigned char*)surface->sdlsurface->pixels)[y * surface->sdlsurface->pitch], &pixels[y * width * 3], width * 3);
-
-		SDL_UnlockSurface(surface->sdlsurface);
-	}
-}
-
-void RenderBackend_Blit(RenderBackend_Surface *source_surface, const RenderBackend_Rect *rect, RenderBackend_Surface *destination_surface, long x, long y, bool colour_key)
-{
-	SDL_Rect source_rect;
-	RectToSDLRect(rect, &source_rect);
-
-	SDL_Rect destination_rect;
-	destination_rect.x = x;
-	destination_rect.y = y;
-	destination_rect.w = source_rect.w;
-	destination_rect.h = source_rect.h;
-
-	// Assumes the colour key will always be #000000 (black)
-	if (SDL_SetColorKey(source_surface->sdlsurface, colour_key ? SDL_TRUE : SDL_FALSE, SDL_MapRGB(source_surface->sdlsurface->format, 0, 0, 0)) < 0)
-		Backend_PrintError("Couldn't set color key of surface: %s", SDL_GetError());
-
-	if (SDL_BlitSurface(source_surface->sdlsurface, &source_rect, destination_surface->sdlsurface, &destination_rect) < 0)
-		Backend_PrintError("Couldn't blit surface: %s", SDL_GetError());
-}
-
-void RenderBackend_ColourFill(RenderBackend_Surface *surface, const RenderBackend_Rect *rect, unsigned char red, unsigned char green, unsigned char blue)
-{
-	SDL_Rect destination_rect;
-	RectToSDLRect(rect, &destination_rect);
-
-	if (SDL_FillRect(surface->sdlsurface, &destination_rect, SDL_MapRGB(surface->sdlsurface->format, red, green, blue)) < 0)
-		Backend_PrintError("Couldn't fill rectangle with color: %s", SDL_GetError());
-}
-
-RenderBackend_GlyphAtlas* RenderBackend_CreateGlyphAtlas(size_t width, size_t height)
-{
-	RenderBackend_GlyphAtlas *atlas = (RenderBackend_GlyphAtlas*)malloc(sizeof(RenderBackend_GlyphAtlas));
-
-	if (atlas != NULL)
-	{
-		atlas->sdlsurface = SDL_CreateRGBSurfaceWithFormat(0, width, height, 0, SDL_PIXELFORMAT_RGBA32);
-
-		if (atlas->sdlsurface != NULL)
-		{
-			return atlas;
-		}
-		else
-		{
-			Backend_PrintError("Couldn't create RBG surface: %s", SDL_GetError());
-		}
-
-		free(atlas);
-	}
-
-	return NULL;	
-}
-
-void RenderBackend_DestroyGlyphAtlas(RenderBackend_GlyphAtlas *atlas)
-{
-	SDL_FreeSurface(atlas->sdlsurface);
-	free(atlas);
-}
-
-void RenderBackend_UploadGlyph(RenderBackend_GlyphAtlas *atlas, size_t x, size_t y, const unsigned char *pixels, size_t width, size_t height, size_t pitch)
-{
-	SDL_LockSurface(atlas->sdlsurface);
-
-	for (size_t iy = 0; iy < height; ++iy)
-	{
-		const unsigned char *source_pointer = &pixels[iy * pitch];
-		unsigned char *destination_pointer = &((unsigned char*)atlas->sdlsurface->pixels)[(y + iy) * atlas->sdlsurface->pitch + x * 4];
-
-		for (size_t ix = 0; ix < width; ++ix)
-		{
-			*destination_pointer++ = 0xFF;
-			*destination_pointer++ = 0xFF;
-			*destination_pointer++ = 0xFF;
-			*destination_pointer++ = *source_pointer++;
-		}
-	}
-
-	SDL_UnlockSurface(atlas->sdlsurface);
-}
-
-void RenderBackend_PrepareToDrawGlyphs(RenderBackend_GlyphAtlas *atlas, RenderBackend_Surface *destination_surface, unsigned char red, unsigned char green, unsigned char blue)
-{
-	glyph_atlas = atlas;
-	glyph_destination_surface = destination_surface;
-
-	if (SDL_SetSurfaceColorMod(atlas->sdlsurface, red, green, blue) < 0)
-		Backend_PrintError("Couldn't set color value: %s", SDL_GetError());
-}
-
-void RenderBackend_DrawGlyph(long x, long y, size_t glyph_x, size_t glyph_y, size_t glyph_width, size_t glyph_height)
-{
-	SDL_Rect source_rect;
-	source_rect.x = glyph_x;
-	source_rect.y = glyph_y;
-	source_rect.w = glyph_width;
-	source_rect.h = glyph_height;
-
-	SDL_Rect destination_rect;
-	destination_rect.x = x;
-	destination_rect.y = y;
-	destination_rect.w = glyph_width;
-	destination_rect.h = glyph_height;
-
-	if (SDL_BlitSurface(glyph_atlas->sdlsurface, &source_rect, glyph_destination_surface->sdlsurface, &destination_rect) < 0)
-		Backend_PrintError("Couldn't blit glyph indivual surface to final glyph surface: %s", SDL_GetError());
-}
-
-void RenderBackend_HandleRenderTargetLoss(void)
-{
-	// No problem for us
-}
-
-void RenderBackend_HandleWindowResize(size_t width, size_t height)
-{
-	(void)width;
-	(void)height;
-
-	// https://wiki.libsdl.org/SDL_GetWindowSurface
-	// We need to fetch a new surface pointer
-	window_sdlsurface = SDL_GetWindowSurface(window);
-
-	if (window_sdlsurface == NULL)
-		Backend_PrintError("Couldn't get SDL surface for window after resize: %s", SDL_GetError());
-}
diff --git a/src/Backends/Rendering/SDLTexture.cpp b/src/Backends/Rendering/SDLTexture.cpp
index b4de29a1..26c6821b 100644
--- a/src/Backends/Rendering/SDLTexture.cpp
+++ b/src/Backends/Rendering/SDLTexture.cpp
@@ -35,7 +35,7 @@ typedef struct RenderBackend_GlyphAtlas
 	SDL_Texture *texture;
 } RenderBackend_GlyphAtlas;
 
-SDL_Window *window;
+inline SDL_Window *window;
 
 static SDL_Renderer *renderer;
 
diff --git a/src/Backends/Rendering/Software.cpp b/src/Backends/Rendering/Software.cpp
deleted file mode 100644
index c13b766f..00000000
--- a/src/Backends/Rendering/Software.cpp
+++ /dev/null
@@ -1,458 +0,0 @@
-// Released under the MIT licence.
-// See LICENCE.txt for details.
-
-#include "../Rendering.h"
-
-#include <stddef.h>
-#include <stdlib.h>
-#include <string.h>
-
-#include "../Misc.h"
-#include "Window/Software.h"
-#include "../../Attributes.h"
-
-#define MIN(a, b) ((a) < (b) ? (a) : (b))
-#define MAX(a, b) ((a) > (b) ? (a) : (b))
-
-typedef struct RenderBackend_Surface
-{
-	unsigned char *pixels;
-	size_t width;
-	size_t height;
-	size_t pitch;
-} RenderBackend_Surface;
-
-typedef struct RenderBackend_GlyphAtlas
-{
-	unsigned char *pixels;
-	size_t width;
-	size_t height;
-} RenderBackend_GlyphAtlas;
-
-static RenderBackend_Surface framebuffer;
-
-static RenderBackend_GlyphAtlas *glyph_atlas;
-static RenderBackend_Surface *glyph_destination_surface;
-static unsigned char glyph_colour_channels[3];
-
-RenderBackend_Surface* RenderBackend_Init(const char *window_title, size_t screen_width, size_t screen_height, bool fullscreen)
-{
-	if (WindowBackend_Software_CreateWindow(window_title, screen_width, screen_height, fullscreen))
-	{
-		framebuffer.pixels = WindowBackend_Software_GetFramebuffer(&framebuffer.pitch);
-	#ifdef __3DS__
-		framebuffer.width = screen_height;
-		framebuffer.height = screen_width;
-	#else
-		framebuffer.width = screen_width;
-		framebuffer.height = screen_height;
-	#endif
-
-		return &framebuffer;
-	}
-	else
-	{
-		Backend_PrintError("Failed to create window");
-	}
-
-	return NULL;
-}
-
-void RenderBackend_Deinit(void)
-{
-	WindowBackend_Software_DestroyWindow();
-}
-
-void RenderBackend_DrawScreen(void)
-{
-	WindowBackend_Software_Display();
-
-	// Backends may use double-buffering, so fetch a new framebuffer just in case
-	framebuffer.pixels = WindowBackend_Software_GetFramebuffer(&framebuffer.pitch);
-}
-
-RenderBackend_Surface* RenderBackend_CreateSurface(size_t width, size_t height, bool render_target)
-{
-	(void)render_target;
-
-	RenderBackend_Surface *surface = (RenderBackend_Surface*)malloc(sizeof(RenderBackend_Surface));
-
-	if (surface == NULL)
-		return NULL;
-
-	surface->pixels = (unsigned char*)malloc(width * height * 3);
-
-	if (surface->pixels == NULL)
-	{
-		free(surface);
-		return NULL;
-	}
-
-#ifdef __3DS__
-	surface->width = height;
-	surface->height = width;
-	surface->pitch = height * 3;
-#else
-	surface->width = width;
-	surface->height = height;
-	surface->pitch = width * 3;
-#endif
-
-	return surface;
-}
-
-void RenderBackend_FreeSurface(RenderBackend_Surface *surface)
-{
-	free(surface->pixels);
-	free(surface);
-}
-
-bool RenderBackend_IsSurfaceLost(RenderBackend_Surface *surface)
-{
-	(void)surface;
-
-	return false;
-}
-
-void RenderBackend_RestoreSurface(RenderBackend_Surface *surface)
-{
-	(void)surface;
-}
-
-void RenderBackend_UploadSurface(RenderBackend_Surface *surface, const unsigned char *pixels, size_t width, size_t height)
-{
-#ifdef __3DS__
-	// Rotate 90 degrees clockwise, and convert from RGB to BGR
-	const unsigned char *source_pointer = pixels;
-
-	for (size_t y = 0; y < height; ++y)
-	{
-		for (size_t x = 0; x < width; ++x)
-		{
-			unsigned char *destination_pixel = &surface->pixels[x * surface->pitch + (surface->width - y - 1) * 3];
-
-			destination_pixel[2] = *source_pointer++;
-			destination_pixel[1] = *source_pointer++;
-			destination_pixel[0] = *source_pointer++;
-		}
-	}
-#else
-	for (size_t y = 0; y < height; ++y)
-		memcpy(&surface->pixels[y * surface->pitch], &pixels[y * width * 3], width * 3);
-#endif
-}
-
-ATTRIBUTE_HOT void RenderBackend_Blit(RenderBackend_Surface *source_surface, const RenderBackend_Rect *rect, RenderBackend_Surface *destination_surface, long x, long y, bool colour_key)
-{
-	RenderBackend_Rect rect_clamped;
-
-#ifdef __3DS__
-	// Rotate
-	rect_clamped.left = source_surface->width - rect->bottom;
-	rect_clamped.top = rect->left;
-	rect_clamped.right = source_surface->width - rect->top;
-	rect_clamped.bottom = rect->right;
-
-	const long new_x = (destination_surface->width - y) - (rect_clamped.right - rect_clamped.left);
-	const long new_y = x;
-	x = new_x;
-	y = new_y;
-#else
-	rect_clamped.left = rect->left;
-	rect_clamped.top = rect->top;
-	rect_clamped.right = rect->right;
-	rect_clamped.bottom = rect->bottom;
-#endif
-
-	// Clamp the rect and coordinates so we don't write outside the pixel buffer
-	long overflow;
-
-	overflow = 0 - x;
-	if (overflow > 0)
-	{
-		rect_clamped.left += overflow;
-		x += overflow;
-	}
-
-	overflow = 0 - y;
-	if (overflow > 0)
-	{
-		rect_clamped.top += overflow;
-		y += overflow;
-	}
-
-	overflow = (x + (rect_clamped.right - rect_clamped.left)) - destination_surface->width;
-	if (overflow > 0)
-		rect_clamped.right -= overflow;
-
-	overflow = (y + (rect_clamped.bottom - rect_clamped.top)) - destination_surface->height;
-	if (overflow > 0)
-		rect_clamped.bottom -= overflow;
-
-	if (rect_clamped.bottom - rect_clamped.top <= 0)
-		return;
-
-	if (rect_clamped.right - rect_clamped.left <= 0)
-		return;
-
-	// Do the actual blitting
-	if (colour_key)
-	{
-		for (long j = 0; j < rect_clamped.bottom - rect_clamped.top; ++j)
-		{
-			const unsigned char *source_pointer = &source_surface->pixels[((rect_clamped.top + j) * source_surface->pitch) + (rect_clamped.left * 3)];
-			unsigned char *destination_pointer = &destination_surface->pixels[((y + j) * destination_surface->pitch) + (x * 3)];
-
-			for (long i = 0; i < rect_clamped.right - rect_clamped.left; ++i)
-			{
-				if (UNLIKELY(source_pointer[0] == 0 && source_pointer[1] == 0 && source_pointer[2] == 0))	// Assumes the colour key will always be #000000 (black)
-				{
-					source_pointer += 3;
-					destination_pointer += 3;
-				}
-				else
-				{
-					*destination_pointer++ = *source_pointer++;
-					*destination_pointer++ = *source_pointer++;
-					*destination_pointer++ = *source_pointer++;
-				}
-			}
-		}
-	}
-	else
-	{
-		const unsigned char *source_pointer = &source_surface->pixels[(rect_clamped.top * source_surface->pitch) + (rect_clamped.left * 3)];
-		unsigned char *destination_pointer = &destination_surface->pixels[(y * destination_surface->pitch) + (x * 3)];
-
-		for (long j = 0; j < rect_clamped.bottom - rect_clamped.top; ++j)
-		{
-			memcpy(destination_pointer, source_pointer, (rect_clamped.right - rect_clamped.left) * 3);
-
-			source_pointer += source_surface->pitch;
-			destination_pointer += destination_surface->pitch;
-		}
-	}
-}
-
-ATTRIBUTE_HOT void RenderBackend_ColourFill(RenderBackend_Surface *surface, const RenderBackend_Rect *rect, unsigned char red, unsigned char green, unsigned char blue)
-{
-	RenderBackend_Rect rect_clamped;
-
-#ifdef __3DS__
-	// Rotate
-	rect_clamped.left = surface->width - rect->bottom;
-	rect_clamped.top = rect->left;
-	rect_clamped.right = surface->width - rect->top;
-	rect_clamped.bottom = rect->right;
-#else
-	rect_clamped.left = rect->left;
-	rect_clamped.top = rect->top;
-	rect_clamped.right = rect->right;
-	rect_clamped.bottom = rect->bottom;
-#endif
-
-	// Clamp the rect so it doesn't write outside the pixel buffer
-	long overflow;
-
-	overflow = 0 - rect_clamped.left;
-	if (overflow > 0)
-		rect_clamped.left += overflow;
-
-	overflow = 0 - rect_clamped.top;
-	if (overflow > 0)
-		rect_clamped.top += overflow;
-
-	overflow = rect_clamped.right - surface->width;
-	if (overflow > 0)
-		rect_clamped.right -= overflow;
-
-	overflow = rect_clamped.bottom - surface->height;
-	if (overflow > 0)
-		rect_clamped.bottom -= overflow;
-
-	if (rect_clamped.bottom - rect_clamped.top <= 0)
-		return;
-
-	if (rect_clamped.right - rect_clamped.left <= 0)
-		return;
-
-	for (long j = 0; j < rect_clamped.bottom - rect_clamped.top; ++j)
-	{
-		unsigned char *destination_pointer = &surface->pixels[((rect_clamped.top + j) * surface->pitch) + (rect_clamped.left * 3)];
-
-		for (long i = 0; i < rect_clamped.right - rect_clamped.left; ++i)
-		{
-		#ifdef __3DS__
-			*destination_pointer++ = blue;
-			*destination_pointer++ = green;
-			*destination_pointer++ = red;
-		#else
-			*destination_pointer++ = red;
-			*destination_pointer++ = green;
-			*destination_pointer++ = blue;
-		#endif
-		}
-	}
-}
-
-RenderBackend_GlyphAtlas* RenderBackend_CreateGlyphAtlas(size_t width, size_t height)
-{
-	RenderBackend_GlyphAtlas *atlas = (RenderBackend_GlyphAtlas*)malloc(sizeof(RenderBackend_GlyphAtlas));
-
-	if (atlas != NULL)
-	{
-		atlas->pixels = (unsigned char*)malloc(width * height);
-
-		if (atlas->pixels != NULL)
-		{
-		#ifdef __3DS__
-			atlas->width = height;
-			atlas->height = width;
-		#else
-			atlas->width = width;
-			atlas->height = height;
-		#endif
-
-			return atlas;
-		}
-
-		free(atlas);
-	}
-
-	return NULL;
-}
-
-void RenderBackend_DestroyGlyphAtlas(RenderBackend_GlyphAtlas *atlas)
-{
-	free(atlas->pixels);
-	free(atlas);
-}
-
-void RenderBackend_UploadGlyph(RenderBackend_GlyphAtlas *atlas, size_t x, size_t y, const unsigned char *pixels, size_t width, size_t height, size_t pitch)
-{
-#ifdef __3DS__
-	// Rotate
-	for (size_t h = 0; h < height; ++h)
-	{
-		const unsigned char *source_pointer = &pixels[h * pitch];
-
-		for (size_t w = 0; w < width; ++w)
-			atlas->pixels[(x + w) * atlas->width + (atlas->width - (y + h) - 1)] = *source_pointer++;
-	}
-#else
-	for (size_t i = 0; i < height; ++i)
-		memcpy(&atlas->pixels[(y + i) * atlas->width + x], &pixels[i * pitch], width);
-#endif
-}
-
-void RenderBackend_PrepareToDrawGlyphs(RenderBackend_GlyphAtlas *atlas, RenderBackend_Surface *destination_surface, unsigned char red, unsigned char green, unsigned char blue)
-{
-	glyph_atlas = atlas;
-	glyph_destination_surface = destination_surface;
-
-#ifdef __3DS__
-	glyph_colour_channels[0] = blue;
-	glyph_colour_channels[1] = green;
-	glyph_colour_channels[2] = red;
-#else
-	glyph_colour_channels[0] = red;
-	glyph_colour_channels[1] = green;
-	glyph_colour_channels[2] = blue;
-#endif
-}
-
-void RenderBackend_DrawGlyph(long x, long y, size_t glyph_x, size_t glyph_y, size_t glyph_width, size_t glyph_height)
-{
-#ifdef __3DS__
-	// Rotate
-	const size_t new_glyph_width = glyph_height;
-	const size_t new_glyph_height = glyph_width;
-	glyph_width = new_glyph_width;
-	glyph_height = new_glyph_height;
-
-	const long new_x = (glyph_destination_surface->width - y) - glyph_width;
-	const long new_y = x;
-	x = new_x;
-	y = new_y;
-
-	const long new_glyph_x = (glyph_atlas->width - glyph_y) - glyph_width;
-	const long new_glyph_y = glyph_x;
-	glyph_x = new_glyph_x;
-	glyph_y = new_glyph_y;
-#endif
-
-	size_t surface_x;
-	size_t surface_y;
-
-	// Clamp to within the destination surface's boundaries
-	if (x < 0)
-	{
-		surface_x = -x;
-
-		if (surface_x >= glyph_width)
-			return; // Glyph is offscreen to the left
-
-		glyph_x += surface_x;
-		glyph_width -= surface_x;
-	}
-	else
-	{
-		surface_x = x;
-	}
-
-	if (surface_x >= glyph_destination_surface->width)
-		return; // Glyph is offscreen to the right
-
-	if (glyph_width >= glyph_destination_surface->width - surface_x)
-		glyph_width = glyph_destination_surface->width - surface_x;
-
-	if (y < 0)
-	{
-		surface_y = -y;
-
-		if (surface_y >= glyph_height)
-			return; // Glyph is offscreen to the top
-
-		glyph_y += surface_y;
-		glyph_height -= surface_y;
-	}
-	else
-	{
-		surface_y = y;
-	}
-
-	if (surface_y >= glyph_destination_surface->height)
-		return; // Glyph is offscreen to the bottom
-
-	if (glyph_height >= glyph_destination_surface->height - surface_y)
-		glyph_height = glyph_destination_surface->height - surface_y;
-
-	// Do the actual drawing
-	for (size_t iy = 0; iy < glyph_height; ++iy)
-	{
-		for (size_t ix = 0; ix < glyph_width; ++ix)
-		{
-			const unsigned char alpha_int = glyph_atlas->pixels[(glyph_y + iy) * glyph_atlas->width + (glyph_x + ix)];
-
-			if (alpha_int != 0)
-			{
-				const float alpha = alpha_int / 255.0f;
-
-				unsigned char *bitmap_pixel = &glyph_destination_surface->pixels[(surface_y + iy) * glyph_destination_surface->pitch + (surface_x + ix) * 3];
-
-				for (unsigned int j = 0; j < 3; ++j)
-					bitmap_pixel[j] = (unsigned char)((glyph_colour_channels[j] * alpha) + (bitmap_pixel[j] * (1.0f - alpha)));	// Alpha blending
-			}
-		}
-	}
-}
-
-void RenderBackend_HandleRenderTargetLoss(void)
-{
-	// No problem for us
-}
-
-void RenderBackend_HandleWindowResize(size_t width, size_t height)
-{
-	WindowBackend_Software_HandleWindowResize(width, height);
-}
diff --git a/src/Backends/Rendering/WiiU.cpp b/src/Backends/Rendering/WiiU.cpp
deleted file mode 100644
index 99992983..00000000
--- a/src/Backends/Rendering/WiiU.cpp
+++ /dev/null
@@ -1,928 +0,0 @@
-// Released under the MIT licence.
-// See LICENCE.txt for details.
-
-#include "../Rendering.h"
-
-#include <stddef.h>
-#include <stdlib.h>
-#include <string.h>
-#include <string>
-
-#include <gx2/context.h>
-#include <gx2/display.h>
-#include <gx2/draw.h>
-#include <gx2/event.h>
-#include <gx2/registers.h>
-#include <gx2/sampler.h>
-#include <gx2/texture.h>
-#include <gx2r/buffer.h>
-#include <gx2r/draw.h>
-#include <gx2r/resource.h>
-#include <gx2r/surface.h>
-#include <whb/gfx.h>
-
-#include "../Misc.h"
-
-#define MIN(a,b) ((a) < (b) ? (a) : (b))
-#define MAX(a,b) ((a) > (b) ? (a) : (b))
-
-typedef enum RenderMode
-{
-	MODE_BLANK,
-	MODE_DRAW_SURFACE,
-	MODE_DRAW_SURFACE_WITH_TRANSPARENCY,
-	MODE_COLOUR_FILL,
-	MODE_DRAW_GLYPH
-} RenderMode;
-
-typedef struct RenderBackend_Surface
-{
-	GX2Texture texture;
-	GX2ColorBuffer colour_buffer;
-	bool render_target;
-} RenderBackend_Surface;
-
-typedef struct RenderBackend_GlyphAtlas
-{
-	GX2Texture texture;
-} RenderBackend_GlyphAtlas;
-
-typedef struct Coordinate2D
-{
-	float x;
-	float y;
-} Coordinate2D;
-
-typedef struct Vertex
-{
-	Coordinate2D position;
-	Coordinate2D texture;
-} Vertex;
-
-typedef struct VertexBufferSlot
-{
-	Vertex vertices[4];
-} VertexBufferSlot;
-
-static WHBGfxShaderGroup shader_group_texture;
-static WHBGfxShaderGroup shader_group_texture_colour_key;
-static WHBGfxShaderGroup shader_group_colour_fill;
-static WHBGfxShaderGroup shader_group_glyph;
-
-static GX2RBuffer vertex_buffer;
-
-static GX2Sampler sampler_point;
-static GX2Sampler sampler_linear;
-
-static RenderBackend_Surface *framebuffer_surface;
-static RenderBackend_Surface *upscaled_framebuffer_surface_tv;
-static RenderBackend_Surface *upscaled_framebuffer_surface_drc;
-
-static GX2ContextState *gx2_context;
-
-static VertexBufferSlot *local_vertex_buffer;
-static size_t local_vertex_buffer_size;
-static size_t current_vertex_buffer_slot;
-
-static RenderMode last_render_mode;
-static GX2Texture *last_source_texture;
-static GX2Texture *last_destination_texture;
-
-static const unsigned char shader_colour_fill[] = {
-	#include "WiiUShaders/colour_fill.gsh.h"
-};
-
-static const unsigned char shader_glyph[] = {
-	#include "WiiUShaders/glyph.gsh.h"
-};
-
-static const unsigned char shader_texture[] = {
-	#include "WiiUShaders/texture.gsh.h"
-};
-
-static const unsigned char shader_texture_colour_key[] = {
-	#include "WiiUShaders/texture_colour_key.gsh.h"
-};
-
-static VertexBufferSlot* GetVertexBufferSlot(void)
-{
-	++current_vertex_buffer_slot;
-
-	// Check if buffer needs expanding
-	if (current_vertex_buffer_slot > local_vertex_buffer_size)
-	{
-		local_vertex_buffer_size = 1;
-
-		while (current_vertex_buffer_slot > local_vertex_buffer_size)
-			local_vertex_buffer_size <<= 1;
-
-		VertexBufferSlot *new_vertex_buffer = (VertexBufferSlot*)realloc(local_vertex_buffer, local_vertex_buffer_size * sizeof(VertexBufferSlot));
-
-		if (new_vertex_buffer != NULL)
-		{
-			local_vertex_buffer = new_vertex_buffer;
-		}
-		else
-		{
-			Backend_PrintError("Couldn't expand vertex buffer");
-			return NULL;
-		}
-	}
-
-	return &local_vertex_buffer[current_vertex_buffer_slot - 1];
-}
-
-static void FlushVertexBuffer(void)
-{
-	static size_t vertex_buffer_size = 1;
-
-	if (current_vertex_buffer_slot == 0)
-		return;
-
-	// Make sure the buffers aren't currently being used before we modify them
-	GX2DrawDone();
-
-	// Upload vertex buffer to VBO, growing it if necessary
-	if (local_vertex_buffer_size > vertex_buffer_size)
-	{
-		vertex_buffer_size = local_vertex_buffer_size;
-
-		GX2RDestroyBufferEx(&vertex_buffer, (GX2RResourceFlags)0);
-
-		vertex_buffer.elemCount = vertex_buffer_size;
-
-		GX2RCreateBuffer(&vertex_buffer);	// We're basically screwed if this fails
-
-		GX2RSetAttributeBuffer(&vertex_buffer, 0, sizeof(Vertex), offsetof(Vertex, position));
-		GX2RSetAttributeBuffer(&vertex_buffer, 1, sizeof(Vertex), offsetof(Vertex, texture));
-	}
-
-	void *vertex_pointer = GX2RLockBufferEx(&vertex_buffer, (GX2RResourceFlags)0);
-
-	memcpy(vertex_pointer, local_vertex_buffer, current_vertex_buffer_slot * sizeof(VertexBufferSlot));
-
-	GX2RUnlockBufferEx(&vertex_buffer, (GX2RResourceFlags)0);
-
-	GX2DrawEx(GX2_PRIMITIVE_MODE_QUADS, 4 * current_vertex_buffer_slot, 0, 1);
-
-	current_vertex_buffer_slot = 0;
-}
-
-static void Blit(RenderBackend_Surface *source_surface, const RenderBackend_Rect *source_rect, RenderBackend_Surface *destination_surface, const RenderBackend_Rect *destination_rect, bool colour_key)
-{
-	const RenderMode render_mode = (colour_key ? MODE_DRAW_SURFACE_WITH_TRANSPARENCY : MODE_DRAW_SURFACE);
-
-	// Flush vertex data if a context-change is needed
-	if (last_render_mode != render_mode || last_source_texture != &source_surface->texture || last_destination_texture != &destination_surface->texture)
-	{
-		FlushVertexBuffer();
-
-		last_render_mode = render_mode;
-		last_source_texture = &source_surface->texture;
-		last_destination_texture = &destination_surface->texture;
-
-		// Draw to the selected texture, instead of the screen
-		GX2SetColorBuffer(&destination_surface->colour_buffer, GX2_RENDER_TARGET_0);
-		GX2SetViewport(0.0f, 0.0f, (float)destination_surface->colour_buffer.surface.width, (float)destination_surface->colour_buffer.surface.height, 0.0f, 1.0f);
-		GX2SetScissor(0, 0, destination_surface->colour_buffer.surface.width, destination_surface->colour_buffer.surface.height);
-
-		// Select shader
-		WHBGfxShaderGroup *shader = colour_key ? &shader_group_texture_colour_key : &shader_group_texture;
-
-		// Bind it
-		GX2SetFetchShader(&shader->fetchShader);
-		GX2SetVertexShader(shader->vertexShader);
-		GX2SetPixelShader(shader->pixelShader);
-
-		// Set shader uniforms
-		const float vertex_coordinate_transform[4] = {2.0f / destination_surface->texture.surface.width, -2.0f / destination_surface->texture.surface.height, 1.0f, 1.0f};
-		GX2SetVertexUniformReg(shader->vertexShader->uniformVars[0].offset, 4, (uint32_t*)vertex_coordinate_transform);
-
-		const float texture_coordinate_transform[4] = {1.0f / source_surface->texture.surface.width, 1.0f / source_surface->texture.surface.height, 1.0f, 1.0f};
-		GX2SetVertexUniformReg(shader->vertexShader->uniformVars[1].offset, 4, (uint32_t*)texture_coordinate_transform);
-
-		// Bind misc. data
-		GX2SetPixelSampler(&sampler_point, shader->pixelShader->samplerVars[0].location);
-		GX2SetPixelTexture(&source_surface->texture, shader->pixelShader->samplerVars[0].location);
-
-		// Disable blending
-		GX2SetColorControl(GX2_LOGIC_OP_COPY, 0, FALSE, TRUE);
-	}
-
-	VertexBufferSlot *vertex_buffer_slot = GetVertexBufferSlot();
-
-	if (vertex_buffer_slot != NULL)
-	{
-		// Set vertex position buffer
-		const float vertex_left = destination_rect->left;
-		const float vertex_top = destination_rect->top;
-		const float vertex_right = destination_rect->right;
-		const float vertex_bottom = destination_rect->bottom;
-
-		vertex_buffer_slot->vertices[0].position.x = vertex_left;
-		vertex_buffer_slot->vertices[0].position.y = vertex_top;
-		vertex_buffer_slot->vertices[1].position.x = vertex_right;
-		vertex_buffer_slot->vertices[1].position.y = vertex_top;
-		vertex_buffer_slot->vertices[2].position.x = vertex_right;
-		vertex_buffer_slot->vertices[2].position.y = vertex_bottom;
-		vertex_buffer_slot->vertices[3].position.x = vertex_left;
-		vertex_buffer_slot->vertices[3].position.y = vertex_bottom;
-
-		// Set texture coordinate buffer
-		const float texture_left = source_rect->left;
-		const float texture_top = source_rect->top;
-		const float texture_right = source_rect->right;
-		const float texture_bottom = source_rect->bottom;
-
-		vertex_buffer_slot->vertices[0].texture.x = texture_left;
-		vertex_buffer_slot->vertices[0].texture.y = texture_top;
-		vertex_buffer_slot->vertices[1].texture.x = texture_right;
-		vertex_buffer_slot->vertices[1].texture.y = texture_top;
-		vertex_buffer_slot->vertices[2].texture.x = texture_right;
-		vertex_buffer_slot->vertices[2].texture.y = texture_bottom;
-		vertex_buffer_slot->vertices[3].texture.x = texture_left;
-		vertex_buffer_slot->vertices[3].texture.y = texture_bottom;
-	}
-}
-
-RenderBackend_Surface* RenderBackend_Init(const char *window_title, size_t screen_width, size_t screen_height, bool fullscreen)
-{
-	(void)window_title;
-	(void)fullscreen;
-
-	if (WHBGfxInit())
-	{
-		// Initialise the shaders
-
-		// Texture shader
-		if (WHBGfxLoadGFDShaderGroup(&shader_group_texture, 0, shader_texture))
-		{
-			WHBGfxInitShaderAttribute(&shader_group_texture, "input_vertex_coordinates", 0, 0, GX2_ATTRIB_FORMAT_FLOAT_32_32);
-			WHBGfxInitShaderAttribute(&shader_group_texture, "input_texture_coordinates", 1, 0, GX2_ATTRIB_FORMAT_FLOAT_32_32);
-			WHBGfxInitFetchShader(&shader_group_texture);
-
-			// Texture shader (with colour-key)
-			if (WHBGfxLoadGFDShaderGroup(&shader_group_texture_colour_key, 0, shader_texture_colour_key))
-			{
-				WHBGfxInitShaderAttribute(&shader_group_texture_colour_key, "input_vertex_coordinates", 0, 0, GX2_ATTRIB_FORMAT_FLOAT_32_32);
-				WHBGfxInitShaderAttribute(&shader_group_texture_colour_key, "input_texture_coordinates", 1, 0, GX2_ATTRIB_FORMAT_FLOAT_32_32);
-				WHBGfxInitFetchShader(&shader_group_texture_colour_key);
-
-				// Colour-fill shader
-				if (WHBGfxLoadGFDShaderGroup(&shader_group_colour_fill, 0, shader_colour_fill))
-				{
-					WHBGfxInitShaderAttribute(&shader_group_colour_fill, "input_vertex_coordinates", 0, 0, GX2_ATTRIB_FORMAT_FLOAT_32_32);
-					WHBGfxInitFetchShader(&shader_group_colour_fill);
-
-					// Glyph shader
-					if (WHBGfxLoadGFDShaderGroup(&shader_group_glyph, 0, shader_glyph))
-					{
-						WHBGfxInitShaderAttribute(&shader_group_glyph, "input_vertex_coordinates", 0, 0, GX2_ATTRIB_FORMAT_FLOAT_32_32);
-						WHBGfxInitShaderAttribute(&shader_group_glyph, "input_texture_coordinates", 1, 0, GX2_ATTRIB_FORMAT_FLOAT_32_32);
-						WHBGfxInitFetchShader(&shader_group_glyph);
-
-						// Initialise samplers
-						GX2InitSampler(&sampler_point, GX2_TEX_CLAMP_MODE_CLAMP, GX2_TEX_XY_FILTER_MODE_POINT);
-						GX2InitSampler(&sampler_linear, GX2_TEX_CLAMP_MODE_CLAMP, GX2_TEX_XY_FILTER_MODE_LINEAR);
-
-						// Initialise vertex buffer
-						vertex_buffer.flags = (GX2RResourceFlags)(GX2R_RESOURCE_BIND_VERTEX_BUFFER |
-																  GX2R_RESOURCE_USAGE_CPU_READ |
-																  GX2R_RESOURCE_USAGE_CPU_WRITE |
-																  GX2R_RESOURCE_USAGE_GPU_READ);
-						vertex_buffer.elemSize = sizeof(VertexBufferSlot);
-						vertex_buffer.elemCount = 1;
-
-						if (GX2RCreateBuffer(&vertex_buffer))
-						{
-							// Create framebuffer surface
-							framebuffer_surface = RenderBackend_CreateSurface(screen_width, screen_height, true);
-
-							if (framebuffer_surface != NULL)
-							{
-								// Create upscaled framebuffer surface
-								size_t tv_width, tv_height;
-
-								switch (GX2GetSystemTVScanMode())
-								{
-									case GX2_TV_SCAN_MODE_480I:
-									case GX2_TV_SCAN_MODE_480P:
-										tv_width = 854;
-										tv_height = 480;
-										break;
-
-									case GX2_TV_SCAN_MODE_576I:
-									case GX2_TV_SCAN_MODE_720P:
-										tv_width = 1280;
-										tv_height = 720;
-										break;
-
-									case GX2_TV_SCAN_MODE_1080I:
-									case GX2_TV_SCAN_MODE_1080P:
-										tv_width = 1920;
-										tv_height = 1080;
-										break;
-								}
-
-								size_t upscale_factor = MAX(1, MIN((tv_width + screen_width / 2) / screen_width, (tv_height + screen_height / 2) / screen_height));
-
-								upscaled_framebuffer_surface_tv = RenderBackend_CreateSurface(screen_width * upscale_factor, screen_height * upscale_factor, true);
-
-								if (upscaled_framebuffer_surface_tv != NULL)
-								{
-									// Create upscaled framebuffer surface
-									size_t drc_width = 854;
-									size_t drc_height = 480;
-
-									size_t upscale_factor = MAX(1, MIN((drc_width + screen_width / 2) / screen_width, (drc_height + screen_height / 2) / screen_height));
-
-									upscaled_framebuffer_surface_drc = RenderBackend_CreateSurface(screen_width * upscale_factor, screen_height * upscale_factor, true);
-
-									if (upscaled_framebuffer_surface_drc != NULL)
-									{
-										// From what I can tell, there isn't a 'global context' in GX2: instead there are context objects.
-										// wut internally uses (and *switches to*) its own contexts, so we need to maintain one too,
-										// and make sure we're always switching back to it when wut is done doing what it's doing.
-										gx2_context = (GX2ContextState*)aligned_alloc(GX2_CONTEXT_STATE_ALIGNMENT, sizeof(GX2ContextState));
-
-										if (gx2_context != NULL)
-										{
-											memset(gx2_context, 0, sizeof(GX2ContextState));
-											GX2SetupContextStateEx(gx2_context, TRUE);
-											GX2SetContextState(gx2_context);
-
-											// Disable depth-test (enabled by default for some reason)
-											GX2SetDepthOnlyControl(FALSE, FALSE, GX2_COMPARE_FUNC_ALWAYS);
-
-											GX2RSetAttributeBuffer(&vertex_buffer, 0, sizeof(Vertex), offsetof(Vertex, position));
-											GX2RSetAttributeBuffer(&vertex_buffer, 1, sizeof(Vertex), offsetof(Vertex, texture));
-
-											return framebuffer_surface;
-										}
-										else
-										{
-											Backend_PrintError("Couldn't allocate memory for the GX2 context");
-										}
-
-										RenderBackend_FreeSurface(upscaled_framebuffer_surface_drc);
-									}
-									else
-									{
-										Backend_PrintError("Couldn't create the DRC upscaled framebuffer surface");
-									}
-
-									RenderBackend_FreeSurface(upscaled_framebuffer_surface_tv);
-								}
-								else
-								{
-									Backend_PrintError("Couldn't create the TV upscaled framebuffer surface");
-								}
-
-								RenderBackend_FreeSurface(framebuffer_surface);
-							}
-							else
-							{
-								Backend_PrintError("Couldn't create the framebuffer surface");
-							}
-						}
-						else
-						{
-							Backend_PrintError("Couldn't create the vertex buffer");
-						}
-
-						WHBGfxFreeShaderGroup(&shader_group_glyph);
-					}
-					else
-					{
-						Backend_PrintError("Couldn't create the glyph shader");
-					}
-
-					WHBGfxFreeShaderGroup(&shader_group_colour_fill);
-				}
-				else
-				{
-					Backend_PrintError("Couldn't create the colour-fill shader");
-				}
-
-				WHBGfxFreeShaderGroup(&shader_group_texture_colour_key);
-			}
-			else
-			{
-				Backend_PrintError("Couldn't create the texture colour-key shader");
-			}
-
-			WHBGfxFreeShaderGroup(&shader_group_texture);
-		}
-		else
-		{
-			Backend_PrintError("Couldn't create the texture shader");
-		}
-
-		WHBGfxShutdown();
-	}
-	else
-	{
-		Backend_PrintError("WHBGfxInit failed");
-	}
-
-	return NULL;
-}
-
-void RenderBackend_Deinit(void)
-{
-	free(gx2_context);
-
-	RenderBackend_FreeSurface(framebuffer_surface);
-
-	GX2RDestroyBufferEx(&vertex_buffer, (GX2RResourceFlags)0);
-
-	WHBGfxFreeShaderGroup(&shader_group_glyph);
-	WHBGfxFreeShaderGroup(&shader_group_colour_fill);
-	WHBGfxFreeShaderGroup(&shader_group_texture_colour_key);
-	WHBGfxFreeShaderGroup(&shader_group_texture);
-
-	WHBGfxShutdown();
-}
-
-void RenderBackend_DrawScreen(void)
-{
-	FlushVertexBuffer();
-	last_render_mode = MODE_BLANK;
-	last_source_texture = NULL;
-	last_destination_texture = NULL;
-
-	RenderBackend_Rect source_rect;
-
-	source_rect.left = 0;
-	source_rect.top = 0;
-	source_rect.right = framebuffer_surface->texture.surface.width;
-	source_rect.bottom = framebuffer_surface->texture.surface.height;
-
-	RenderBackend_Rect destination_rect;
-	destination_rect.left = 0;
-	destination_rect.top = 0;
-	destination_rect.right = upscaled_framebuffer_surface_tv->texture.surface.width;
-	destination_rect.bottom = upscaled_framebuffer_surface_tv->texture.surface.height;
-
-	Blit(framebuffer_surface, &source_rect, upscaled_framebuffer_surface_tv, &destination_rect, false);
-
-	destination_rect.right = upscaled_framebuffer_surface_drc->texture.surface.width;
-	destination_rect.bottom = upscaled_framebuffer_surface_drc->texture.surface.height;
-
-	Blit(framebuffer_surface, &source_rect, upscaled_framebuffer_surface_drc, &destination_rect, false);
-
-	// Make sure the buffers aren't currently being used before we modify them
-	GX2DrawDone();
-
-	VertexBufferSlot *vertex_buffer_slot = (VertexBufferSlot*)GX2RLockBufferEx(&vertex_buffer, (GX2RResourceFlags)0);
-
-	// Set buffer to (4:3) full-screen
-	vertex_buffer_slot->vertices[0].position.x = -12.0f / 16.0f + 1.0f;
-	vertex_buffer_slot->vertices[0].position.y = -2.0f;
-	vertex_buffer_slot->vertices[1].position.x = 12.0f / 16.0f + 1.0f;
-	vertex_buffer_slot->vertices[1].position.y = -2.0f;
-	vertex_buffer_slot->vertices[2].position.x = 12.0f / 16.0f + 1.0f;
-	vertex_buffer_slot->vertices[2].position.y = 0.0f;
-	vertex_buffer_slot->vertices[3].position.x = -12.0f / 16.0f + 1.0f;
-	vertex_buffer_slot->vertices[3].position.y = 0.0f;
-
-	// Set buffer to full-texture
-	vertex_buffer_slot->vertices[0].texture.x = 0.0f;
-	vertex_buffer_slot->vertices[0].texture.y = 1.0f;
-	vertex_buffer_slot->vertices[1].texture.x = 1.0f;
-	vertex_buffer_slot->vertices[1].texture.y = 1.0f;
-	vertex_buffer_slot->vertices[2].texture.x = 1.0f;
-	vertex_buffer_slot->vertices[2].texture.y = 0.0f;
-	vertex_buffer_slot->vertices[3].texture.x = 0.0f;
-	vertex_buffer_slot->vertices[3].texture.y = 0.0f;
-
-	GX2RUnlockBufferEx(&vertex_buffer, (GX2RResourceFlags)0);
-
-	// Disable blending
-	GX2SetColorControl(GX2_LOGIC_OP_COPY, 0, FALSE, TRUE);
-
-	// For some dumbass reason, despite being a vec2, this needs padding to a vec4
-	const float plain_vec4[4] = {1.0f, 1.0f, 1.0f, 1.0f};
-
-	// Start drawing
-	WHBGfxBeginRender();
-
-	////////////////////
-	// Draw to the TV //
-	////////////////////
-
-	WHBGfxBeginRenderTV();
-	WHBGfxClearColor(0.0f, 0.0f, 0.0f, 1.0f);
-
-	// This might be needed? Not sure.
-//	GX2RInvalidateSurface(&framebuffer_surface->texture.surface, 0, (GX2RResourceFlags)0);
-
-	// Select texture shader
-	GX2SetFetchShader(&shader_group_texture.fetchShader);
-	GX2SetVertexShader(shader_group_texture.vertexShader);
-	GX2SetPixelShader(shader_group_texture.pixelShader);
-
-	// Set shader uniforms
-	GX2SetVertexUniformReg(shader_group_texture.vertexShader->uniformVars[0].offset, 4, (uint32_t*)plain_vec4);
-	GX2SetVertexUniformReg(shader_group_texture.vertexShader->uniformVars[1].offset, 4, (uint32_t*)plain_vec4);
-
-	// Bind a few things
-	GX2SetPixelSampler(&sampler_linear, shader_group_texture.pixelShader->samplerVars[0].location);
-	GX2SetPixelTexture(&upscaled_framebuffer_surface_tv->texture, shader_group_texture.pixelShader->samplerVars[0].location);
-	GX2RSetAttributeBuffer(&vertex_buffer, 0, sizeof(Vertex), offsetof(Vertex, position));
-	GX2RSetAttributeBuffer(&vertex_buffer, 1, sizeof(Vertex), offsetof(Vertex, texture));
-
-	// Draw
-	GX2DrawEx(GX2_PRIMITIVE_MODE_QUADS, 4, 0, 1);
-
-	WHBGfxFinishRenderTV();
-
-	/////////////////////////
-	// Draw to the gamepad //
-	/////////////////////////
-
-	WHBGfxBeginRenderDRC();
-	WHBGfxClearColor(0.0f, 0.0f, 0.0f, 1.0f);
-
-	// This might be needed? Not sure.
-//	GX2RInvalidateSurface(&framebuffer_surface->texture.surface, 0, (GX2RResourceFlags)0);
-
-	// Select texture shader
-	GX2SetFetchShader(&shader_group_texture.fetchShader);
-	GX2SetVertexShader(shader_group_texture.vertexShader);
-	GX2SetPixelShader(shader_group_texture.pixelShader);
-
-	// Set shader uniforms
-	GX2SetVertexUniformReg(shader_group_texture.vertexShader->uniformVars[0].offset, 4, (uint32_t*)plain_vec4);
-	GX2SetVertexUniformReg(shader_group_texture.vertexShader->uniformVars[1].offset, 4, (uint32_t*)plain_vec4);
-
-	// Bind a few things
-	GX2SetPixelSampler(&sampler_linear, shader_group_texture.pixelShader->samplerVars[0].location);
-	GX2SetPixelTexture(&upscaled_framebuffer_surface_drc->texture, shader_group_texture.pixelShader->samplerVars[0].location);
-	GX2RSetAttributeBuffer(&vertex_buffer, 0, sizeof(Vertex), offsetof(Vertex, position));
-	GX2RSetAttributeBuffer(&vertex_buffer, 1, sizeof(Vertex), offsetof(Vertex, texture));
-
-	// Draw
-	GX2DrawEx(GX2_PRIMITIVE_MODE_QUADS, 4, 0, 1);
-
-	WHBGfxFinishRenderDRC();
-
-	WHBGfxFinishRender();
-
-	// Switch back to our context
-	GX2SetContextState(gx2_context);
-}
-
-RenderBackend_Surface* RenderBackend_CreateSurface(size_t width, size_t height, bool render_target)
-{
-	RenderBackend_Surface *surface = (RenderBackend_Surface*)malloc(sizeof(RenderBackend_Surface));
-
-	if (surface != NULL)
-	{
-		surface->render_target = render_target;
-
-		// Initialise texture
-		memset(&surface->texture, 0, sizeof(surface->texture));
-		surface->texture.surface.width = width;
-		surface->texture.surface.height = height;
-		surface->texture.surface.format = GX2_SURFACE_FORMAT_UNORM_R8_G8_B8_A8;
-		surface->texture.surface.depth = 1;
-		surface->texture.surface.dim = GX2_SURFACE_DIM_TEXTURE_2D;
-		surface->texture.surface.tileMode = GX2_TILE_MODE_LINEAR_ALIGNED;
-		surface->texture.surface.mipLevels = 1;
-		surface->texture.viewNumMips = 1;
-		surface->texture.viewNumSlices = 1;
-		surface->texture.compMap = 0x00010203;
-		GX2CalcSurfaceSizeAndAlignment(&surface->texture.surface);
-		GX2InitTextureRegs(&surface->texture);
-
-		GX2RResourceFlags resource_flags = (GX2RResourceFlags)(GX2R_RESOURCE_BIND_TEXTURE |
-		                                                       GX2R_RESOURCE_USAGE_CPU_WRITE | GX2R_RESOURCE_USAGE_CPU_READ |
-		                                                       GX2R_RESOURCE_USAGE_GPU_WRITE | GX2R_RESOURCE_USAGE_GPU_READ);
-
-		if (render_target)
-			resource_flags = (GX2RResourceFlags)(resource_flags | GX2R_RESOURCE_BIND_COLOR_BUFFER);
-
-		if (GX2RCreateSurface(&surface->texture.surface, resource_flags))
-		{
-			if (!render_target)
-			{
-				return surface;
-			}
-			else
-			{
-				// Initialise colour buffer (needed so the texture can be drawn to)
-				memset(&surface->colour_buffer, 0, sizeof(surface->colour_buffer));
-				surface->colour_buffer.surface = surface->texture.surface;
-				surface->colour_buffer.viewNumSlices = 1;
-				GX2InitColorBufferRegs(&surface->colour_buffer);
-
-				if (GX2RCreateSurfaceUserMemory(&surface->colour_buffer.surface, (uint8_t*)surface->texture.surface.image, (uint8_t*)surface->texture.surface.mipmaps, surface->texture.surface.resourceFlags))
-					return surface;
-				else
-					Backend_PrintError("GX2RCreateSurfaceUserMemory failed in RenderBackend_CreateSurface");
-
-				GX2RDestroySurfaceEx(&surface->texture.surface, (GX2RResourceFlags)0);
-			}
-		}
-		else
-		{
-			Backend_PrintError("GX2RCreateSurface failed in RenderBackend_CreateSurface");
-		}
-
-		free(surface);
-	}
-
-	return NULL;
-}
-
-void RenderBackend_FreeSurface(RenderBackend_Surface *surface)
-{
-	// Flush the vertex buffer if we're about to destroy its texture
-	if (&surface->texture == last_source_texture)
-	{
-		FlushVertexBuffer();
-		last_source_texture = NULL;
-	}
-
-	if (&surface->texture == last_destination_texture)
-	{
-		FlushVertexBuffer();
-		last_destination_texture = NULL;
-	}
-
-	if (surface->render_target)
-		GX2RDestroySurfaceEx(&surface->colour_buffer.surface, (GX2RResourceFlags)0);
-
-	GX2RDestroySurfaceEx(&surface->texture.surface, (GX2RResourceFlags)0);
-	free(surface);
-}
-
-bool RenderBackend_IsSurfaceLost(RenderBackend_Surface *surface)
-{
-	(void)surface;
-
-	return false;
-}
-
-void RenderBackend_RestoreSurface(RenderBackend_Surface *surface)
-{
-	(void)surface;
-}
-
-void RenderBackend_UploadSurface(RenderBackend_Surface *surface, const unsigned char *pixels, size_t width, size_t height)
-{
-	// Flush the vertex buffer if we're about to modify its texture
-	if (&surface->texture == last_source_texture || &surface->texture == last_destination_texture)
-		FlushVertexBuffer();
-
-	// Convert from RGB24 to RGBA32, and upload it to the GPU texture
-	unsigned char *buffer = (unsigned char*)GX2RLockSurfaceEx(&surface->texture.surface, 0, (GX2RResourceFlags)0);
-
-	if (buffer != NULL)
-	{
-		const unsigned char *in_pointer = pixels;
-
-		for (size_t y = 0; y < height; ++y)
-		{
-			unsigned char *out_pointer = &buffer[y * surface->texture.surface.pitch * 4];
-
-			for (size_t x = 0; x < width; ++x)
-			{
-				*out_pointer++ = *in_pointer++;
-				*out_pointer++ = *in_pointer++;
-				*out_pointer++ = *in_pointer++;
-				*out_pointer++ = 0;
-			}
-		}
-
-		GX2RUnlockSurfaceEx(&surface->texture.surface, 0, (GX2RResourceFlags)0);
-	}
-}
-
-void RenderBackend_Blit(RenderBackend_Surface *source_surface, const RenderBackend_Rect *rect, RenderBackend_Surface *destination_surface, long x, long y, bool colour_key)
-{
-	RenderBackend_Rect destination_rect = {x, y, x + (rect->right - rect->left), y + (rect->bottom - rect->top)};
-
-	Blit(source_surface, rect, destination_surface, &destination_rect, colour_key);
-}
-
-void RenderBackend_ColourFill(RenderBackend_Surface *surface, const RenderBackend_Rect *rect, unsigned char red, unsigned char green, unsigned char blue)
-{
-	static unsigned char last_red;
-	static unsigned char last_green;
-	static unsigned char last_blue;
-
-	// Flush vertex data if a context-change is needed
-	if (last_render_mode != MODE_COLOUR_FILL || last_destination_texture != &surface->texture || last_red != red || last_green != green || last_blue != blue)
-	{
-		FlushVertexBuffer();
-
-		last_render_mode = MODE_COLOUR_FILL;
-		last_source_texture = NULL;
-		last_destination_texture = &surface->texture;
-		last_red = red;
-		last_green = green;
-		last_blue = blue;
-
-		// Draw to the selected texture, instead of the screen
-		GX2SetColorBuffer(&surface->colour_buffer, GX2_RENDER_TARGET_0);
-		GX2SetViewport(0.0f, 0.0f, (float)surface->colour_buffer.surface.width, (float)surface->colour_buffer.surface.height, 0.0f, 1.0f);
-		GX2SetScissor(0, 0, (float)surface->colour_buffer.surface.width, (float)surface->colour_buffer.surface.height);
-
-		// Bind the colour-fill shader
-		GX2SetFetchShader(&shader_group_colour_fill.fetchShader);
-		GX2SetVertexShader(shader_group_colour_fill.vertexShader);
-		GX2SetPixelShader(shader_group_colour_fill.pixelShader);
-
-		// Set shader uniforms
-		const float vertex_coordinate_transform[4] = {2.0f / surface->texture.surface.width, -2.0f / surface->texture.surface.height, 1.0f, 1.0f};
-		GX2SetVertexUniformReg(shader_group_colour_fill.vertexShader->uniformVars[0].offset, 4, (uint32_t*)vertex_coordinate_transform);
-
-		const float uniform_colours[4] = {red / 255.0f, green / 255.0f, blue / 255.0f, 1.0f};
-		GX2SetPixelUniformReg(shader_group_colour_fill.pixelShader->uniformVars[0].offset, 4, (uint32_t*)&uniform_colours);
-
-		// Disable blending
-		GX2SetColorControl(GX2_LOGIC_OP_COPY, 0, FALSE, TRUE);
-	}
-
-	VertexBufferSlot *vertex_buffer_slot = GetVertexBufferSlot();
-
-	if (vertex_buffer_slot != NULL)
-	{
-		// Set vertex position buffer
-		const float vertex_left = rect->left;
-		const float vertex_top = rect->top;
-		const float vertex_right = rect->right;
-		const float vertex_bottom = rect->bottom;
-
-		vertex_buffer_slot->vertices[0].position.x = vertex_left;
-		vertex_buffer_slot->vertices[0].position.y = vertex_top;
-		vertex_buffer_slot->vertices[1].position.x = vertex_right;
-		vertex_buffer_slot->vertices[1].position.y = vertex_top;
-		vertex_buffer_slot->vertices[2].position.x = vertex_right;
-		vertex_buffer_slot->vertices[2].position.y = vertex_bottom;
-		vertex_buffer_slot->vertices[3].position.x = vertex_left;
-		vertex_buffer_slot->vertices[3].position.y = vertex_bottom;
-	}
-}
-
-RenderBackend_GlyphAtlas* RenderBackend_CreateGlyphAtlas(size_t width, size_t height)
-{
-	RenderBackend_GlyphAtlas *atlas = (RenderBackend_GlyphAtlas*)malloc(sizeof(RenderBackend_GlyphAtlas));
-
-	if (atlas != NULL)
-	{
-		// Initialise texture
-		memset(&atlas->texture, 0, sizeof(atlas->texture));
-		atlas->texture.surface.width = width;
-		atlas->texture.surface.height = height;
-		atlas->texture.surface.format = GX2_SURFACE_FORMAT_UNORM_R8;
-		atlas->texture.surface.depth = 1;
-		atlas->texture.surface.dim = GX2_SURFACE_DIM_TEXTURE_2D;
-		atlas->texture.surface.tileMode = GX2_TILE_MODE_LINEAR_ALIGNED;
-		atlas->texture.surface.mipLevels = 1;
-		atlas->texture.viewNumMips = 1;
-		atlas->texture.viewNumSlices = 1;
-		atlas->texture.compMap = 0x00000000;
-		GX2CalcSurfaceSizeAndAlignment(&atlas->texture.surface);
-		GX2InitTextureRegs(&atlas->texture);
-
-		if (GX2RCreateSurface(&atlas->texture.surface, (GX2RResourceFlags)(GX2R_RESOURCE_BIND_TEXTURE |
-		                                                                   GX2R_RESOURCE_USAGE_CPU_WRITE | GX2R_RESOURCE_USAGE_CPU_READ |
-		                                                                   GX2R_RESOURCE_USAGE_GPU_WRITE | GX2R_RESOURCE_USAGE_GPU_READ)))
-		{
-			return atlas;
-		}
-		else
-		{
-			Backend_PrintError("GX2RCreateSurface failed in RenderBackend_CreateGlyphAtlas");
-		}
-
-		free(atlas);
-	}
-
-	return NULL;
-}
-
-void RenderBackend_DestroyGlyphAtlas(RenderBackend_GlyphAtlas *atlas)
-{
-	GX2RDestroySurfaceEx(&atlas->texture.surface, (GX2RResourceFlags)0);
-	free(atlas);
-}
-
-void RenderBackend_UploadGlyph(RenderBackend_GlyphAtlas *atlas, size_t x, size_t y, const unsigned char *pixels, size_t width, size_t height, size_t pitch)
-{
-	unsigned char *buffer = (unsigned char*)GX2RLockSurfaceEx(&atlas->texture.surface, 0, (GX2RResourceFlags)0);
-
-	const unsigned char *in_pointer = pixels;
-	unsigned char *out_pointer = &buffer[y * atlas->texture.surface.pitch + x];
-
-	for (size_t iy = 0; iy < height; ++iy)
-	{
-		memcpy(out_pointer, in_pointer, width);
-
-		in_pointer += pitch;
-		out_pointer += atlas->texture.surface.pitch;
-	}
-
-	GX2RUnlockSurfaceEx(&atlas->texture.surface, 0, (GX2RResourceFlags)0);
-}
-
-void RenderBackend_PrepareToDrawGlyphs(RenderBackend_GlyphAtlas *atlas, RenderBackend_Surface *destination_surface, unsigned char red, unsigned char green, unsigned char blue)
-{
-	static unsigned char last_red;
-	static unsigned char last_green;
-	static unsigned char last_blue;
-
-	// Flush vertex data if a context-change is needed
-	if (last_render_mode != MODE_DRAW_GLYPH || last_destination_texture != &destination_surface->texture || last_source_texture != &atlas->texture || last_red != red || last_green != green || last_blue != blue)
-	{
-		FlushVertexBuffer();
-
-		last_render_mode = MODE_DRAW_GLYPH;
-		last_destination_texture = &destination_surface->texture;
-		last_source_texture = &atlas->texture;
-		last_red = red;
-		last_green = green;
-		last_blue = blue;
-
-		// Draw to the selected texture, instead of the screen
-		GX2SetColorBuffer(&destination_surface->colour_buffer, GX2_RENDER_TARGET_0);
-		GX2SetViewport(0.0f, 0.0f, (float)destination_surface->colour_buffer.surface.width, (float)destination_surface->colour_buffer.surface.height, 0.0f, 1.0f);
-		GX2SetScissor(0, 0, destination_surface->colour_buffer.surface.width, destination_surface->colour_buffer.surface.height);
-
-		// Select glyph shader
-		GX2SetFetchShader(&shader_group_glyph.fetchShader);
-		GX2SetVertexShader(shader_group_glyph.vertexShader);
-		GX2SetPixelShader(shader_group_glyph.pixelShader);
-
-		// Set shader uniforms
-		const float vertex_coordinate_transform[4] = {2.0f / destination_surface->texture.surface.width, -2.0f / destination_surface->texture.surface.height, 1.0f, 1.0f};
-		GX2SetVertexUniformReg(shader_group_glyph.vertexShader->uniformVars[0].offset, 4, (uint32_t*)vertex_coordinate_transform);
-
-		const float texture_coordinate_transform[4] = {1.0f / atlas->texture.surface.width, 1.0f / atlas->texture.surface.height, 1.0f, 1.0f};
-		GX2SetVertexUniformReg(shader_group_glyph.vertexShader->uniformVars[1].offset, 4, (uint32_t*)texture_coordinate_transform);
-
-		const float uniform_colours[4] = {red / 255.0f, green / 255.0f, blue / 255.0f, 1.0f};
-		GX2SetPixelUniformReg(shader_group_glyph.pixelShader->uniformVars[0].offset, 4, (uint32_t*)&uniform_colours);
-
-		// Bind misc. data
-		GX2SetPixelSampler(&sampler_point, shader_group_glyph.pixelShader->samplerVars[0].location);
-		GX2SetPixelTexture(&atlas->texture, shader_group_glyph.pixelShader->samplerVars[0].location);
-
-		// Enable blending
-		GX2SetColorControl(GX2_LOGIC_OP_COPY, 0xFF, FALSE, TRUE);
-	}
-}
-
-void RenderBackend_DrawGlyph(long x, long y, size_t glyph_x, size_t glyph_y, size_t glyph_width, size_t glyph_height)
-{
-	VertexBufferSlot *vertex_buffer_slot = GetVertexBufferSlot();
-
-	if (vertex_buffer_slot != NULL)
-	{
-		// Set vertex position buffer
-		const float vertex_left = x;
-		const float vertex_top = y;
-		const float vertex_right = x + glyph_width;
-		const float vertex_bottom = y + glyph_height;
-
-		vertex_buffer_slot->vertices[0].position.x = vertex_left;
-		vertex_buffer_slot->vertices[0].position.y = vertex_top;
-		vertex_buffer_slot->vertices[1].position.x = vertex_right;
-		vertex_buffer_slot->vertices[1].position.y = vertex_top;
-		vertex_buffer_slot->vertices[2].position.x = vertex_right;
-		vertex_buffer_slot->vertices[2].position.y = vertex_bottom;
-		vertex_buffer_slot->vertices[3].position.x = vertex_left;
-		vertex_buffer_slot->vertices[3].position.y = vertex_bottom;
-
-		// Set texture coordinate buffer
-		const float texture_left = glyph_x;
-		const float texture_top = glyph_y;
-		const float texture_right = glyph_x + glyph_width;
-		const float texture_bottom = glyph_y + glyph_height;
-
-		vertex_buffer_slot->vertices[0].texture.x = texture_left;
-		vertex_buffer_slot->vertices[0].texture.y = texture_top;
-		vertex_buffer_slot->vertices[1].texture.x = texture_right;
-		vertex_buffer_slot->vertices[1].texture.y = texture_top;
-		vertex_buffer_slot->vertices[2].texture.x = texture_right;
-		vertex_buffer_slot->vertices[2].texture.y = texture_bottom;
-		vertex_buffer_slot->vertices[3].texture.x = texture_left;
-		vertex_buffer_slot->vertices[3].texture.y = texture_bottom;
-	}
-}
-
-void RenderBackend_HandleRenderTargetLoss(void)
-{
-	// Doesn't happen on the Wii U
-}
-
-void RenderBackend_HandleWindowResize(size_t width, size_t height)
-{
-	(void)width;
-	(void)height;
-
-	// Doesn't happen on the Wii U
-}
diff --git a/src/Backends/Rendering/WiiUShaders/colour_fill.gsh.h b/src/Backends/Rendering/WiiUShaders/colour_fill.gsh.h
deleted file mode 100644
index ac833a58..00000000
--- a/src/Backends/Rendering/WiiUShaders/colour_fill.gsh.h
+++ /dev/null
@@ -1,25 +0,0 @@
-71,102,120,50,0,0,0,32,0,0,0,7,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,66,76,75,123,0,0,0,32,0,0,0,1,0,0,0,0,0,0,0,3,0,0,1,192,0,0,0,0,0,0,0,0,
-0,0,1,2,0,0,0,0,0,0,0,0,0,0,0,1,255,255,255,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,255,255,255,254,
-0,0,0,1,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,
-0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,
-0,0,0,255,0,0,0,0,0,0,0,14,0,0,0,16,0,0,1,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,208,96,1,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,1,208,96,1,72,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,202,112,1,88,0,0,0,9,0,0,0,1,
-0,0,0,0,255,255,255,255,202,112,1,108,0,0,0,9,0,0,0,0,0,0,0,0,118,101,114,116,101,120,95,116,114,97,110,115,102,111,114,109,0,0,0,0,105,110,112,117,116,95,118,101,114,116,101,120,95,99,111,111,114,100,105,110,
-97,116,101,115,0,0,0,0,208,96,0,232,208,96,1,8,202,112,1,52,202,112,1,72,125,66,76,75,0,0,0,40,0,0,0,0,0,0,1,136,208,96,0,0,0,0,0,48,208,96,1,88,0,0,0,0,0,0,0,4,208,96,1,136,
-66,76,75,123,0,0,0,32,0,0,0,1,0,0,0,0,0,0,0,5,0,0,1,64,0,0,0,1,0,0,0,0,0,0,0,0,0,0,128,9,32,0,0,0,0,0,24,160,60,160,0,0,136,6,0,148,0,64,0,0,255,15,0,148,
-39,0,0,0,0,0,0,160,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,4,160,0,128,0,0,0,1,0,32,0,128,0,0,32,1,8,0,0,144,12,32,64,1,12,0,128,144,12,32,96,
-254,164,31,2,16,0,32,0,254,160,159,128,16,0,32,32,0,0,128,63,0,0,128,63,0,0,0,128,0,13,0,0,66,76,75,123,0,0,0,32,0,0,0,1,0,0,0,0,0,0,0,6,0,0,1,52,0,0,0,2,0,0,0,0,
-0,0,0,1,0,0,0,2,20,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,1,0,0,0,16,0,0,0,0,0,0,1,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,208,96,0,232,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,202,112,0,252,0,0,0,11,0,0,0,1,0,0,0,0,255,255,255,255,99,111,108,111,
-117,114,0,0,208,96,0,188,202,112,0,232,125,66,76,75,0,0,0,40,0,0,0,0,0,0,1,4,208,96,0,0,0,0,0,8,208,96,0,252,0,0,0,0,0,0,0,2,208,96,1,4,66,76,75,123,0,0,0,32,0,0,0,1,
-0,0,0,0,0,0,0,7,0,0,1,32,0,0,0,3,0,0,0,0,32,0,0,0,0,0,12,160,0,0,0,0,136,6,32,148,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,144,12,0,0,0,5,0,0,144,12,0,32,0,9,0,0,144,12,0,64,0,13,0,128,144,12,0,96,66,76,75,123,0,0,0,32,0,0,0,1,
-0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,4,0,0,0,0
diff --git a/src/Backends/Rendering/WiiUShaders/glyph.gsh.h b/src/Backends/Rendering/WiiUShaders/glyph.gsh.h
deleted file mode 100644
index 3d4c93c6..00000000
--- a/src/Backends/Rendering/WiiUShaders/glyph.gsh.h
+++ /dev/null
@@ -1,29 +0,0 @@
-71,102,120,50,0,0,0,32,0,0,0,7,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,66,76,75,123,0,0,0,32,0,0,0,1,0,0,0,0,0,0,0,3,0,0,2,40,0,0,0,0,0,0,0,0,
-0,0,1,3,0,0,0,0,0,0,0,0,0,0,0,1,255,255,255,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,255,255,255,252,
-0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,
-0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,
-0,0,0,255,0,0,0,0,0,0,0,14,0,0,0,16,0,0,1,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,208,96,1,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,2,208,96,1,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,202,112,1,124,0,0,0,9,0,0,0,1,
-0,0,0,4,255,255,255,255,202,112,1,144,0,0,0,9,0,0,0,1,0,0,0,0,255,255,255,255,202,112,1,176,0,0,0,9,0,0,0,0,0,0,0,1,202,112,1,204,0,0,0,9,0,0,0,0,0,0,0,0,118,101,114,116,
-101,120,95,116,114,97,110,115,102,111,114,109,0,0,0,0,116,101,120,116,117,114,101,95,99,111,111,114,100,105,110,97,116,101,95,116,114,97,110,115,102,111,114,109,0,0,0,0,105,110,112,117,116,95,116,101,120,116,117,114,101,95,99,111,
-111,114,100,105,110,97,116,101,115,0,0,0,105,110,112,117,116,95,118,101,114,116,101,120,95,99,111,111,114,100,105,110,97,116,101,115,0,0,0,0,208,96,0,232,208,96,1,8,202,112,1,52,202,112,1,72,202,112,1,92,202,112,1,108,
-125,66,76,75,0,0,0,40,0,0,0,0,0,0,1,232,208,96,0,0,0,0,0,108,208,96,1,124,0,0,0,0,0,0,0,6,208,96,1,232,66,76,75,123,0,0,0,32,0,0,0,1,0,0,0,0,0,0,0,5,0,0,1,80,
-0,0,0,1,0,0,0,0,0,0,0,0,0,0,128,9,32,0,0,0,0,0,32,160,60,160,0,0,136,6,0,148,0,64,0,0,136,4,0,20,41,0,0,0,0,0,0,160,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,1,0,32,0,144,0,0,0,1,4,160,0,144,0,0,32,2,36,160,0,128,0,8,64,2,32,32,0,128,0,8,96,2,8,0,128,144,12,32,64,254,172,31,2,16,0,32,0,254,168,159,0,16,0,32,32,
-2,12,0,128,144,12,32,96,0,0,128,63,0,0,128,63,0,0,0,128,0,13,0,0,66,76,75,123,0,0,0,32,0,0,0,1,0,0,0,0,0,0,0,6,0,0,1,76,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,2,
-20,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,1,0,0,0,16,0,0,0,0,0,0,1,144,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,208,96,0,232,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,1,208,96,0,252,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,202,112,1,8,0,0,0,11,0,0,0,1,0,0,0,0,255,255,255,255,202,112,1,16,0,0,0,1,0,0,0,0,
-99,111,108,111,117,114,0,0,116,101,120,0,208,96,0,188,208,96,0,212,202,112,0,232,202,112,0,252,125,66,76,75,0,0,0,40,0,0,0,0,0,0,1,20,208,96,0,0,0,0,0,12,208,96,1,8,0,0,0,0,0,0,0,4,
-208,96,1,20,66,76,75,123,0,0,0,32,0,0,0,1,0,0,0,0,0,0,0,7,0,0,1,144,0,0,0,3,0,0,0,0,48,0,0,0,0,0,192,128,32,0,0,0,0,0,12,160,0,0,0,0,136,6,32,148,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,144,12,0,0,0,5,0,0,144,12,0,32,0,9,0,0,144,12,0,64,0,12,160,129,
-144,0,0,96,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,254,3,240,0,0,128,16,0,0,0,0,66,76,75,123,0,0,0,32,0,0,0,1,
-0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,4,0,0,0,0
diff --git a/src/Backends/Rendering/WiiUShaders/shader sources/colour_fill.frag b/src/Backends/Rendering/WiiUShaders/shader sources/colour_fill.frag
deleted file mode 100644
index d97ea944..00000000
--- a/src/Backends/Rendering/WiiUShaders/shader sources/colour_fill.frag	
+++ /dev/null
@@ -1,7 +0,0 @@
-#version 150 core
-layout(location = 0) uniform vec4 colour;
-out vec4 fragment;
-void main()
-{
-	fragment = colour;
-}
\ No newline at end of file
diff --git a/src/Backends/Rendering/WiiUShaders/shader sources/colour_fill.gsh b/src/Backends/Rendering/WiiUShaders/shader sources/colour_fill.gsh
deleted file mode 100644
index a3abb542874bc48668ce1d1098c55c65e117eab5..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1556
zcmd^9Jx>Bb5Pgd$LOg}S!p`lqG=|c|i;X7w1ME10kdPopj>C``lPf7H=)J<9VPQ?h
z&)`QG&Ns`QA(vA-O>~mCZ+2!sXJ+@JJvsrPi7i4A1>!@_udg21(S-O!HmJTD%`|F#
zyo%!(#J3_-IcP~r*Nw&WOW?NHC8|7*Bb|(>xvOd!+j>|0m+OYF^jTls&|fCZ-6dGG
zbrYMJdf)Pc)~Fu%jozT``FCRM^!me~o_Ly`=ihdEji5CU-`vH5XDD%<8gco^#L;{t
zK5jFnU*wo$WN#6R`Zy=Qn@J4Pyl`k()-nV8(P;#Xi<rV;vMQJ!iW!JZ3%#O0)G8}N
z$onYXjjUA(nAqA;HbSzyd_E{t>03rmAz3q4XDe{{4v-VyB3F}IO5cqVeNVPn2{~00
z%g<AVTgoB$9z>L8lNHuH7FpwG{aGJx^lcO7a#Hh6uj>tcQ@bzpFETaD`ZTMR$TC-?
zz?!vkV#>cuY5Ms$0ipnQB<;AUr^5eA7~zS{8}lWTwfr<>hxN#sg_{#UlM~LcBu?*$
Cqp64h

diff --git a/src/Backends/Rendering/WiiUShaders/shader sources/colour_fill.psh b/src/Backends/Rendering/WiiUShaders/shader sources/colour_fill.psh
deleted file mode 100644
index 200306e7..00000000
--- a/src/Backends/Rendering/WiiUShaders/shader sources/colour_fill.psh	
+++ /dev/null
@@ -1,18 +0,0 @@
-; $MODE = "UniformRegister"
-; $NUM_SPI_PS_INPUT_CNTL = 1
-; $SPI_PS_INPUT_CNTL[0].semantic = 0
-; $SPI_PS_INPUT_CNTL[0].default_val = 1
-; $UNIFORM_VARS[0].name = "colour"
-; $UNIFORM_VARS[0].type = "vec4"
-; $UNIFORM_VARS[0].count = 1
-; $UNIFORM_VARS[0].offset = 0
-; $UNIFORM_VARS[0].block = -1
-
-00 ALU: ADDR(32) CNT(4) 
-      0  x: MOV         R0.x,  C0.x      
-         y: MOV         R0.y,  C0.y      
-         z: MOV         R0.z,  C0.z      
-         w: MOV         R0.w,  C0.w      
-01 EXP_DONE: PIX0, R0
-END_OF_PROGRAM
-
diff --git a/src/Backends/Rendering/WiiUShaders/shader sources/glyph.frag b/src/Backends/Rendering/WiiUShaders/shader sources/glyph.frag
deleted file mode 100644
index 37063a6e..00000000
--- a/src/Backends/Rendering/WiiUShaders/shader sources/glyph.frag	
+++ /dev/null
@@ -1,9 +0,0 @@
-#version 150 core
-layout(location = 0) uniform sampler2D tex;
-layout(location = 0) uniform vec4 colour;
-in vec2 texture_coordinates;
-out vec4 fragment;
-void main()
-{
-	fragment = vec4(colour.rgb, colour.a * texture(tex, texture_coordinates).r);
-}
diff --git a/src/Backends/Rendering/WiiUShaders/shader sources/glyph.gsh b/src/Backends/Rendering/WiiUShaders/shader sources/glyph.gsh
deleted file mode 100644
index 211a69f71e6ba98d5c9ba28fac2a339661bc59e0..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1812
zcmd^9Jxc>Y5S_imnBb`?(z}I)b|RL7!A8Lp{s18-8bOG;a9$*!LhMqeNbi*v7XAPW
z>tJEwk4Whc2#N3QT|Nz3Nk9kQ&di&+z1_K)+dHdniiig00R>pVKz4Hn*Kjnz7$t_3
zwb10M;15LgdOZPt6h48Z4iw+l-@8Y82EZ$22}t88hjb>ydUMp)1UKq3el$vaXSd4g
z2JsZYd&gNUaE%ep)DYZL#6gLI|2pE!Rl)NM)x7T=moCp-?}AAn{EAn|pSZ4fdR{vA
z3*+(gQn}*izh+(H*)SIEI^2LEd2^(VJ0@|4Enpuw0*be25QL+CP{?7n6p_n2QWCJ+
zQ~GEws&)U{Bej;&d_r`v9f;Hu(v&Q8Tr%sVMFO*m4%Hu874F0aQ1O6TTdRT8B$>6e
zrgp5P)Ec(Vb{|))G;+HS_h?qFE!*%8YPS;t>5C#$>Yc#uIlQ7j-->nyBs2xOZ-&GS
z*5&XVoI{G4iO?LbioG~=2Nrq$PsRj2ngp=`n9D`8#{G?d;uhVCXXb`I{tUdg%F+fp
z6TO{5jAC;RjD^{SotaW={7cQ*&A)NOB)`<O(RM&pPw1v`|HFbxH*8!K6A!KV=Y!6Q
e9o(VUo!>5jX{K)M1M^|bDc{TV0?rZVSv~<j9NGr}

diff --git a/src/Backends/Rendering/WiiUShaders/shader sources/glyph.psh b/src/Backends/Rendering/WiiUShaders/shader sources/glyph.psh
deleted file mode 100644
index 2cc4ccb4..00000000
--- a/src/Backends/Rendering/WiiUShaders/shader sources/glyph.psh	
+++ /dev/null
@@ -1,23 +0,0 @@
-; $MODE = "UniformRegister"
-; $SAMPLER_VARS[0].name= "tex"
-; $SAMPLER_VARS[0].type= "sampler2D"
-; $SAMPLER_VARS[0].location = 0
-; $NUM_SPI_PS_INPUT_CNTL = 1
-; $SPI_PS_INPUT_CNTL[0].semantic = 0
-; $SPI_PS_INPUT_CNTL[0].default_val = 1
-; $UNIFORM_VARS[0].name = "colour"
-; $UNIFORM_VARS[0].type = "vec4"
-; $UNIFORM_VARS[0].count = 1
-; $UNIFORM_VARS[0].offset = 0
-; $UNIFORM_VARS[0].block = -1
-
-00 TEX: ADDR(48) CNT(1) VALID_PIX 
-      0  SAMPLE R0.___x, R0.xy0x, t0, s0
-01 ALU: ADDR(32) CNT(4) 
-      1  x: MOV         R0.x,  C0.x      
-         y: MOV         R0.y,  C0.y      
-         z: MOV         R0.z,  C0.z      
-         w: MUL         R0.w,  R0.w,  C0.w      
-02 EXP_DONE: PIX0, R0
-END_OF_PROGRAM
-
diff --git a/src/Backends/Rendering/WiiUShaders/shader sources/plain.vert b/src/Backends/Rendering/WiiUShaders/shader sources/plain.vert
deleted file mode 100644
index 110afd3b..00000000
--- a/src/Backends/Rendering/WiiUShaders/shader sources/plain.vert	
+++ /dev/null
@@ -1,7 +0,0 @@
-#version 150 core
-layout(location = 0) uniform vec2 vertex_transform;
-layout(location = 0) in vec4 input_vertex_coordinates;
-void main() 
-{ 
-	gl_Position = vec4(input_vertex_coordinates.x * vertex_transform.x - 1.0f, input_vertex_coordinates.y * vertex_transform.y + 1.0f, input_vertex_coordinates.zw);
-} 
diff --git a/src/Backends/Rendering/WiiUShaders/shader sources/plain.vsh b/src/Backends/Rendering/WiiUShaders/shader sources/plain.vsh
deleted file mode 100644
index c3a348e0..00000000
--- a/src/Backends/Rendering/WiiUShaders/shader sources/plain.vsh	
+++ /dev/null
@@ -1,30 +0,0 @@
-; $MODE = "UniformRegister"
-
-; $UNIFORM_VARS[0].name = "vertex_transform"
-; $UNIFORM_VARS[0].type = "vec2"
-; $UNIFORM_VARS[0].count = 1
-; $UNIFORM_VARS[0].offset = 0
-; $UNIFORM_VARS[0].block = -1
-
-; $ATTRIB_VARS[0].name = "input_vertex_coordinates"
-; $ATTRIB_VARS[0].type = "vec2"
-; $ATTRIB_VARS[0].location = 0
-
-; $NUM_SPI_VS_OUT_ID = 1
-; $SPI_VS_OUT_ID[0].SEMANTIC_0 = 0
-
-00 CALL_FS NO_BARRIER 
-01 ALU: ADDR(32) CNT(7) 
-      0  x: MUL         ____,  R1.y,  C0.y      
-         y: MUL         ____,  R1.x,  C0.x      
-         z: MOV         R1.z,  R1.z      
-         w: MOV         R1.w,  R1.w      
-      1  x: ADD         R1.x,  PV0.y, -1.0f      
-         y: ADD         R1.y,  PV0.x,  1.0f      
-02 EXP_DONE: POS0, R1
-03 EXP_DONE: PARAM0, R0.____
-04 ALU: ADDR(39) CNT(1) 
-      2  x: NOP         ____      
-05 NOP NO_BARRIER 
-END_OF_PROGRAM
-
diff --git a/src/Backends/Rendering/WiiUShaders/shader sources/texture.frag b/src/Backends/Rendering/WiiUShaders/shader sources/texture.frag
deleted file mode 100644
index ebddb478..00000000
--- a/src/Backends/Rendering/WiiUShaders/shader sources/texture.frag	
+++ /dev/null
@@ -1,8 +0,0 @@
-#version 150 core
-layout(location = 0) uniform sampler2D tex;
-in vec2 texture_coordinates;
-out vec4 fragment;
-void main()
-{
-	fragment = texture(tex, texture_coordinates);
-}
\ No newline at end of file
diff --git a/src/Backends/Rendering/WiiUShaders/shader sources/texture.gsh b/src/Backends/Rendering/WiiUShaders/shader sources/texture.gsh
deleted file mode 100644
index 8a8cf1560fa2713c19c812c993502adbf3a26615..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1696
zcmd^9F;Bu!5WZI{mIRc6!NJ5gIOu8^O(ZUw=-}u;LW!1y1c8)dNYtbwBLlk~9US}t
z4$j1Z!5_is4<OX<URx~K=t!cMeDChQyT0~a@7{5>yH7+CSOWy00W&!|JH3S?0gkb(
zAZ0f&c@^+yB7EN`;8)=%kTikf_eFdAOfLa=C9MNFe9AdH3!;roQCQ&OF2_r8;wO99
z5_gEF0Y10R#RAulajJ&ko<k0b1pK#{PdAqBSlzN?R~qeV)4t{;5KhOo%9qWieN}5z
z9BV#aYqUB}`FmCy&jzt@*RKsYL?e^NIHQ4YC;%rw38>$rK@bl6K_G{-sg7JeBTEYQ
zIH8YL!&*oG9;t3x@)IPz1COYeq5&15b;|ECP2{PSWT5`gDsU!l0HJ%VrMBadOGZ(X
zlC`NB<n}YNIDOjIa>$)NKA>5p)G~@UQM<zcNY4@_)H{XUFYt<Jz6INPkkBm9kr@z6
zST}<2;5lRwp$@!o72Jz+OyDrj_sN`~M-33stVMIR1x_6{X%fJ3zrO(Q!xoK!$wHq?
z#8@_YCX|IahAk87j(b&|L*0{7CBM3?dMP<j?mt@856xvi(5uQ!s8`g4I+x`W?-kgX

diff --git a/src/Backends/Rendering/WiiUShaders/shader sources/texture.psh b/src/Backends/Rendering/WiiUShaders/shader sources/texture.psh
deleted file mode 100644
index 4724c360..00000000
--- a/src/Backends/Rendering/WiiUShaders/shader sources/texture.psh	
+++ /dev/null
@@ -1,18 +0,0 @@
-; $MODE = "UniformRegister"
-; $SAMPLER_VARS[0].name= "tex"
-; $SAMPLER_VARS[0].type= "sampler2D"
-; $SAMPLER_VARS[0].location = 0
-; $NUM_SPI_PS_INPUT_CNTL = 1
-; $SPI_PS_INPUT_CNTL[0].semantic = 0
-; $SPI_PS_INPUT_CNTL[0].default_val = 1
-; $UNIFORM_VARS[0].name = "texture_coordinates"
-; $UNIFORM_VARS[0].type = "vec2"
-; $UNIFORM_VARS[0].count = 1
-; $UNIFORM_VARS[0].offset = 0
-; $UNIFORM_VARS[0].block = -1
-
-00 TEX: ADDR(32) CNT(1) VALID_PIX 
-      0  SAMPLE R0, R0.xy0x, t0, s0
-01 EXP_DONE: PIX0, R0
-END_OF_PROGRAM
-
diff --git a/src/Backends/Rendering/WiiUShaders/shader sources/texture.vert b/src/Backends/Rendering/WiiUShaders/shader sources/texture.vert
deleted file mode 100644
index a6c169bc..00000000
--- a/src/Backends/Rendering/WiiUShaders/shader sources/texture.vert	
+++ /dev/null
@@ -1,11 +0,0 @@
-#version 150 core
-layout(location = 0) uniform vec2 vertex_transform;
-layout(location = 1) uniform vec2 texture_coordinate_transform;
-layout(location = 0) in vec4 input_vertex_coordinates;
-layout(location = 1) in vec2 input_texture_coordinates;
-out vec2 texture_coordinates; 
-void main() 
-{ 
-	gl_Position = vec4(input_vertex_coordinates.x * vertex_transform.x - 1.0f, input_vertex_coordinates.y * vertex_transform.y + 1.0f, input_vertex_coordinates.zw);
-	texture_coordinates = input_texture_coordinates * texture_coordinate_transform; 
-} 
diff --git a/src/Backends/Rendering/WiiUShaders/shader sources/texture.vsh b/src/Backends/Rendering/WiiUShaders/shader sources/texture.vsh
deleted file mode 100644
index c6a37838..00000000
--- a/src/Backends/Rendering/WiiUShaders/shader sources/texture.vsh	
+++ /dev/null
@@ -1,47 +0,0 @@
-; $MODE = "UniformRegister"
-
-; $UNIFORM_VARS[0].name = "vertex_transform"
-; $UNIFORM_VARS[0].type = "vec2"
-; $UNIFORM_VARS[0].count = 1
-; $UNIFORM_VARS[0].offset = 4
-; $UNIFORM_VARS[0].block = -1
-; $UNIFORM_VARS[1].name = "texture_coordinate_transform"
-; $UNIFORM_VARS[1].type = "vec2"
-; $UNIFORM_VARS[1].count = 1
-; $UNIFORM_VARS[1].offset = 0
-; $UNIFORM_VARS[1].block = -1
-
-; $ATTRIB_VARS[0].name = "input_texture_coordinates"
-; $ATTRIB_VARS[0].type = "vec2"
-; $ATTRIB_VARS[0].location = 1
-; $ATTRIB_VARS[1].name = "input_vertex_coordinates"
-; $ATTRIB_VARS[1].type = "vec2"
-; $ATTRIB_VARS[1].location = 0
-
-; $NUM_SPI_VS_OUT_ID = 1
-; $SPI_VS_OUT_ID[0].SEMANTIC_0 = 0
-
-00 CALL_FS NO_BARRIER 
-01 ALU: ADDR(32) CNT(9) 
-      0  x: MUL         R0.x,  R1.x,  C0.x      
-         y: MUL         R0.y,  R1.y,  C0.y      
-         z: MUL         ____,  R2.y,  C1.y      VEC_120 
-         w: MUL         ____,  R2.x,  C1.x      VEC_120 
-         t: MOV         R1.z,  R2.z      
-      1  x: ADD         R1.x,  PV0.w, -1.0f      
-         y: ADD         R1.y,  PV0.z,  1.0f      
-         w: MOV         R1.w,  R2.w      
-02 EXP_DONE: POS0, R1
-03 EXP_DONE: PARAM0, R0.xyzz  NO_BARRIER 
-04 ALU: ADDR(41) CNT(1) 
-      2  x: NOP         ____      
-05 NOP NO_BARRIER 
-END_OF_PROGRAM
-
-
-
-
-
-
-
-
diff --git a/src/Backends/Rendering/WiiUShaders/shader sources/texture_colour_key.frag b/src/Backends/Rendering/WiiUShaders/shader sources/texture_colour_key.frag
deleted file mode 100644
index a1eb7c50..00000000
--- a/src/Backends/Rendering/WiiUShaders/shader sources/texture_colour_key.frag	
+++ /dev/null
@@ -1,13 +0,0 @@
-#version 150 core
-layout(location = 0) uniform sampler2D tex;
-in vec2 texture_coordinates;
-out vec4 fragment;
-void main()
-{
-	vec4 colour = texture(tex, texture_coordinates);
-
-	if (colour.r + colour.g + colour. b == 0.0f)
-		discard;
-
-	fragment = colour;
-}
diff --git a/src/Backends/Rendering/WiiUShaders/shader sources/texture_colour_key.gsh b/src/Backends/Rendering/WiiUShaders/shader sources/texture_colour_key.gsh
deleted file mode 100644
index a7a1ffb503894485f38ca88a295eadf99ade5220..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1824
zcmd^9Jxc>Y5S=|^Ji%xR5evaBEVL6zDHv=Nw6L@YB%%=nO~U0O0Tr&av`C*TEiC*2
z7M3CwDf|&B{Q;8my}ew%JhW5LfwwdBW^Qk1Z|1g+>uVySfeAnX7SNN;-JJ_K8eohv
zhLq*d<f`EJL<K=0z_-FDkn|44_eFaLq<;Z;rAz~99A%Hrh*+(H%8YP>F5|gD;w$^P
zqAn4i1Xy>1mj&)-fHQXp?!L=GiGu$!;LCZ@af|i5>l~D-$7Sb?Ng&*sQ_LTh%g)hB
z>A)=x$4^R?nw$TeRmHPmth;M}1BRqkkTz<xafS@A4dj5+D>Mkg-F{HWVYZwimo-w7
zu-h?xG~T`I=-VUJo78+lw7>3)TqmU=S?Gk!u8<b-%_=%ne`r;xi4C9<KDD-%eDTE2
zT3S;VEL*&rDV^=yEm~>hc5a(!R;{fm!xwOO8zGRM5{bF*BzE7&E28;Uv}Zv=Q=lU=
zBz|F?3D3bfq?nlq&Hk#`i+#6ek>~$pNYJA;h-lWLxmo~cijA8DaP0R7;Pts8ZQy;R
z&oyF{dCr8fFvqZU%)R5kYU(im$yJm5=xL*EpXxfP8^-+?i|3(CEl*8q>ByodbF_X&
UOk<@}Z<rNh#(b}62ogNe2QNwADgXcg

diff --git a/src/Backends/Rendering/WiiUShaders/shader sources/texture_colour_key.psh b/src/Backends/Rendering/WiiUShaders/shader sources/texture_colour_key.psh
deleted file mode 100644
index 700c1b23..00000000
--- a/src/Backends/Rendering/WiiUShaders/shader sources/texture_colour_key.psh	
+++ /dev/null
@@ -1,25 +0,0 @@
-; $MODE = "UniformRegister"
-; $SAMPLER_VARS[0].name= "tex"
-; $SAMPLER_VARS[0].type= "sampler2D"
-; $SAMPLER_VARS[0].location = 0
-; $NUM_SPI_PS_INPUT_CNTL = 1
-; $SPI_PS_INPUT_CNTL[0].semantic = 0
-; $SPI_PS_INPUT_CNTL[0].default_val = 1
-; $UNIFORM_VARS[0].name = "texture_coordinates"
-; $UNIFORM_VARS[0].type = "vec2"
-; $UNIFORM_VARS[0].count = 1
-; $UNIFORM_VARS[0].offset = 0
-; $UNIFORM_VARS[0].block = -1
-
-00 TEX: ADDR(48) CNT(1) VALID_PIX 
-      0  SAMPLE R0, R0.xy0x, t0, s0
-01 ALU: ADDR(32) CNT(3) 
-      1  y: ADD         ____,  R0.x,  R0.y      
-      2  x: ADD         ____,  R0.z,  PV1.y      
-      3  x: KILLE       ____,  PV2.x,  0.0f      
-02 EXP_DONE: PIX0, R0
-END_OF_PROGRAM
-
-
-
-
diff --git a/src/Backends/Rendering/WiiUShaders/shader sources/wtf is this.txt b/src/Backends/Rendering/WiiUShaders/shader sources/wtf is this.txt
deleted file mode 100644
index ebe11b41..00000000
--- a/src/Backends/Rendering/WiiUShaders/shader sources/wtf is this.txt	
+++ /dev/null
@@ -1,61 +0,0 @@
-#######################
-# Shader combinations #
-#######################
-
-texture.vsh + texture.psh = texture.gsh
-texture.vsh + texture_colour_key.psh = texture_colour_key.gsh
-plain.vsh + colour_fill.psh = colour_fill.gsh
-texture.vsh + glyph.psh = glyph.gsh
-
-
-##########################
-# How to compile shaders #
-##########################
-
-I'mma give it to you straight: compiling shaders for the Wii U is an absolute
-nightmare.
-
-You see, there are three major steps:
-* Compile the GLSL to assembly
-* Fill in a header by-hand
-* Assemble the assembly + header
-
-To compile, you need AMD's 'GPU ShaderAnalyzer', which is Windows-only:
-https://gpuopen.com/archive/gpu-shaderanalyzer/
-
-You then need to compile for the RV730.
-
-After that, you need to fill-in a header. The only way I was able to figure out
-what little I did was by finding examples on the internet:
-https://github.com/snickerbockers/gx2gl/tree/master/src/shaders
-https://github.com/yawut/SDL/tree/wiiu-2.0.9/src/video/wiiu/shaders
-https://github.com/devkitPro/wut/tree/master/samples/cmake/content
-
-Even now, I don't have a complete idea of exactly what everything means.
-
-Anyway, once you have *that* out of the way, you still need to assemble your
-shaders. For that, you'll need `latte-assembler` - a tool that comes with the
-Decaf emulator.
-
-For me, I needed to clone the entire source tree (and its dependencies) in order
-to build the tool successfully, which is a royal pain in the ass.
-
-For compilation, I used MSYS2+MinGW-w64. There were a couple of compilation
-errors I had to address, but nothing too hard to solve.
-
-Eventually you'll have the assembler built. With it, you can link your `.psh`
-and `.vsh` files into the final `.gsh` blob.
-
-Oh, right. I should warn you - the devs changed latte-assembler's syntax at some
-point, so all the example `.psh`/`.vsh` files I could find online were
-incompatible. That sucked. The main change was that stuff like 'float2' and
-'float4' were changed to 'vec2' and 'vec4'. Just keep that in mind, and you
-should be okay.
-
-Also, latte-assembler's 'assemble' command was originally named 'compile', and
-the other 'compile' option didn't exist. Keep that in mind if you ever find any
-documentation on how to use the tool.
-
-latte-assembler does have an option to convert straight from GLSL to `.gsh`, but
-this feature is woefully incomplete (it doesn't support `sampler2D`), and not
-worth using.
diff --git a/src/Backends/Rendering/WiiUShaders/texture.gsh.h b/src/Backends/Rendering/WiiUShaders/texture.gsh.h
deleted file mode 100644
index f42b9d5a..00000000
--- a/src/Backends/Rendering/WiiUShaders/texture.gsh.h
+++ /dev/null
@@ -1,27 +0,0 @@
-71,102,120,50,0,0,0,32,0,0,0,7,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,66,76,75,123,0,0,0,32,0,0,0,1,0,0,0,0,0,0,0,3,0,0,2,40,0,0,0,0,0,0,0,0,
-0,0,1,3,0,0,0,0,0,0,0,0,0,0,0,1,255,255,255,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,255,255,255,252,
-0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,
-0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,
-0,0,0,255,0,0,0,0,0,0,0,14,0,0,0,16,0,0,1,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,208,96,1,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,2,208,96,1,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,202,112,1,124,0,0,0,9,0,0,0,1,
-0,0,0,4,255,255,255,255,202,112,1,144,0,0,0,9,0,0,0,1,0,0,0,0,255,255,255,255,202,112,1,176,0,0,0,9,0,0,0,0,0,0,0,1,202,112,1,204,0,0,0,9,0,0,0,0,0,0,0,0,118,101,114,116,
-101,120,95,116,114,97,110,115,102,111,114,109,0,0,0,0,116,101,120,116,117,114,101,95,99,111,111,114,100,105,110,97,116,101,95,116,114,97,110,115,102,111,114,109,0,0,0,0,105,110,112,117,116,95,116,101,120,116,117,114,101,95,99,111,
-111,114,100,105,110,97,116,101,115,0,0,0,105,110,112,117,116,95,118,101,114,116,101,120,95,99,111,111,114,100,105,110,97,116,101,115,0,0,0,0,208,96,0,232,208,96,1,8,202,112,1,52,202,112,1,72,202,112,1,92,202,112,1,108,
-125,66,76,75,0,0,0,40,0,0,0,0,0,0,1,232,208,96,0,0,0,0,0,108,208,96,1,124,0,0,0,0,0,0,0,6,208,96,1,232,66,76,75,123,0,0,0,32,0,0,0,1,0,0,0,0,0,0,0,5,0,0,1,80,
-0,0,0,1,0,0,0,0,0,0,0,0,0,0,128,9,32,0,0,0,0,0,32,160,60,160,0,0,136,6,0,148,0,64,0,0,136,4,0,20,41,0,0,0,0,0,0,160,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,1,0,32,0,144,0,0,0,1,4,160,0,144,0,0,32,2,36,160,0,128,0,8,64,2,32,32,0,128,0,8,96,2,8,0,128,144,12,32,64,254,172,31,2,16,0,32,0,254,168,159,0,16,0,32,32,
-2,12,0,128,144,12,32,96,0,0,128,63,0,0,128,63,0,0,0,128,0,13,0,0,66,76,75,123,0,0,0,32,0,0,0,1,0,0,0,0,0,0,0,6,0,0,1,88,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,2,
-20,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,1,0,0,0,16,0,0,0,0,0,0,1,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,208,96,0,232,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,1,208,96,0,252,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,202,112,1,8,0,0,0,9,0,0,0,1,0,0,0,0,255,255,255,255,202,112,1,28,0,0,0,1,0,0,0,0,
-116,101,120,116,117,114,101,95,99,111,111,114,100,105,110,97,116,101,115,0,116,101,120,0,208,96,0,188,208,96,0,212,202,112,0,232,202,112,0,252,125,66,76,75,0,0,0,40,0,0,0,0,0,0,1,32,208,96,0,0,0,0,0,24,
-208,96,1,8,0,0,0,0,0,0,0,4,208,96,1,32,66,76,75,123,0,0,0,32,0,0,0,1,0,0,0,0,0,0,0,7,0,0,1,16,0,0,0,3,0,0,0,0,32,0,0,0,0,0,192,128,0,0,0,0,136,6,32,148,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,16,13,240,0,0,128,16,0,0,0,0,
-66,76,75,123,0,0,0,32,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,4,0,0,0,0
diff --git a/src/Backends/Rendering/WiiUShaders/texture_colour_key.gsh.h b/src/Backends/Rendering/WiiUShaders/texture_colour_key.gsh.h
deleted file mode 100644
index f8865258..00000000
--- a/src/Backends/Rendering/WiiUShaders/texture_colour_key.gsh.h
+++ /dev/null
@@ -1,29 +0,0 @@
-71,102,120,50,0,0,0,32,0,0,0,7,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,66,76,75,123,0,0,0,32,0,0,0,1,0,0,0,0,0,0,0,3,0,0,2,40,0,0,0,0,0,0,0,0,
-0,0,1,3,0,0,0,0,0,0,0,0,0,0,0,1,255,255,255,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,255,255,255,252,
-0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,
-0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,
-0,0,0,255,0,0,0,0,0,0,0,14,0,0,0,16,0,0,1,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,208,96,1,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,2,208,96,1,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,202,112,1,124,0,0,0,9,0,0,0,1,
-0,0,0,4,255,255,255,255,202,112,1,144,0,0,0,9,0,0,0,1,0,0,0,0,255,255,255,255,202,112,1,176,0,0,0,9,0,0,0,0,0,0,0,1,202,112,1,204,0,0,0,9,0,0,0,0,0,0,0,0,118,101,114,116,
-101,120,95,116,114,97,110,115,102,111,114,109,0,0,0,0,116,101,120,116,117,114,101,95,99,111,111,114,100,105,110,97,116,101,95,116,114,97,110,115,102,111,114,109,0,0,0,0,105,110,112,117,116,95,116,101,120,116,117,114,101,95,99,111,
-111,114,100,105,110,97,116,101,115,0,0,0,105,110,112,117,116,95,118,101,114,116,101,120,95,99,111,111,114,100,105,110,97,116,101,115,0,0,0,0,208,96,0,232,208,96,1,8,202,112,1,52,202,112,1,72,202,112,1,92,202,112,1,108,
-125,66,76,75,0,0,0,40,0,0,0,0,0,0,1,232,208,96,0,0,0,0,0,108,208,96,1,124,0,0,0,0,0,0,0,6,208,96,1,232,66,76,75,123,0,0,0,32,0,0,0,1,0,0,0,0,0,0,0,5,0,0,1,80,
-0,0,0,1,0,0,0,0,0,0,0,0,0,0,128,9,32,0,0,0,0,0,32,160,60,160,0,0,136,6,0,148,0,64,0,0,136,4,0,20,41,0,0,0,0,0,0,160,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,1,0,32,0,144,0,0,0,1,4,160,0,144,0,0,32,2,36,160,0,128,0,8,64,2,32,32,0,128,0,8,96,2,8,0,128,144,12,32,64,254,172,31,2,16,0,32,0,254,168,159,0,16,0,32,32,
-2,12,0,128,144,12,32,96,0,0,128,63,0,0,128,63,0,0,0,128,0,13,0,0,66,76,75,123,0,0,0,32,0,0,0,1,0,0,0,0,0,0,0,6,0,0,1,88,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,2,
-20,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,1,0,0,0,16,0,0,0,0,0,0,1,144,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,208,96,0,232,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,1,208,96,0,252,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,202,112,1,8,0,0,0,9,0,0,0,1,0,0,0,0,255,255,255,255,202,112,1,28,0,0,0,1,0,0,0,0,
-116,101,120,116,117,114,101,95,99,111,111,114,100,105,110,97,116,101,115,0,116,101,120,0,208,96,0,188,208,96,0,212,202,112,0,232,202,112,0,252,125,66,76,75,0,0,0,40,0,0,0,0,0,0,1,32,208,96,0,0,0,0,0,24,
-208,96,1,8,0,0,0,0,0,0,0,4,208,96,1,32,66,76,75,123,0,0,0,32,0,0,0,1,0,0,0,0,0,0,0,7,0,0,1,144,0,0,0,3,0,0,0,0,48,0,0,0,0,0,192,128,32,0,0,0,0,0,8,160,
-0,0,0,0,136,6,32,148,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,0,0,0,32,0,200,159,128,0,0,0,0,
-254,0,31,128,0,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,16,13,240,0,0,128,16,0,0,0,0,
-66,76,75,123,0,0,0,32,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,4,0,0,0,0
diff --git a/src/Backends/Rendering/Window/OpenGL.h b/src/Backends/Rendering/Window/OpenGL.h
deleted file mode 100644
index 1af1a6ec..00000000
--- a/src/Backends/Rendering/Window/OpenGL.h
+++ /dev/null
@@ -1,10 +0,0 @@
-// Released under the MIT licence.
-// See LICENCE.txt for details.
-
-#pragma once
-
-#include <stddef.h>
-
-bool WindowBackend_OpenGL_CreateWindow(const char *window_title, size_t *screen_width, size_t *screen_height, bool fullscreen);
-void WindowBackend_OpenGL_DestroyWindow(void);
-void WindowBackend_OpenGL_Display(void);
diff --git a/src/Backends/Rendering/Window/OpenGL3/GLFW3.cpp b/src/Backends/Rendering/Window/OpenGL3/GLFW3.cpp
deleted file mode 100644
index ffbdfa70..00000000
--- a/src/Backends/Rendering/Window/OpenGL3/GLFW3.cpp
+++ /dev/null
@@ -1,98 +0,0 @@
-// Released under the MIT licence.
-// See LICENCE.txt for details.
-
-#include "../OpenGL.h"
-
-#include <stddef.h>
-
-#ifndef USE_OPENGLES2
-#include <glad/glad.h>
-#endif
-#include <GLFW/glfw3.h>
-
-#include "../../../Misc.h"
-#include "../../../Shared/GLFW3.h"
-
-GLFWwindow *window;
-
-bool WindowBackend_OpenGL_CreateWindow(const char *window_title, size_t *screen_width, size_t *screen_height, bool fullscreen)
-{
-#ifdef USE_OPENGLES2
-	glfwWindowHint(GLFW_CLIENT_API, GLFW_OPENGL_ES_API);
-	glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, 2);
-	glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, 0);
-#else
-	glfwWindowHint(GLFW_CLIENT_API, GLFW_OPENGL_API);
-	glfwWindowHint(GLFW_OPENGL_PROFILE, GLFW_OPENGL_CORE_PROFILE);
-	glfwWindowHint(GLFW_OPENGL_FORWARD_COMPAT, GLFW_TRUE);
-	glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, 3);
-	glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, 2);
-#endif
-
-	GLFWmonitor *monitor = NULL;
-
-	if (fullscreen)
-	{
-		monitor = glfwGetPrimaryMonitor();
-
-		if (monitor != NULL)
-		{
-			// Use current monitor resolution, because for some reason
-			// 640x480 causes my laptop to completely freeze on Linux.
-			const GLFWvidmode *mode = glfwGetVideoMode(monitor);
-
-			*screen_width = mode->width;
-			*screen_height = mode->height;
-		}
-	}
-
-	window = glfwCreateWindow(*screen_width, *screen_height, window_title, monitor, NULL);
-
-	if (window != NULL)
-	{
-		glfwMakeContextCurrent(window);
-
-	#ifndef USE_OPENGLES2
-		if (gladLoadGLLoader((GLADloadproc)glfwGetProcAddress))
-		{
-			// Check if the platform supports OpenGL 3.2
-			if (GLAD_GL_VERSION_3_2)
-			{
-	#endif
-				glfwSwapInterval(0);	// Disable vsync
-
-				Backend_PostWindowCreation();
-
-				return true;
-	#ifndef USE_OPENGLES2
-			}
-			else
-			{
-				Backend_ShowMessageBox("Fatal error (OpenGL rendering backend)", "Your system does not support OpenGL 3.2");
-			}
-		}
-		else
-		{
-			Backend_ShowMessageBox("Fatal error (OpenGL rendering backend)", "Could not initialize OpenGL context");
-		}
-	#endif
-
-		glfwDestroyWindow(window);
-	}
-	else
-	{
-		Backend_ShowMessageBox("Fatal error (OpenGL rendering backend)", "Could not create window");
-	}
-
-	return false;
-}
-
-void WindowBackend_OpenGL_DestroyWindow(void)
-{
-	glfwDestroyWindow(window);
-}
-
-void WindowBackend_OpenGL_Display(void)
-{
-	glfwSwapBuffers(window);
-}
diff --git a/src/Backends/Rendering/Window/OpenGL3/SDL1.cpp b/src/Backends/Rendering/Window/OpenGL3/SDL1.cpp
deleted file mode 100644
index 289242dd..00000000
--- a/src/Backends/Rendering/Window/OpenGL3/SDL1.cpp
+++ /dev/null
@@ -1,60 +0,0 @@
-// Released under the MIT licence.
-// See LICENCE.txt for details.
-
-#include "../OpenGL.h"
-
-#include <stddef.h>
-#include <string>
-
-#include <glad/glad.h>
-#include "SDL.h"
-
-#include "../../../Misc.h"
-
-bool WindowBackend_OpenGL_CreateWindow(const char *window_title, size_t *screen_width, size_t *screen_height, bool fullscreen)
-{
-#ifdef SDL_GL_SWAP_CONTROL
-	if (SDL_GL_SetAttribute(SDL_GL_SWAP_CONTROL, 0) < 0)	// Disable vsync
-		Backend_PrintError("Couldn't set OpenGL swap interval: %s", SDL_GetError());
-#endif
-
-	if (SDL_SetVideoMode(*screen_width, *screen_height, 0, SDL_OPENGL | (fullscreen ? SDL_FULLSCREEN : 0)) != NULL)
-	{
-		SDL_WM_SetCaption(window_title, NULL);
-
-		if (gladLoadGLLoader((GLADloadproc)SDL_GL_GetProcAddress))
-		{
-			// Check if the platform supports OpenGL 3.2
-			if (GLAD_GL_VERSION_3_2)
-			{
-				Backend_PostWindowCreation();
-
-				return true;
-			}
-			else
-			{
-				Backend_ShowMessageBox("Fatal error (OpenGL rendering backend)", "Your system does not support OpenGL 3.2");
-			}
-		}
-		else
-		{
-			Backend_ShowMessageBox("Fatal error (OpenGL rendering backend)", "Couldn't load OpenGL functions");
-		}
-	}
-	else
-	{
-		std::string error_message = std::string("Could not create window: ") + SDL_GetError();
-		Backend_ShowMessageBox("Fatal error (OpenGL rendering backend)", error_message.c_str());
-	}
-
-	return false;
-}
-
-void WindowBackend_OpenGL_DestroyWindow(void)
-{
-}
-
-void WindowBackend_OpenGL_Display(void)
-{
-	SDL_GL_SwapBuffers();
-}
diff --git a/src/Backends/Rendering/Window/OpenGL3/SDL2.cpp b/src/Backends/Rendering/Window/OpenGL3/SDL2.cpp
deleted file mode 100644
index ad811147..00000000
--- a/src/Backends/Rendering/Window/OpenGL3/SDL2.cpp
+++ /dev/null
@@ -1,118 +0,0 @@
-// Released under the MIT licence.
-// See LICENCE.txt for details.
-
-#include "../OpenGL.h"
-
-#include <stddef.h>
-#include <string>
-
-#ifndef USE_OPENGLES2
-#include <glad/glad.h>
-#endif
-#include "SDL.h"
-
-#include "../../../Misc.h"
-#include "../../../Shared/SDL.h"
-
-SDL_Window *window;
-
-static SDL_GLContext context;
-
-bool WindowBackend_OpenGL_CreateWindow(const char *window_title, size_t *screen_width, size_t *screen_height, bool fullscreen)
-{
-#ifdef USE_OPENGLES2
-	if (SDL_GL_SetAttribute(SDL_GL_CONTEXT_PROFILE_MASK, SDL_GL_CONTEXT_PROFILE_ES) < 0)
-		Backend_PrintError("Couldn't set OpenGL context type to ES: %s", SDL_GetError());
-
-	if (SDL_GL_SetAttribute(SDL_GL_CONTEXT_FLAGS, 0) < 0)
-		Backend_PrintError("Couldn't set OpenGL context flags to 0: %s", SDL_GetError());
-
-	if (SDL_GL_SetAttribute(SDL_GL_CONTEXT_MAJOR_VERSION, 2) < 0)
-		Backend_PrintError("Couldn't set OpenGL major version to 2: %s", SDL_GetError());
-
-	if (SDL_GL_SetAttribute(SDL_GL_CONTEXT_MINOR_VERSION, 0) < 0)
-		Backend_PrintError("Couldn't set OpenGL minor version to 0: %s", SDL_GetError());
-#else
-	if (SDL_GL_SetAttribute(SDL_GL_CONTEXT_PROFILE_MASK, SDL_GL_CONTEXT_PROFILE_CORE) < 0)
-		Backend_PrintError("Couldn't set OpenGL context type to core: %s", SDL_GetError());
-
-	if (SDL_GL_SetAttribute(SDL_GL_CONTEXT_FLAGS, SDL_GL_CONTEXT_FORWARD_COMPATIBLE_FLAG) < 0)
-		Backend_PrintError("Couldn't set OpenGL forward compatibility: %s", SDL_GetError());
-
-	if (SDL_GL_SetAttribute(SDL_GL_CONTEXT_MAJOR_VERSION, 3) < 0)
-		Backend_PrintError("Couldn't set OpenGL major version to 3: %s", SDL_GetError());
-
-	if (SDL_GL_SetAttribute(SDL_GL_CONTEXT_MINOR_VERSION, 2) < 0)
-		Backend_PrintError("Couldn't set OpenGL minor verison to 2: %s", SDL_GetError());
-#endif
-
-	window = SDL_CreateWindow(window_title, SDL_WINDOWPOS_CENTERED, SDL_WINDOWPOS_CENTERED, *screen_width, *screen_height, SDL_WINDOW_RESIZABLE | SDL_WINDOW_OPENGL | (fullscreen ? SDL_WINDOW_FULLSCREEN : 0));
-
-	if (window != NULL)
-	{
-		context = SDL_GL_CreateContext(window);
-
-		if (context != NULL)
-		{
-			if (SDL_GL_MakeCurrent(window, context) == 0)
-			{
-			#ifndef USE_OPENGLES2
-				if (gladLoadGLLoader((GLADloadproc)SDL_GL_GetProcAddress))
-				{
-					// Check if the platform supports OpenGL 3.2
-					if (GLAD_GL_VERSION_3_2)
-					{
-			#endif
-						SDL_GL_SetSwapInterval(0);	// Disable vsync
-
-						Backend_PostWindowCreation();
-
-						return true;
-			#ifndef USE_OPENGLES2
-					}
-					else
-					{
-						Backend_ShowMessageBox("Fatal error (OpenGL rendering backend)", "Your system does not support OpenGL 3.2");
-					}
-				}
-				else
-				{
-					Backend_ShowMessageBox("Fatal error (OpenGL rendering backend)", "Couldn't load OpenGL functions");
-				}
-			#endif
-			}
-			else
-			{
-				std::string error_message = std::string("Couldn't setup OpenGL context for rendering: ") + SDL_GetError();
-				Backend_ShowMessageBox("Fatal error (OpenGL rendering backend)", "SDL_GL_MakeCurrent failed");
-			}
-
-			SDL_GL_DeleteContext(context);
-		}
-		else
-		{
-			std::string error_message = std::string("Couldn't create OpenGL context: %s", SDL_GetError());
-			Backend_ShowMessageBox("Fatal error (OpenGL rendering backend)", "Could not create OpenGL context");
-		}
-
-		SDL_DestroyWindow(window);
-	}
-	else
-	{
-		std::string error_message = std::string("Could not create window: ") + SDL_GetError();
-		Backend_ShowMessageBox("Fatal error (OpenGL rendering backend)", error_message.c_str());
-	}
-
-	return false;
-}
-
-void WindowBackend_OpenGL_DestroyWindow(void)
-{
-	SDL_GL_DeleteContext(context);
-	SDL_DestroyWindow(window);
-}
-
-void WindowBackend_OpenGL_Display(void)
-{
-	SDL_GL_SwapWindow(window);
-}
diff --git a/src/Backends/Rendering/Window/OpenGLES2/GLFW3.cpp b/src/Backends/Rendering/Window/OpenGLES2/GLFW3.cpp
deleted file mode 100644
index b0204a5a..00000000
--- a/src/Backends/Rendering/Window/OpenGLES2/GLFW3.cpp
+++ /dev/null
@@ -1,2 +0,0 @@
-#define USE_OPENGLES2
-#include "../OpenGL3/GLFW3.cpp"
diff --git a/src/Backends/Rendering/Window/OpenGLES2/SDL2.cpp b/src/Backends/Rendering/Window/OpenGLES2/SDL2.cpp
deleted file mode 100644
index c79532c6..00000000
--- a/src/Backends/Rendering/Window/OpenGLES2/SDL2.cpp
+++ /dev/null
@@ -1,2 +0,0 @@
-#define USE_OPENGLES2
-#include "../OpenGL3/SDL2.cpp"
diff --git a/src/Backends/Rendering/Window/Software/3DS.cpp b/src/Backends/Rendering/Window/Software/3DS.cpp
deleted file mode 100644
index 33827432..00000000
--- a/src/Backends/Rendering/Window/Software/3DS.cpp
+++ /dev/null
@@ -1,64 +0,0 @@
-// Released under the MIT licence.
-// See LICENCE.txt for details.
-
-#include "../Software.h"
-
-#include <stddef.h>
-#include <stdlib.h>
-#include <string.h>
-
-#include <3ds.h>
-
-static unsigned char *framebuffer;
-static size_t framebuffer_pitch;
-static size_t framebuffer_width;
-static size_t framebuffer_height;
-
-bool WindowBackend_Software_CreateWindow(const char *window_title, size_t screen_width, size_t screen_height, bool fullscreen)
-{
-	(void)window_title;
-	(void)fullscreen;
-
-//	gfxSetDoubleBuffering(GFX_TOP, true);
-
-	gfxSetScreenFormat(GFX_TOP, GSP_BGR8_OES);
-
-	framebuffer = (unsigned char*)malloc(screen_width * screen_height * 3);
-
-	if (framebuffer != NULL)
-	{
-		framebuffer_pitch = screen_height * 3;
-		framebuffer_width = screen_height;
-		framebuffer_height = screen_width;
-
-		return true;
-	}
-
-	return false;
-}
-
-void WindowBackend_Software_DestroyWindow(void)
-{
-	free(framebuffer);
-}
-
-unsigned char* WindowBackend_Software_GetFramebuffer(size_t *pitch)
-{
-	*pitch = framebuffer_pitch;
-
-	return framebuffer;
-}
-
-void WindowBackend_Software_Display(void)
-{
-	memcpy(gfxGetFramebuffer(GFX_TOP, GFX_LEFT, NULL, NULL) + (400 - framebuffer_height) * 240 * 3 / 2, framebuffer, framebuffer_pitch * framebuffer_height);
-
-	gfxFlushBuffers();
-	gfxScreenSwapBuffers(GFX_TOP, false);
-}
-
-void WindowBackend_Software_HandleWindowResize(size_t width, size_t height)
-{
-	(void)width;
-	(void)height;
-}
diff --git a/src/Backends/Rendering/Window/Software/GLFW3.cpp b/src/Backends/Rendering/Window/Software/GLFW3.cpp
deleted file mode 100644
index be93eb21..00000000
--- a/src/Backends/Rendering/Window/Software/GLFW3.cpp
+++ /dev/null
@@ -1,156 +0,0 @@
-// Released under the MIT licence.
-// See LICENCE.txt for details.
-
-#include "../Software.h"
-
-#include <stddef.h>
-#include <stdlib.h>
-
-#include <GLFW/glfw3.h>
-
-#include "../../../Misc.h"
-#include "../../../Shared/GLFW3.h"
-
-GLFWwindow *window;
-
-static unsigned char *framebuffer;
-static size_t framebuffer_width;
-static size_t framebuffer_height;
-
-static float framebuffer_x_ratio;
-static float framebuffer_y_ratio;
-
-static GLuint screen_texture_id;
-
-bool WindowBackend_Software_CreateWindow(const char *window_title, size_t screen_width, size_t screen_height, bool fullscreen)
-{
-	glfwWindowHint(GLFW_CLIENT_API, GLFW_OPENGL_API);
-	glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, 1);
-	glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, 0);
-
-	framebuffer_width = screen_width;
-	framebuffer_height = screen_height;
-
-	GLFWmonitor *monitor = NULL;
-
-	if (fullscreen)
-	{
-		monitor = glfwGetPrimaryMonitor();
-
-		if (monitor != NULL)
-		{
-			const GLFWvidmode *mode = glfwGetVideoMode(monitor);
-
-			screen_width = mode->width;
-			screen_height = mode->height;
-		}
-	}
-
-	window = glfwCreateWindow(screen_width, screen_height, window_title, monitor, NULL);
-
-	if (window != NULL)
-	{
-		glfwMakeContextCurrent(window);
-
-		glfwSwapInterval(0);	// Disable vsync
-
-		glClearColor(0.0f, 0.0f, 0.0f, 1.0f);
-
-		glEnable(GL_TEXTURE_2D);
-
-		WindowBackend_Software_HandleWindowResize(screen_width, screen_height);
-
-		// Create screen texture
-		glGenTextures(1, &screen_texture_id);
-		glBindTexture(GL_TEXTURE_2D, screen_texture_id);
-
-		size_t framebuffer_texture_width = 1;
-		while (framebuffer_texture_width < framebuffer_width)
-			framebuffer_texture_width <<= 1;
-
-		size_t framebuffer_texture_height = 1;
-		while (framebuffer_texture_height < framebuffer_height)
-			framebuffer_texture_height <<= 1;
-
-		glTexImage2D(GL_TEXTURE_2D, 0, GL_RGB8, framebuffer_texture_width, framebuffer_texture_height, 0, GL_RGB, GL_UNSIGNED_BYTE, NULL);
-		glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR);
-		glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);
-
-		framebuffer_x_ratio = (float)framebuffer_width / framebuffer_texture_width;
-		framebuffer_y_ratio = (float)framebuffer_height / framebuffer_texture_height;
-
-		framebuffer = (unsigned char*)malloc(framebuffer_width * framebuffer_height * 3);
-
-		Backend_PostWindowCreation();
-
-		return true;
-	}
-	else
-	{
-		Backend_ShowMessageBox("Fatal error (OpenGL rendering backend)", "Could not create window");
-	}
-
-	return false;
-}
-
-void WindowBackend_Software_DestroyWindow(void)
-{
-	free(framebuffer);
-	glDeleteTextures(1, &screen_texture_id);
-	glfwDestroyWindow(window);
-}
-
-unsigned char* WindowBackend_Software_GetFramebuffer(size_t *pitch)
-{
-	*pitch = framebuffer_width * 3;
-
-	return framebuffer;
-}
-
-void WindowBackend_Software_Display(void)
-{
-	glClear(GL_COLOR_BUFFER_BIT);
-
-	glTexSubImage2D(GL_TEXTURE_2D, 0, 0, 0, framebuffer_width, framebuffer_height, GL_RGB, GL_UNSIGNED_BYTE, framebuffer);
-
-	glBegin(GL_TRIANGLE_STRIP);
-		glTexCoord2f(0.0f, framebuffer_y_ratio);
-		glVertex2f(-1.0f, -1.0f);
-		glTexCoord2f(framebuffer_x_ratio, framebuffer_y_ratio);
-		glVertex2f(1.0f, -1.0f);
-		glTexCoord2f(0.0f, 0.0f);
-		glVertex2f(-1.0f, 1.0f);
-		glTexCoord2f(framebuffer_x_ratio, 0.0f);
-		glVertex2f(1.0f, 1.0f);
-	glEnd();
-
-	glfwSwapBuffers(window);
-}
-
-void WindowBackend_Software_HandleWindowResize(size_t width, size_t height)
-{
-	// Do some viewport trickery, to fit the framebuffer in the center of the screen
-	GLint viewport_x;
-	GLint viewport_y;
-	GLsizei viewport_width;
-	GLsizei viewport_height;
-
-	if (width * framebuffer_height > framebuffer_width * height) // Fancy way to do `if (width / height > framebuffer_width / framebuffer_height)` without floats
-	{
-		viewport_y = 0;
-		viewport_height = height;
-
-		viewport_width = (framebuffer_width * height) / framebuffer_height;
-		viewport_x = (width - viewport_width) / 2;
-	}
-	else
-	{
-		viewport_x = 0;
-		viewport_width = width;
-
-		viewport_height = (framebuffer_height * width) / framebuffer_width;
-		viewport_y = (height - viewport_height) / 2;
-	}
-
-	glViewport(viewport_x, viewport_y, viewport_width, viewport_height);
-}
diff --git a/src/Backends/Rendering/Window/Software/Null.cpp b/src/Backends/Rendering/Window/Software/Null.cpp
deleted file mode 100644
index 5d569142..00000000
--- a/src/Backends/Rendering/Window/Software/Null.cpp
+++ /dev/null
@@ -1,50 +0,0 @@
-// Released under the MIT licence.
-// See LICENCE.txt for details.
-
-#include "../Software.h"
-
-#include <stddef.h>
-#include <stdlib.h>
-
-static unsigned char *framebuffer;
-static size_t framebuffer_pitch;
-
-bool WindowBackend_Software_CreateWindow(const char *window_title, size_t screen_width, size_t screen_height, bool fullscreen)
-{
-	(void)window_title;
-	(void)fullscreen;
-
-	framebuffer = (unsigned char*)malloc(screen_width * screen_height * 3);
-
-	if (framebuffer != NULL)
-	{
-		framebuffer_pitch = screen_width * 3;
-
-		return true;
-	}
-
-	return false;
-}
-
-void WindowBackend_Software_DestroyWindow(void)
-{
-	free(framebuffer);
-}
-
-unsigned char* WindowBackend_Software_GetFramebuffer(size_t *pitch)
-{
-	*pitch = framebuffer_pitch;
-
-	return framebuffer;
-}
-
-void WindowBackend_Software_Display(void)
-{
-	
-}
-
-void WindowBackend_Software_HandleWindowResize(size_t width, size_t height)
-{
-	(void)width;
-	(void)height;
-}
diff --git a/src/Backends/Rendering/Window/Software/SDL1.cpp b/src/Backends/Rendering/Window/Software/SDL1.cpp
deleted file mode 100644
index ca96f41b..00000000
--- a/src/Backends/Rendering/Window/Software/SDL1.cpp
+++ /dev/null
@@ -1,91 +0,0 @@
-// Released under the MIT licence.
-// See LICENCE.txt for details.
-
-#include "../Software.h"
-
-#include <stddef.h>
-#include <string>
-
-#include "SDL.h"
-
-#include "../../../Misc.h"
-
-static int bits_per_pixel = 24;
-static Uint32 window_flags = SDL_HWSURFACE | SDL_DOUBLEBUF | SDL_ANYFORMAT;
-
-static SDL_Surface *window_sdlsurface;
-static SDL_Surface *framebuffer_sdlsurface;
-
-bool WindowBackend_Software_CreateWindow(const char *window_title, size_t screen_width, size_t screen_height, bool fullscreen)
-{
-	if (fullscreen)
-		window_flags |= SDL_FULLSCREEN;
-	else
-		window_flags &= ~SDL_FULLSCREEN;
-
-	window_sdlsurface = SDL_SetVideoMode(screen_width, screen_height, bits_per_pixel, window_flags);
-	if (window_sdlsurface == NULL) {
-		Backend_PrintError("Couldn't create 24bpp window: %s", SDL_GetError());
-		bits_per_pixel = 32;
-		window_sdlsurface = SDL_SetVideoMode(screen_width, screen_height, bits_per_pixel, window_flags);
-	}
-
-	if (window_sdlsurface != NULL)
-	{
-		SDL_WM_SetCaption(window_title, NULL);
-		framebuffer_sdlsurface = SDL_CreateRGBSurface(SDL_SWSURFACE, window_sdlsurface->w, window_sdlsurface->h, 24, 0x0000FF, 0x00FF00, 0xFF0000, 0);
-
-		if (framebuffer_sdlsurface != NULL)
-		{
-			SDL_LockSurface(framebuffer_sdlsurface); // If this errors then oh dear
-
-			Backend_PostWindowCreation();
-
-			return true;
-		}
-		else
-		{
-			std::string error_message = std::string("Couldn't create framebuffer surface: ") + SDL_GetError();
-			Backend_ShowMessageBox("Fatal error (software rendering backend)", error_message.c_str());
-		}
-	}
-	else
-	{
-		std::string error_message = std::string("Couldn't create window: ") + SDL_GetError();
-		Backend_ShowMessageBox("Fatal error (software rendering backend)", error_message.c_str());
-	}
-
-	return false;
-}
-
-void WindowBackend_Software_DestroyWindow(void)
-{
-	SDL_FreeSurface(framebuffer_sdlsurface);
-}
-
-unsigned char* WindowBackend_Software_GetFramebuffer(size_t *pitch)
-{
-	*pitch = framebuffer_sdlsurface->pitch;
-
-	return (unsigned char*)framebuffer_sdlsurface->pixels;
-}
-
-void WindowBackend_Software_Display(void)
-{
-	SDL_UnlockSurface(framebuffer_sdlsurface);
-
-	if (SDL_BlitSurface(framebuffer_sdlsurface, NULL, window_sdlsurface, NULL) < 0)
-		Backend_PrintError("Couldn't blit framebuffer surface to window surface: %s", SDL_GetError());
-
-	SDL_LockSurface(framebuffer_sdlsurface); // If this errors then oh dear
-
-	if (SDL_Flip(window_sdlsurface) < 0)
-		Backend_PrintError("Couldn't copy window surface to the screen: %s", SDL_GetError());
-}
-
-void WindowBackend_Software_HandleWindowResize(size_t width, size_t height)
-{
-	window_sdlsurface = SDL_SetVideoMode(width, height, bits_per_pixel, window_flags);
-	if (window_sdlsurface == NULL)
-		Backend_PrintError("Couldn't get SDL surface associated with window: %s", SDL_GetError());
-}
diff --git a/src/Backends/Rendering/Window/Software/WiiU.cpp b/src/Backends/Rendering/Window/Software/WiiU.cpp
deleted file mode 100644
index 58f8b2be..00000000
--- a/src/Backends/Rendering/Window/Software/WiiU.cpp
+++ /dev/null
@@ -1,272 +0,0 @@
-// Released under the MIT licence.
-// See LICENCE.txt for details.
-
-// Sexy new backend that bounces the software-rendered frame to the GPU,
-// eliminating V-tearing, and gaining support for rendering to the TV for
-// free!
-
-#include "../Window-Software.h"
-
-#include <stddef.h>
-#include <stdlib.h>
-#include <string.h>
-
-#include <gx2/display.h>
-#include <gx2/draw.h>
-#include <gx2/registers.h>
-#include <gx2/sampler.h>
-#include <gx2/texture.h>
-#include <gx2r/buffer.h>
-#include <gx2r/draw.h>
-#include <gx2r/resource.h>
-#include <gx2r/surface.h>
-#include <whb/gfx.h>
-
-#include "../../Attributes.h"
-
-#include "WiiUShaders/texture.gsh.h"
-
-typedef struct Viewport
-{
-	float x;
-	float y;
-	float width;
-	float height;
-} Viewport;
-
-static unsigned char *fake_framebuffer;
-
-static size_t fake_framebuffer_width;
-static size_t fake_framebuffer_height;
-
-static WHBGfxShaderGroup shader_group;
-
-static GX2RBuffer vertex_position_buffer;
-static GX2RBuffer texture_coordinate_buffer;
-
-static GX2Sampler sampler;
-
-static GX2Texture screen_texture;
-
-static Viewport tv_viewport;
-static Viewport drc_viewport;
-
-static void CalculateViewport(size_t actual_screen_width, size_t actual_screen_height, Viewport *viewport)
-{
-	if (actual_screen_width * fake_framebuffer_height > fake_framebuffer_width * actual_screen_height) // Fancy way to do `if (actual_screen_width / actual_screen_height > fake_framebuffer_width / fake_framebuffer_height)` without floats
-	{
-		viewport->y = 0.0f;
-		viewport->height = actual_screen_height;
-
-		viewport->width = (fake_framebuffer_width * actual_screen_height) / fake_framebuffer_height;
-		viewport->x = (actual_screen_width - viewport->width) / 2;
-	}
-	else
-	{
-		viewport->x = 0.0f;
-		viewport->width = actual_screen_width;
-
-		viewport->height = (fake_framebuffer_height * actual_screen_width) / fake_framebuffer_width;
-		viewport->y = (actual_screen_height - viewport->height) / 2;
-	}
-}
-
-bool WindowBackend_Software_CreateWindow(const char *window_title, size_t screen_width, size_t screen_height, bool fullscreen)
-{
-	(void)window_title;
-	(void)fullscreen;
-
-	fake_framebuffer_width = screen_width;
-	fake_framebuffer_height = screen_height;
-
-	fake_framebuffer = (unsigned char*)malloc(fake_framebuffer_width * fake_framebuffer_height * 3);
-
-	if (fake_framebuffer != NULL)
-	{
-		WHBGfxInit();
-
-		if (WHBGfxLoadGFDShaderGroup(&shader_group, 0, rtexture))
-		{
-			WHBGfxInitShaderAttribute(&shader_group, "input_vertex_coordinates", 0, 0, GX2_ATTRIB_FORMAT_FLOAT_32_32);
-			WHBGfxInitShaderAttribute(&shader_group, "input_texture_coordinates", 1, 0, GX2_ATTRIB_FORMAT_FLOAT_32_32);
-			WHBGfxInitFetchShader(&shader_group);
-
-			// Initialise vertex position buffer
-			const float vertex_positions[4][2] = {
-				{-1.0f,  1.0f},
-				{ 1.0f,  1.0f},
-				{ 1.0f, -1.0f},
-				{-1.0f, -1.0f}
-			};
-
-			vertex_position_buffer.flags = (GX2RResourceFlags)(GX2R_RESOURCE_BIND_VERTEX_BUFFER |
-			                                                   GX2R_RESOURCE_USAGE_CPU_READ |
-			                                                   GX2R_RESOURCE_USAGE_CPU_WRITE |
-			                                                   GX2R_RESOURCE_USAGE_GPU_READ);
-			vertex_position_buffer.elemSize = sizeof(vertex_positions[0]);
-			vertex_position_buffer.elemCount = sizeof(vertex_positions) / sizeof(vertex_positions[0]);
-			GX2RCreateBuffer(&vertex_position_buffer);
-			memcpy(GX2RLockBufferEx(&vertex_position_buffer, (GX2RResourceFlags)0), vertex_positions, sizeof(vertex_positions));
-			GX2RUnlockBufferEx(&vertex_position_buffer, (GX2RResourceFlags)0);
-
-			// Initialise texture coordinate buffer
-			const float texture_coordinates[4][2] = {
-				{0.0f, 0.0f},
-				{1.0f, 0.0f},
-				{1.0f, 1.0f},
-				{0.0f, 1.0f}
-			};
-
-			texture_coordinate_buffer.flags = (GX2RResourceFlags)(GX2R_RESOURCE_BIND_VERTEX_BUFFER |
-			                                                      GX2R_RESOURCE_USAGE_CPU_READ |
-			                                                      GX2R_RESOURCE_USAGE_CPU_WRITE |
-			                                                      GX2R_RESOURCE_USAGE_GPU_READ);
-			texture_coordinate_buffer.elemSize = sizeof(texture_coordinates[0]);
-			texture_coordinate_buffer.elemCount = sizeof(texture_coordinates) / sizeof(texture_coordinates[0]);
-			GX2RCreateBuffer(&texture_coordinate_buffer);
-			memcpy(GX2RLockBufferEx(&texture_coordinate_buffer, (GX2RResourceFlags)0), texture_coordinates, sizeof(texture_coordinates));
-			GX2RUnlockBufferEx(&texture_coordinate_buffer, (GX2RResourceFlags)0);
-
-			// Initialise sampler
-			GX2InitSampler(&sampler, GX2_TEX_CLAMP_MODE_CLAMP, GX2_TEX_XY_FILTER_MODE_POINT);
-
-			// Initialise screen texture
-			screen_texture.surface.width = fake_framebuffer_width;
-			screen_texture.surface.height = fake_framebuffer_height;
-			screen_texture.surface.format = GX2_SURFACE_FORMAT_UNORM_R8_G8_B8_A8;
-			screen_texture.surface.depth = 1;
-			screen_texture.surface.dim = GX2_SURFACE_DIM_TEXTURE_2D;
-			screen_texture.surface.tileMode = GX2_TILE_MODE_LINEAR_ALIGNED;
-			screen_texture.surface.mipLevels = 1;
-			screen_texture.viewNumMips = 1;
-			screen_texture.viewNumSlices = 1;
-			screen_texture.compMap = 0x00010203;
-			GX2CalcSurfaceSizeAndAlignment(&screen_texture.surface);
-			GX2InitTextureRegs(&screen_texture);
-
-			if (GX2RCreateSurface(&screen_texture.surface, (GX2RResourceFlags)(GX2R_RESOURCE_BIND_TEXTURE | GX2R_RESOURCE_BIND_COLOR_BUFFER |
-			                                                                   GX2R_RESOURCE_USAGE_CPU_WRITE | GX2R_RESOURCE_USAGE_CPU_READ |
-			                                                                   GX2R_RESOURCE_USAGE_GPU_WRITE | GX2R_RESOURCE_USAGE_GPU_READ)))
-			{
-				// Do some binding
-				GX2SetPixelSampler(&sampler, shader_group.pixelShader->samplerVars[0].location);
-				GX2SetPixelTexture(&screen_texture, shader_group.pixelShader->samplerVars[0].location);
-				GX2RSetAttributeBuffer(&vertex_position_buffer, 0, vertex_position_buffer.elemSize, 0);
-				GX2RSetAttributeBuffer(&texture_coordinate_buffer, 1, texture_coordinate_buffer.elemSize, 0);
-
-				// Calculate centred viewports
-				switch (GX2GetSystemTVScanMode())
-				{
-					// For now, we have to match WUT's broken behaviour (its `GX2TVScanMode`
-					// enum is missing values, and the rest are off-by-one)
-					//case GX2_TV_SCAN_MODE_576I:
-					case GX2_TV_SCAN_MODE_480I:	// Actually 576i
-					case GX2_TV_SCAN_MODE_480P:	// Actually 480i
-						CalculateViewport(854, 480, &tv_viewport);
-						break;
-
-					case GX2_TV_SCAN_MODE_720P:	// Actually 480p
-					default:	// Funnel the *real* 1080p into this
-						CalculateViewport(1280, 720, &tv_viewport);
-						break;
-
-					case GX2_TV_SCAN_MODE_1080I:	// Actually invalid
-					case GX2_TV_SCAN_MODE_1080P:	// Actually 1080i
-						CalculateViewport(1920, 1080, &tv_viewport);
-						break;
-				}
-
-				CalculateViewport(854, 480, &drc_viewport);
-
-				return true;
-			}
-
-			GX2RDestroyBufferEx(&texture_coordinate_buffer, (GX2RResourceFlags)0);
-			GX2RDestroyBufferEx(&vertex_position_buffer, (GX2RResourceFlags)0);
-
-			WHBGfxFreeShaderGroup(&shader_group);
-		}
-
-		WHBGfxShutdown();
-
-		free(fake_framebuffer);
-	}
-
-	return false;
-}
-
-void WindowBackend_Software_DestroyWindow(void)
-{
-	GX2RDestroySurfaceEx(&screen_texture.surface, (GX2RResourceFlags)0);
-
-	GX2RDestroyBufferEx(&texture_coordinate_buffer, (GX2RResourceFlags)0);
-	GX2RDestroyBufferEx(&vertex_position_buffer, (GX2RResourceFlags)0);
-
-	WHBGfxFreeShaderGroup(&shader_group);
-
-	WHBGfxShutdown();
-
-	free(fake_framebuffer);
-}
-
-unsigned char* WindowBackend_Software_GetFramebuffer(size_t *pitch)
-{
-	*pitch = fake_framebuffer_width * 3;
-
-	return fake_framebuffer;
-}
-
-ATTRIBUTE_HOT void WindowBackend_Software_Display(void)
-{
-	// Convert frame from RGB24 to RGBA32, and upload it to the GPU texture
-	unsigned char *framebuffer = (unsigned char*)GX2RLockSurfaceEx(&screen_texture.surface, 0, (GX2RResourceFlags)0);
-
-	const unsigned char *in_pointer = fake_framebuffer;
-
-	for (size_t y = 0; y < fake_framebuffer_height; ++y)
-	{
-		unsigned char *out_pointer = &framebuffer[screen_texture.surface.pitch * 4 * y];
-
-		for (size_t x = 0; x < fake_framebuffer_width; ++x)
-		{
-			*out_pointer++ = *in_pointer++;
-			*out_pointer++ = *in_pointer++;
-			*out_pointer++ = *in_pointer++;
-			*out_pointer++ = 0;
-		}
-	}
-
-	GX2RUnlockSurfaceEx(&screen_texture.surface, 0, (GX2RResourceFlags)0);
-
-	WHBGfxBeginRender();
-
-	// Draw to the TV
-	WHBGfxBeginRenderTV();
-	GX2SetViewport(tv_viewport.x, tv_viewport.y, tv_viewport.width, tv_viewport.height, 0.0f, 1.0f);
-	WHBGfxClearColor(0.0f, 0.0f, 0.0f, 1.0f);
-	GX2SetFetchShader(&shader_group.fetchShader);
-	GX2SetVertexShader(shader_group.vertexShader);
-	GX2SetPixelShader(shader_group.pixelShader);
-	GX2DrawEx(GX2_PRIMITIVE_MODE_QUADS, 4, 0, 1);
-	WHBGfxFinishRenderTV();
-
-	// Draw to the gamepad
-	WHBGfxBeginRenderDRC();
-	GX2SetViewport(drc_viewport.x, drc_viewport.y, drc_viewport.width, drc_viewport.height, 0.0f, 1.0f);
-	WHBGfxClearColor(0.0f, 0.0f, 0.0f, 1.0f);
-	GX2SetFetchShader(&shader_group.fetchShader);
-	GX2SetVertexShader(shader_group.vertexShader);
-	GX2SetPixelShader(shader_group.pixelShader);
-	GX2DrawEx(GX2_PRIMITIVE_MODE_QUADS, 4, 0, 1);
-	WHBGfxFinishRenderDRC();
-
-	WHBGfxFinishRender();
-}
-
-void WindowBackend_Software_HandleWindowResize(size_t width, size_t height)
-{
-	(void)width;
-	(void)height;
-
-	// The window doesn't resize on the Wii U
-}
diff --git a/src/Backends/Shared/GLFW3.h b/src/Backends/Shared/GLFW3.h
deleted file mode 100644
index 7ee871cd..00000000
--- a/src/Backends/Shared/GLFW3.h
+++ /dev/null
@@ -1,6 +0,0 @@
-// Released under the MIT licence.
-// See LICENCE.txt for details.
-
-#pragma once
-
-extern struct GLFWwindow *window;
diff --git a/src/CommonDefines.h b/src/CommonDefines.h
index 0459ac98..8bf86630 100644
--- a/src/CommonDefines.h
+++ b/src/CommonDefines.h
@@ -7,9 +7,13 @@
 
 #pragma once
 
-#define WINDOW_WIDTH 320
+#define WINDOW_WIDTH 426
 #define WINDOW_HEIGHT 240
 
+#define SPRITE_SCALE 1
+
+#define MIN(a, b) ((a) < (b) ? (a) : (b))
+
 enum Collisions
 {
 	COLL_LEFT_WALL = 1,     // Touching a left wall
diff --git a/src/Config.cpp b/src/Config.cpp
index 6bd088d9..02ce6a75 100644
--- a/src/Config.cpp
+++ b/src/Config.cpp
@@ -78,12 +78,21 @@ void DefaultConfigData(CONFIGDATA *conf)
 
 	// Reset joystick settings (as these can't simply be set to 0)
 	conf->bJoystick = TRUE;
-	conf->joystick_button[0] = 2;
-	conf->joystick_button[1] = 1;
-	conf->joystick_button[2] = 5;
-	conf->joystick_button[3] = 6;
-	conf->joystick_button[4] = 3;
-	conf->joystick_button[5] = 4;
-	conf->joystick_button[6] = 6;
-	conf->joystick_button[7] = 3;
+	conf->joystick_button[0] = 2; // shoot
+	conf->joystick_button[1] = 1; // jump
+	conf->joystick_button[2] = 1; // jump 
+	conf->joystick_button[3] = 2; // shoot
+	conf->joystick_button[4] = 6; // ARM L
+	conf->joystick_button[5] = 3; // ARM R
+	conf->joystick_button[6] = 10; // Down
+	conf->joystick_button[7] = 7; // Left
+	conf->joystick_button[8] = 9; // Up
+	conf->joystick_button[9] = 8; // Right
+	conf->joystick_button[10] = 5; // map
+	conf->joystick_button[11] = 4; // item
+	conf->joystick_button[12] = 6; // ARM L
+	conf->joystick_button[13] = 3; // ARM R
+	conf->joystick_button[14] = 0;
+	conf->joystick_button[15] = 0;
+	conf->joystick_button[16] = 0;
 }
diff --git a/src/Config.h b/src/Config.h
index ccbdf256..2cfc7c77 100644
--- a/src/Config.h
+++ b/src/Config.h
@@ -18,7 +18,7 @@ struct CONFIGDATA
 	long ok_button_mode;
 	long display_mode;
 	BOOL bJoystick;
-	long joystick_button[8];
+	long joystick_button[16];
 };
 
 extern const char* const gConfigName;
diff --git a/src/Draw.cpp b/src/Draw.cpp
index 46ee4f17..5316888e 100644
--- a/src/Draw.cpp
+++ b/src/Draw.cpp
@@ -74,7 +74,7 @@ BOOL Flip_SystemTask(void)
 		// Framerate limiter
 		timeNow = Backend_GetTicks();
 
-		if (timeNow >= timePrev + 20)
+		if (timeNow >= timePrev + 17)
 			break;
 
 		Backend_Delay(1);
@@ -83,7 +83,7 @@ BOOL Flip_SystemTask(void)
 	if (timeNow >= timePrev + 100)
 		timePrev = timeNow;	// If the timer is freakishly out of sync, panic and reset it, instead of spamming frames for who-knows how long
 	else
-		timePrev += 20;
+		timePrev += 17;
 
 	RenderBackend_DrawScreen();
 
diff --git a/src/Frame.cpp b/src/Frame.cpp
index 0e3c3ea5..b114ae48 100644
--- a/src/Frame.cpp
+++ b/src/Frame.cpp
@@ -21,18 +21,74 @@ void MoveFrame3(void)
 	short map_w, map_l;
 	GetMapData(0, &map_w, &map_l);
 
+#if WINDOW_WIDTH != 320 || WINDOW_HEIGHT != 240
+	if (g_GameFlags & 8)
+	{
+		// Use the original camera boundaries during the credits
+		const int x_delta = -((WINDOW_WIDTH - 320) / 2) * 0x200;
+		const int y_delta = -((WINDOW_HEIGHT - 240) / 2) * 0x200;
+
+		gFrame.x += (x_delta + *gFrame.tgt_x - (320 * 0x200 / 2) - gFrame.x) / gFrame.wait;
+		gFrame.y += (y_delta + *gFrame.tgt_y - (240 * 0x200 / 2) - gFrame.y) / gFrame.wait;
+
+		if (gFrame.x < x_delta)
+			gFrame.x = x_delta;
+		if (gFrame.y < y_delta)
+			gFrame.y = y_delta;
+
+		if (gFrame.x > x_delta + (((map_w - 1) * 16) - 320) * 0x200)
+			gFrame.x = x_delta + (((map_w - 1) * 16) - 320) * 0x200;
+		if (gFrame.y > y_delta + (((map_l - 1) * 16) - 240) * 0x200)
+			gFrame.y = y_delta + (((map_l - 1) * 16) - 240) * 0x200;
+	}
+	else
+	{
+		// Widescreen/tallscreen-safe behaviour
+		if ((map_w - 1) * 16 < WINDOW_WIDTH)
+		{
+			gFrame.x = -(((WINDOW_WIDTH - ((map_w - 1) * 16)) * 0x200) / 2);
+		}
+		else
+		{
+			gFrame.x += (*gFrame.tgt_x - (WINDOW_WIDTH * 0x200 / 2) - gFrame.x) / gFrame.wait;
+
+			if (gFrame.x < 0)
+				gFrame.x = 0;
+
+			if (gFrame.x > (((map_w - 1) * 16) - WINDOW_WIDTH) * 0x200)
+				gFrame.x = (((map_w - 1) * 16) - WINDOW_WIDTH) * 0x200;
+		}
+
+		if ((map_l - 1) * 16 < WINDOW_HEIGHT)
+		{
+			gFrame.y = -(((WINDOW_HEIGHT - ((map_l - 1) * 16)) * 0x200) / 2);
+		}
+		else
+		{
+			gFrame.y += (*gFrame.tgt_y - (WINDOW_HEIGHT * 0x200 / 2) - gFrame.y) / gFrame.wait;
+
+			if (gFrame.y < 0)
+				gFrame.y = 0;
+
+			if (gFrame.y > (((map_l - 1) * 16) - WINDOW_HEIGHT) * 0x200)
+				gFrame.y = (((map_l - 1) * 16) - WINDOW_HEIGHT) * 0x200;
+		}
+	}
+#else
+	// Vanilla behaviour
 	gFrame.x += (*gFrame.tgt_x - (WINDOW_WIDTH * 0x200 / 2) - gFrame.x) / gFrame.wait;
 	gFrame.y += (*gFrame.tgt_y - (WINDOW_HEIGHT * 0x200 / 2) - gFrame.y) / gFrame.wait;
 
-	if (gFrame.x / 0x200 < 0)
+	if (gFrame.x < 0)
 		gFrame.x = 0;
-	if (gFrame.y / 0x200 < 0)
+	if (gFrame.y < 0)
 		gFrame.y = 0;
 
 	if (gFrame.x > (((map_w - 1) * 16) - WINDOW_WIDTH) * 0x200)
 		gFrame.x = (((map_w - 1) * 16) - WINDOW_WIDTH) * 0x200;
 	if (gFrame.y > (((map_l - 1) * 16) - WINDOW_HEIGHT) * 0x200)
 		gFrame.y = (((map_l - 1) * 16) - WINDOW_HEIGHT) * 0x200;
+#endif
 
 	// Quake
 	if (gFrame.quake2)
@@ -49,9 +105,9 @@ void MoveFrame3(void)
 	}
 
 	// This code exists in the Linux port (v1.0.0.4), but not the Windows version (v1.0.0.6) or the Mac port
-/*	if (gFrame.x / 0x200 < 0)
+/*	if (gFrame.x < 0)
 		gFrame.x = 0;
-	if (gFrame.y / 0x200 < 0)
+	if (gFrame.y < 0)
 		gFrame.y = 0;*/
 }
 
@@ -76,15 +132,64 @@ void SetFramePosition(int fx, int fy)
 	gFrame.y = fy;
 
 	// Keep in bounds
-	if (gFrame.x / 0x200 < 0)
+#if WINDOW_WIDTH != 320 || WINDOW_HEIGHT != 240
+	if (g_GameFlags & 8)
+	{
+		// Use the original camera boundaries during the credits
+		const int x_delta = -((WINDOW_WIDTH - 320) / 2) * 0x200;
+		const int y_delta = -((WINDOW_HEIGHT - 240) / 2) * 0x200;
+
+		if (gFrame.x < x_delta)
+			gFrame.x = x_delta;
+		if (gFrame.y < y_delta)
+			gFrame.y = y_delta;
+
+		if (gFrame.x > x_delta + (((map_w - 1) * 16) - 320) * 0x200)
+			gFrame.x = x_delta + (((map_w - 1) * 16) - 320) * 0x200;
+		if (gFrame.y > y_delta + (((map_l - 1) * 16) - 240) * 0x200)
+			gFrame.y = y_delta + (((map_l - 1) * 16) - 240) * 0x200;
+	}
+	else
+	{
+		// Widescreen/tallscreen-safe behaviour
+		if ((map_w - 1) * 16 < WINDOW_WIDTH)
+		{
+			gFrame.x = -(((WINDOW_WIDTH - ((map_w - 1) * 16)) * 0x200) / 2);
+		}
+		else
+		{
+			if (gFrame.x < 0)
+				gFrame.x = 0;
+
+			if (gFrame.x > (((map_w - 1) * 16) - WINDOW_WIDTH) * 0x200)
+				gFrame.x = (((map_w - 1) * 16) - WINDOW_WIDTH) * 0x200;
+		}
+
+		if ((map_l - 1) * 16 < WINDOW_HEIGHT)
+		{
+			gFrame.y = -(((WINDOW_HEIGHT - ((map_l - 1) * 16)) * 0x200) / 2);
+		}
+		else
+		{
+			if (gFrame.y < 0)
+				gFrame.y = 0;
+
+			if (gFrame.y > (((map_l - 1) * 16) - WINDOW_HEIGHT) * 0x200)
+				gFrame.y = (((map_l - 1) * 16) - WINDOW_HEIGHT) * 0x200;
+		}
+	}
+#else
+	// Vanilla behaviour
+	if (gFrame.x < 0)
 		gFrame.x = 0;
-	if (gFrame.y / 0x200 < 0)
+	if (gFrame.y < 0)
 		gFrame.y = 0;
 
 	if (gFrame.x > (((map_w - 1) * 16) - WINDOW_WIDTH) * 0x200)
 		gFrame.x = (((map_w - 1) * 16) - WINDOW_WIDTH) * 0x200;
 	if (gFrame.y > (((map_l - 1) * 16) - WINDOW_HEIGHT) * 0x200)
 		gFrame.y = (((map_l - 1) * 16) - WINDOW_HEIGHT) * 0x200;
+#endif
 }
 
 void SetFrameMyChar(void)
@@ -101,15 +206,64 @@ void SetFrameMyChar(void)
 	gFrame.y = mc_y - ((WINDOW_HEIGHT / 2) * 0x200);
 
 	// Keep in bounds
-	if (gFrame.x / 0x200 < 0)
+#if WINDOW_WIDTH != 320 || WINDOW_HEIGHT != 240
+	if (g_GameFlags & 8)
+	{
+		// Use the original camera boundaries during the credits
+		const int x_delta = -((WINDOW_WIDTH - 320) / 2) * 0x200;
+		const int y_delta = -((WINDOW_HEIGHT - 240) / 2) * 0x200;
+
+		if (gFrame.x < x_delta)
+			gFrame.x = x_delta;
+		if (gFrame.y < y_delta)
+			gFrame.y = y_delta;
+
+		if (gFrame.x > x_delta + (((map_w - 1) * 16) - 320) * 0x200)
+			gFrame.x = x_delta + (((map_w - 1) * 16) - 320) * 0x200;
+		if (gFrame.y > y_delta + (((map_l - 1) * 16) - 240) * 0x200)
+			gFrame.y = y_delta + (((map_l - 1) * 16) - 240) * 0x200;
+	}
+	else
+	{
+		// Widescreen/tallscreen-safe behaviour
+		if ((map_w - 1) * 16 < WINDOW_WIDTH)
+		{
+			gFrame.x = -(((WINDOW_WIDTH - ((map_w - 1) * 16)) * 0x200) / 2);
+		}
+		else
+		{
+			if (gFrame.x < 0)
+				gFrame.x = 0;
+
+			if (gFrame.x > (((map_w - 1) * 16) - WINDOW_WIDTH) * 0x200)
+				gFrame.x = (((map_w - 1) * 16) - WINDOW_WIDTH) * 0x200;
+		}
+
+		if ((map_l - 1) * 16 < WINDOW_HEIGHT)
+		{
+			gFrame.y = -(((WINDOW_HEIGHT - ((map_l - 1) * 16)) * 0x200) / 2);
+		}
+		else
+		{
+			if (gFrame.y < 0)
+				gFrame.y = 0;
+
+			if (gFrame.y > (((map_l - 1) * 16) - WINDOW_HEIGHT) * 0x200)
+				gFrame.y = (((map_l - 1) * 16) - WINDOW_HEIGHT) * 0x200;
+		}
+	}
+#else
+	// Vanilla behaviour
+	if (gFrame.x < 0)
 		gFrame.x = 0;
-	if (gFrame.y / 0x200 < 0)
+	if (gFrame.y < 0)
 		gFrame.y = 0;
 
 	if (gFrame.x > (((map_w - 1) * 16) - WINDOW_WIDTH) * 0x200)
 		gFrame.x = (((map_w - 1) * 16) - WINDOW_WIDTH) * 0x200;
 	if (gFrame.y > (((map_l - 1) * 16) - WINDOW_HEIGHT) * 0x200)
 		gFrame.y = (((map_l - 1) * 16) - WINDOW_HEIGHT) * 0x200;
+#endif
 }
 
 void SetFrameTargetMyChar(int wait)
diff --git a/src/Game.cpp b/src/Game.cpp
index 982fb085..471d573a 100644
--- a/src/Game.cpp
+++ b/src/Game.cpp
@@ -312,13 +312,13 @@ static int ModeTitle(void)
 	// Set character
 	time_counter = LoadTimeCounter();
 
-	if (time_counter && time_counter < 6 * 60 * 50)	// 6 minutes
+	if (time_counter && time_counter < 6 * 60 * 60)	// 6 minutes
 		char_type = 1;
-	if (time_counter && time_counter < 5 * 60 * 50)	// 5 minutes
+	if (time_counter && time_counter < 5 * 60 * 60)	// 5 minutes
 		char_type = 2;
-	if (time_counter && time_counter < 4 * 60 * 50)	// 4 minutes
+	if (time_counter && time_counter < 4 * 60 * 60)	// 4 minutes
 		char_type = 3;
-	if (time_counter && time_counter < 3 * 60 * 50)	// 3 minutes
+	if (time_counter && time_counter < 3 * 60 * 60)	// 3 minutes
 		char_type = 4;
 
 	// Set music to character's specific music
diff --git a/src/Main.cpp b/src/Main.cpp
index cacbd514..f63deca7 100644
--- a/src/Main.cpp
+++ b/src/Main.cpp
@@ -39,7 +39,7 @@ std::string gDataPath;
 BOOL bFullscreen;
 BOOL gbUseJoystick = FALSE;
 
-int gJoystickButtonTable[8];
+int gJoystickButtonTable[16];
 
 static BOOL bActive = TRUE;
 static BOOL bFPS = FALSE;
@@ -190,7 +190,7 @@ int main(int argc, char *argv[])
 	}
 
 	// Set gamepad inputs
-	for (i = 0; i < 8; ++i)
+	for (i = 0; i < 16; ++i)
 	{
 		switch (conf.joystick_button[i])
 		{
@@ -217,6 +217,18 @@ int main(int argc, char *argv[])
 			case 5:
 				gJoystickButtonTable[i] = gKeyMap;
 				break;
+			case 7:
+				gJoystickButtonTable[i] = gKeyLeft;
+				break;
+			case 8:
+				gJoystickButtonTable[i] = gKeyRight;
+				break;
+			case 9:
+				gJoystickButtonTable[i] = gKeyUp;
+				break;
+			case 10:
+				gJoystickButtonTable[i] = gKeyDown;
+				break;
 		}
 	}
 
@@ -633,11 +645,12 @@ void JoystickProc(void)
 		gKey &= ~gKeyDown;
 
 	// Clear held buttons
-	for (i = 0; i < 8; ++i)
-		gKey &= ~gJoystickButtonTable[i];
+	for (i = 0; i < 16; ++i)
+		if (i < 6 || i > 9)
+			gKey &= ~gJoystickButtonTable[i];
 
 	// Set held buttons
-	for (i = 0; i < 8; ++i)
+	for (i = 0; i < 16; ++i)
 		if (status.bButton[i])
 			gKey |= gJoystickButtonTable[i];
 }
diff --git a/src/Main.h b/src/Main.h
index 9f29b459..f9ad6cde 100644
--- a/src/Main.h
+++ b/src/Main.h
@@ -17,7 +17,7 @@ extern std::string gDataPath;
 extern BOOL bFullscreen;
 extern BOOL gbUseJoystick;
 
-extern int gJoystickButtonTable[8];
+extern int gJoystickButtonTable[16];
 
 extern BOOL gbUseJoystick;
 
diff --git a/src/Map.cpp b/src/Map.cpp
index 9407d645..14a1e797 100644
--- a/src/Map.cpp
+++ b/src/Map.cpp
@@ -21,6 +21,9 @@
 #include "Main.h"
 #include "NpChar.h"
 
+#define MIN(a, b) ((a) < (b) ? (a) : (b))
+#define MAX(a, b) ((a) > (b) ? (a) : (b))
+
 #define PXM_BUFFER_SIZE 0x4B000
 
 MAP_DATA gMap;
@@ -157,10 +160,10 @@ void PutStage_Back(int fx, int fy)
 	int offset;
 
 	// Get range to draw
-	int num_x = ((WINDOW_WIDTH + (16 - 1)) / 16) + 1;
-	int num_y = ((WINDOW_HEIGHT + (16 - 1)) / 16) + 1;
-	int put_x = ((fx / 0x200) + 8) / 16;
-	int put_y = ((fy / 0x200) + 8) / 16;
+	int num_x = MIN(gMap.width, ((WINDOW_WIDTH + (16 - 1)) / 16) + 1);
+	int num_y = MIN(gMap.length, ((WINDOW_HEIGHT + (16 - 1)) / 16) + 1);
+	int put_x = MAX(0, ((fx / 0x200) + 8) / 16);
+	int put_y = MAX(0, ((fy / 0x200) + 8) / 16);
 
 	int atrb;
 
diff --git a/src/MycParam.cpp b/src/MycParam.cpp
index 5a69a7fb..2647fb3a 100644
--- a/src/MycParam.cpp
+++ b/src/MycParam.cpp
@@ -420,7 +420,7 @@ void PutTimeCounter(int x, int y)
 		// Draw clock and increase time
 		if (g_GameFlags & 2)
 		{
-			if (time_count < 100 * 60 * 50)	// 100 minutes
+			if (time_count < 100 * 60 * 60)	// 100 minutes
 				++time_count;
 
 			if (time_count % 30 > 10)
@@ -434,9 +434,9 @@ void PutTimeCounter(int x, int y)
 		}
 
 		// Draw time
-		PutNumber4(x,		y, time_count / (60 * 50),	FALSE);
-		PutNumber4(x + 20,	y, time_count / 50 % 60,	TRUE);
-		PutNumber4(x + 32,	y, time_count / 5 % 10,		FALSE);
+		PutNumber4(x,		y, time_count / (60 * 60),	FALSE);
+		PutNumber4(x + 20,	y, time_count / 60 % 60,	TRUE);
+		PutNumber4(x + 32,	y, time_count / 6 % 10,		FALSE);
 		PutBitmap3(&grcGame, x + 30, y, &rcTime[2], SURFACE_ID_TEXT_BOX);
 	}
 	else
